{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the MZmine 3 wiki! \u00b6 MZmine 3 is an open-source and platform-independent software for mass spectrometry (MS) data processing and visualization. It enables large-scale metabolomics and lipidomics research by spectral preprocessing, feature detection, and various options for compound identification, including spectral library querying and creation. Since the introduction of MZmine 2 in 2010, the project has matured into a community-driven, highly collaborative platform and its functions continue to expand based on the users' needs and feedbacks. This has also enabled the tight integration of the MZmine ecosystem with popular third-party software for MS data analysis, such as the SIRIUS suite for in silico metabolite annotation, the GNPS platform with Ion Identity Molecular Networking, the MetaboAnalyst web app for univariate and multivariate statistical anlysis, etc. Such a great progress was made possible by the invaluable contribution of many developers from research labs distributed all over the world! Want to get started with MZmine 3? Check out our getting started page! What's new compared to MZmine 2? \u00b6 MZmine 3 comes with a redesigned and fully customizable GUI based on the JavaFX technology that allow an interactive visualization and validation of results from every processing step. A completely new data structure provides the flexibility to process any type of mass spectrometry, including LC-MS, GC-MS and MS-imaging. Moreover, MZmine 3 now supports ion mobility, with a dedicated LC-IM-MS data visualization module and feature detection algorithms. Finally, significant effort was devoted to trace memory issues and bottlenecks, resulting in an unprecendent processing performance and scalability. COMING SOON! We are implementing the Mass Spec Query Langauge (MassQL) to explore your MS data with human-readable, succinct queries! The project is suppported by the Google Summer of Code program. About this documentation \u00b6 Here you can find documentation for both processing and visualization modules in MZmine 3. Moreover, data processing pipelines for untargeted LC-MS and LC-IMS-MS feature detection are described and general recommendations are given. COMING SOON! We are currently working on a series of short videotutorials to help get you started with the main features of MZmine 3! How to contribute \u00b6 The MZmine community is always welcoming new developers and contributions! You can contribute by improving existing modules or even adding new featurs in MZmine 3! Please, check out our brief tutorial . You can also contribute to this wiki and help new users to get started with MZmine 3! See here how to contribute to the documentation. Olena Mokshyna (6.06%), SteffenHeu (3.03%), tdamiani (66.67%), Robin Schmid (24.24%)","title":"Home page"},{"location":"index.html#welcome-to-the-mzmine-3-wiki","text":"MZmine 3 is an open-source and platform-independent software for mass spectrometry (MS) data processing and visualization. It enables large-scale metabolomics and lipidomics research by spectral preprocessing, feature detection, and various options for compound identification, including spectral library querying and creation. Since the introduction of MZmine 2 in 2010, the project has matured into a community-driven, highly collaborative platform and its functions continue to expand based on the users' needs and feedbacks. This has also enabled the tight integration of the MZmine ecosystem with popular third-party software for MS data analysis, such as the SIRIUS suite for in silico metabolite annotation, the GNPS platform with Ion Identity Molecular Networking, the MetaboAnalyst web app for univariate and multivariate statistical anlysis, etc. Such a great progress was made possible by the invaluable contribution of many developers from research labs distributed all over the world! Want to get started with MZmine 3? Check out our getting started page!","title":"Welcome to the MZmine 3 wiki!"},{"location":"index.html#whats-new-compared-to-mzmine-2","text":"MZmine 3 comes with a redesigned and fully customizable GUI based on the JavaFX technology that allow an interactive visualization and validation of results from every processing step. A completely new data structure provides the flexibility to process any type of mass spectrometry, including LC-MS, GC-MS and MS-imaging. Moreover, MZmine 3 now supports ion mobility, with a dedicated LC-IM-MS data visualization module and feature detection algorithms. Finally, significant effort was devoted to trace memory issues and bottlenecks, resulting in an unprecendent processing performance and scalability. COMING SOON! We are implementing the Mass Spec Query Langauge (MassQL) to explore your MS data with human-readable, succinct queries! The project is suppported by the Google Summer of Code program.","title":"What's new compared to MZmine 2?"},{"location":"index.html#about-this-documentation","text":"Here you can find documentation for both processing and visualization modules in MZmine 3. Moreover, data processing pipelines for untargeted LC-MS and LC-IMS-MS feature detection are described and general recommendations are given. COMING SOON! We are currently working on a series of short videotutorials to help get you started with the main features of MZmine 3!","title":"About this documentation"},{"location":"index.html#how-to-contribute","text":"The MZmine community is always welcoming new developers and contributions! You can contribute by improving existing modules or even adding new featurs in MZmine 3! Please, check out our brief tutorial . You can also contribute to this wiki and help new users to get started with MZmine 3! See here how to contribute to the documentation. Olena Mokshyna (6.06%), SteffenHeu (3.03%), tdamiani (66.67%), Robin Schmid (24.24%)","title":"How to contribute"},{"location":"citations.html","text":"Citations \u00b6 How to cite different parts of MZmine: Workflows, tools, etc.","title":"Citations"},{"location":"citations.html#citations","text":"How to cite different parts of MZmine: Workflows, tools, etc.","title":"Citations"},{"location":"commandline_tool.html","text":"Command-line arguments \u00b6 Command-line arguments offer a variety of options that generally override the corresponding parameters in the preferences. Windows An easy way to start MZmine with arguments is to create a shortcut to the MZmine.exe, right-click, and define the target with additional arguments. This example runs MZMine in batch mode (headless), imports the specified batch file, overrides the memory management to none (which is the default), effectively using memory mapping to store and access spectral, centroid, and feature data from temporary files stored in the defined temp directory. By leaving out the memory or temp arguments, the values stored in the current preferences file will be used, or the default values if no preferences file was found. Start MZmine batch with memory mapping ( DEFAULT ) \"C:\\Program Files\\MZmine\\MZmine.exe\" -batch \"D:\\batch\\my_batch_file.xml\" -memory none -temp \"D:\\tmpmzmine\" Start MZmine batch on machines with enough memory (RAM) with -memory all \"C:\\Program Files\\MZmine\\MZmine.exe\" -batch \"D:\\batch\\my_batch_file.xml\" -memory all -temp \"D:\\tmpmzmine\" Argument table \u00b6 Argument Options ( default ) Description -batch a path, e.g. \"D:\\batch.xml\" Path to batch file -memory none , all, features, centroids, raw, masses_features Defines what data is kept in memory (RAM) or otherwise memory mapped to the temp directory. Generally this setting should be none . If memory is no issue this option might be set to all process all spectral and feature data in memory. The option masses_features keeps centroid mass lists and features in memory while memory mapping raw spectral data. -temp a path, e.g., \"-temp \"D:\\tmpmzmine\\\" The defined directory should be on a fast drive (usually SSD > HDD > network drive) with enough free space. Local drives are usually preferred. MZmine uses memory mapping to efficiently store and access spectral and feature data. This can lead to a considerable temporary consumption of disk space. Make sure that the selected drive has enough space (maybe 20 GB + 1 GB/10 files; generously over estimated). Olena Mokshyna (7.41%), SteffenHeu (3.7%), Robin Schmid (88.89%)","title":"Command line tool (batch mode)"},{"location":"commandline_tool.html#command-line-arguments","text":"Command-line arguments offer a variety of options that generally override the corresponding parameters in the preferences. Windows An easy way to start MZmine with arguments is to create a shortcut to the MZmine.exe, right-click, and define the target with additional arguments. This example runs MZMine in batch mode (headless), imports the specified batch file, overrides the memory management to none (which is the default), effectively using memory mapping to store and access spectral, centroid, and feature data from temporary files stored in the defined temp directory. By leaving out the memory or temp arguments, the values stored in the current preferences file will be used, or the default values if no preferences file was found. Start MZmine batch with memory mapping ( DEFAULT ) \"C:\\Program Files\\MZmine\\MZmine.exe\" -batch \"D:\\batch\\my_batch_file.xml\" -memory none -temp \"D:\\tmpmzmine\" Start MZmine batch on machines with enough memory (RAM) with -memory all \"C:\\Program Files\\MZmine\\MZmine.exe\" -batch \"D:\\batch\\my_batch_file.xml\" -memory all -temp \"D:\\tmpmzmine\"","title":"Command-line arguments"},{"location":"commandline_tool.html#argument-table","text":"Argument Options ( default ) Description -batch a path, e.g. \"D:\\batch.xml\" Path to batch file -memory none , all, features, centroids, raw, masses_features Defines what data is kept in memory (RAM) or otherwise memory mapped to the temp directory. Generally this setting should be none . If memory is no issue this option might be set to all process all spectral and feature data in memory. The option masses_features keeps centroid mass lists and features in memory while memory mapping raw spectral data. -temp a path, e.g., \"-temp \"D:\\tmpmzmine\\\" The defined directory should be on a fast drive (usually SSD > HDD > network drive) with enough free space. Local drives are usually preferred. MZmine uses memory mapping to efficiently store and access spectral and feature data. This can lead to a considerable temporary consumption of disk space. Make sure that the selected drive has enough space (maybe 20 GB + 1 GB/10 files; generously over estimated). Olena Mokshyna (7.41%), SteffenHeu (3.7%), Robin Schmid (88.89%)","title":"Argument table"},{"location":"contribute.html","text":"How to contribute to the MZmine documentation \u00b6 About the documentation \u00b6 Supporting and updating the documentation is especially important for MZmine due to the variety and complexity of the modules. If you wish to contribute by creating a module, please, create a corresponding documentation. In this way, the MZmine community will be able to easier adapt the novel modules in their workflows and everyday practice. MZmine documentation uses MkDocs site generator . Documentation source is created in Markdown and configured using a single YAML file. If you are new to MkDocs or Markdown, the detailed User guide can be found here . Pages structure \u00b6 Structure of the pages is described in mkdocs.yml file, which represents the tree-like structure: nav: - Home page: index.md - Getting started: getting_started.md - Main window overview: main-window-overview.md - Data conversion: data_conversion.md - Citations: citations.md - Coding: - General structure: coding/general_structure.md - Module development: coding/module_development.md - Raw data structure: coding/raw_data_structure.md - Feature data structure: coding/feature_data_structure.md - Example module - Spectral entropy: coding/example_module.md When a new documentation page or subsection is added, yaml structure changes correspondingly. For example: nav: - Home page: index.md - Getting started: getting_started.md - Main window overview: main-window-overview.md - Data conversion: data_conversion.md - Citations: citations.md - Coding: - General structure: coding/general_structure.md - Module development: coding/module_development.md - Raw data structure: coding/raw_data_structure.md - Feature data structure: coding/feature_data_structure.md - Example module - Spectral entropy: coding/example_module.md - NEW SECTION: - NEW PAGE: new_section/new_page.md How to edit the documentation pages \u00b6 1. Make a GitHub Account You'll need to make a GitHub Account . 2. Click Edit Button on Page You Want to Edit 3. Fork the Repository When Prompted (only the first time) 4. Make the Edits in MarkDown 5. Propose Changes Please describe the change you are making. 6. Create Pull Request 7. Finalize Pull Request with Description How to create a new page \u00b6 Follow steps 1 - 3. Navigate to mzmine_documentation/docs in your fork and create a new file Follow steps 4 - 7. Additional useful information \u00b6 Using icons \u00b6 To highlight some points in the prepared documentation, it is advised to use icons. Material for MkDocs is integrated into MZmine documentation and suggests a wide range of icons, logos, and more. Icons can be found here . Using mathematical formulas \u00b6 To add mathematical formulas, it is recommended to use LaTex notation, which can be directly incorporated into MkDocs pages. To insert inline formula, one can use single \"$\" signs, like this $x^n + y^n = z^n$\" , resulting in \\(x^n + y^n = z^n\\) . To insert formula on a new line, use double \"$\" signs, for example $$E=mc^2$$ , resulting in \\[E=mc^2\\] The excellent reference guide to different mathematical expressions can be found here . Page Contributors \u00b6 Olena Mokshyna (63.64%), SteffenHeu (36.36%) This page was adapted from the GNPS documentation .","title":"Contribute to documentation"},{"location":"contribute.html#how-to-contribute-to-the-mzmine-documentation","text":"","title":"How to contribute to the MZmine documentation"},{"location":"contribute.html#about-the-documentation","text":"Supporting and updating the documentation is especially important for MZmine due to the variety and complexity of the modules. If you wish to contribute by creating a module, please, create a corresponding documentation. In this way, the MZmine community will be able to easier adapt the novel modules in their workflows and everyday practice. MZmine documentation uses MkDocs site generator . Documentation source is created in Markdown and configured using a single YAML file. If you are new to MkDocs or Markdown, the detailed User guide can be found here .","title":"About the documentation"},{"location":"contribute.html#pages-structure","text":"Structure of the pages is described in mkdocs.yml file, which represents the tree-like structure: nav: - Home page: index.md - Getting started: getting_started.md - Main window overview: main-window-overview.md - Data conversion: data_conversion.md - Citations: citations.md - Coding: - General structure: coding/general_structure.md - Module development: coding/module_development.md - Raw data structure: coding/raw_data_structure.md - Feature data structure: coding/feature_data_structure.md - Example module - Spectral entropy: coding/example_module.md When a new documentation page or subsection is added, yaml structure changes correspondingly. For example: nav: - Home page: index.md - Getting started: getting_started.md - Main window overview: main-window-overview.md - Data conversion: data_conversion.md - Citations: citations.md - Coding: - General structure: coding/general_structure.md - Module development: coding/module_development.md - Raw data structure: coding/raw_data_structure.md - Feature data structure: coding/feature_data_structure.md - Example module - Spectral entropy: coding/example_module.md - NEW SECTION: - NEW PAGE: new_section/new_page.md","title":"Pages structure"},{"location":"contribute.html#how-to-edit-the-documentation-pages","text":"1. Make a GitHub Account You'll need to make a GitHub Account . 2. Click Edit Button on Page You Want to Edit 3. Fork the Repository When Prompted (only the first time) 4. Make the Edits in MarkDown 5. Propose Changes Please describe the change you are making. 6. Create Pull Request 7. Finalize Pull Request with Description","title":"How to edit the documentation pages"},{"location":"contribute.html#how-to-create-a-new-page","text":"Follow steps 1 - 3. Navigate to mzmine_documentation/docs in your fork and create a new file Follow steps 4 - 7.","title":"How to create a new page"},{"location":"contribute.html#additional-useful-information","text":"","title":"Additional useful information"},{"location":"contribute.html#using-icons","text":"To highlight some points in the prepared documentation, it is advised to use icons. Material for MkDocs is integrated into MZmine documentation and suggests a wide range of icons, logos, and more. Icons can be found here .","title":"Using icons"},{"location":"contribute.html#using-mathematical-formulas","text":"To add mathematical formulas, it is recommended to use LaTex notation, which can be directly incorporated into MkDocs pages. To insert inline formula, one can use single \"$\" signs, like this $x^n + y^n = z^n$\" , resulting in \\(x^n + y^n = z^n\\) . To insert formula on a new line, use double \"$\" signs, for example $$E=mc^2$$ , resulting in \\[E=mc^2\\] The excellent reference guide to different mathematical expressions can be found here .","title":"Using mathematical formulas"},{"location":"contribute.html#page-contributors","text":"Olena Mokshyna (63.64%), SteffenHeu (36.36%) This page was adapted from the GNPS documentation .","title":"Page Contributors"},{"location":"contribute_docu_template.html","text":"Markdown template for a module \u00b6 To make the creation of documentation easier, a convenient Markdown structure is discussed below. You can just copy, paste, and modify the provided template. # **Module Name** ## **Description** :material-menu-open: **Menu1 \u2192 Menu2 \u2192 Module** [WARNINGS] [MAIN TEXT] [TIPS] ## **References** !!! quote \" \" 1. Reference 1 2. ... ## **Parameters** #### **Parameter 1** [Description of parameter 1] #### **Parameter 2** _Optional parameter_ ... Olena Mokshyna Sections \u00b6 The documentation page for the module should follow the following structure: # **Module Name** ## **Description** ### **Algorithms** ## **References** ## **Parameters** Description section \u00b6 In this section you can provide a brief and concise description of what module does, which algorithms it uses, and when it can be applied (usage cases). The section should start with the module location Menu1 \u2192 Menu2 \u2192 Module :material-menu-open: **Menu1 \u2192 Menu2 \u2192 Module** [Please, add the location of your module here] Then you can supply any warning that a user needs to know to successfully use the module. For that you can use MkDocs warning admonition box. Warning Here you can put your warning. For example, 'This module requires aligned feature list'. The Markdown for the warning is: !!! warning Here you can put your warning. For example, 'This module requires aligned feature list'. If the modules are under maintenance, additional danger box can be added Danger This module is under maintenance/ has known bugs / is outdated and under update / etc. The Markdown for this box is the following: !!! danger This module is under maintenance/ has known bugs / is outdated and under update / etc. After the warnings, the main description text should follow. At the end of the main text, one can include tips to further facilitate module usage. Tip Here you can put the tip. For example, 'The good starting value for the Parameter 1 might be between 0.1 and 0.5. The Markdown for the tip is: !!! tip Here you can put the tip. For example, 'The good starting value for the Parameter 1 might be between 0.1 and 0.5. References \u00b6 For the references custom admonition box is used: Reference 1 ... The Markdown for this box is: !!! quote \" \" 1. Reference 1 2. ... If a more detailed description for the used algorithms is needed, you can add it under a separate subsection \"Algorithms\". Parameters section \u00b6 Start the section with a screenshot of the parameter dialogue, with reference values of parameters included. Follow with a list of parameters, their brief descriptions, and available values for each parameter. If a parameter is optional it can be indicated after the parameter name. Olena Mokshyna","title":"Documentation template"},{"location":"contribute_docu_template.html#markdown-template-for-a-module","text":"To make the creation of documentation easier, a convenient Markdown structure is discussed below. You can just copy, paste, and modify the provided template. # **Module Name** ## **Description** :material-menu-open: **Menu1 \u2192 Menu2 \u2192 Module** [WARNINGS] [MAIN TEXT] [TIPS] ## **References** !!! quote \" \" 1. Reference 1 2. ... ## **Parameters** #### **Parameter 1** [Description of parameter 1] #### **Parameter 2** _Optional parameter_ ... Olena Mokshyna","title":"Markdown template for a module"},{"location":"contribute_docu_template.html#sections","text":"The documentation page for the module should follow the following structure: # **Module Name** ## **Description** ### **Algorithms** ## **References** ## **Parameters**","title":"Sections"},{"location":"contribute_docu_template.html#description-section","text":"In this section you can provide a brief and concise description of what module does, which algorithms it uses, and when it can be applied (usage cases). The section should start with the module location Menu1 \u2192 Menu2 \u2192 Module :material-menu-open: **Menu1 \u2192 Menu2 \u2192 Module** [Please, add the location of your module here] Then you can supply any warning that a user needs to know to successfully use the module. For that you can use MkDocs warning admonition box. Warning Here you can put your warning. For example, 'This module requires aligned feature list'. The Markdown for the warning is: !!! warning Here you can put your warning. For example, 'This module requires aligned feature list'. If the modules are under maintenance, additional danger box can be added Danger This module is under maintenance/ has known bugs / is outdated and under update / etc. The Markdown for this box is the following: !!! danger This module is under maintenance/ has known bugs / is outdated and under update / etc. After the warnings, the main description text should follow. At the end of the main text, one can include tips to further facilitate module usage. Tip Here you can put the tip. For example, 'The good starting value for the Parameter 1 might be between 0.1 and 0.5. The Markdown for the tip is: !!! tip Here you can put the tip. For example, 'The good starting value for the Parameter 1 might be between 0.1 and 0.5.","title":"Description section"},{"location":"contribute_docu_template.html#references","text":"For the references custom admonition box is used: Reference 1 ... The Markdown for this box is: !!! quote \" \" 1. Reference 1 2. ... If a more detailed description for the used algorithms is needed, you can add it under a separate subsection \"Algorithms\".","title":"References"},{"location":"contribute_docu_template.html#parameters-section","text":"Start the section with a screenshot of the parameter dialogue, with reference values of parameters included. Follow with a list of parameters, their brief descriptions, and available values for each parameter. If a parameter is optional it can be indicated after the parameter name. Olena Mokshyna","title":"Parameters section"},{"location":"contribute_intellij.html","text":"Development in IntelliJ \u00b6 Set up \u00b6 Fork the mzmine (https://github.com/mzmine/mzmine3) GitHub repository (needs free GitHub account) (See https://help.github.com/en/github/getting-started-with-github/fork-a-repo) Download & Install IntelliJ IDEA (there is a free educational license for students and teachers) from https://www.jetbrains.com/idea/download/ Download & Install the current JDK. We recommend the OpenJDK. However, you can also use any other distribution, e.g., the Oracle JDK. This can be done from within IntelliJ. Open File/Project Structure (CTRL+ALT+SHIFT+S) and select SDKs and add the latest JDK with the +button: 4. Add your GitHub account via Settings/Version Control/GitHub +button. Below exemplified with the Log in with Token... option: - Log in with Token\u2026 Generate - redirects to GitHub - Make sure to select the Workflow scope to avoid conflicts that arise from changing GitHub actions 5. Clone GitHub project via version control: File/New/Project from version control use your user name to get your fork: https://github.com/YOUR USERNAME/mzmine3.git Make sure that gradle runs and updates the project. Otherwise, click on Reload Gradle Project . Now the project structure (CTRL+SHIFT+ALT+S) should show the source, test, and resource folders which are described in the build.gradle. Click on Add a Configuration. Select \u201cApplication\u201d from the template list). via the + button (don\u2019t just edit the template): Main class: io.github.mzmine.main.MZmineCore Environment var: -Djava.util.logging.config.class=io.github.mzmine.main.MZmineLoggingConfiguration -Xmx12G Run or debug with this configuration Code formatter \u00b6 The code formatter is important for contributions to the main version of MZmine and each java file should contain the license header. 1. Import the style format from mzmine-intellij-code-formater.xml 2. Apply format to any file with CTRL+ALT+L 3. Can also be applied on each file saved or each commited change (see below) 4. Better exclude specific file formats from being formatted (see below screenshot 2) ( .*{fxml,xml,htm,html,json,yml,css} ) Copyright header \u00b6 Add the license header to each file - the easiest way is to add the copyright profile to intelliJ Import the copyright from mzmine_intellij_licence_header.xml or create a new one with the exact text specified in license_header.txt Add a new scope for all project files Apply after file save or commit operation or run the Update copyright... action Useful settings \u00b6 Faster building \u00b6 Activate auto building (consumes more resources) Set Settings/Gradle/build and run to IntelliJ Activate HotSwap to automatically load changed classes during debugging Save and commit actions: Apply copyright, format, etc \u00b6 Select any actions to perform when a file is saved or committed. Live templates \u00b6 Live templates are used to add custom entries to the code completion, e.g., to quickly create a class-specific logger. Access Settings/Editor/Live Templates (CTRL+ALT+S on Windows) and add a new template (+ button). Define the abbreviation to trigger autocompletion at this statement, define the template text, and change the target context (\u201c Java \u201d) at the bottom. The template below generates a logger after typing log and pressing CTRL+SPACE. The variable \\(CLASS_NAME\\) was set to represent the current className() under Edit variable . The template: private static final java . util . logging . Logger logger = java . util . logging . Logger . getLogger ( $CLASSNAME$ . class . getName ()); Generates the output in class Scan: private static final Logger logger = Logger . getLogger ( Scan . class . getName ()); Another example to create Javadoc links for @l . The variable (here \\(target\\) ) places the cursor. Troubleshooting \u00b6 Correct JDK selection \u00b6 Make sure the correct JDK is set in these places: 1. File/Project Structure/SDKs 2. File/Settings/Build, Execution, Deployment/Build Tools \u2192 Gradle \u2192 Gradle JVM \u2192 \u201cProject SDK\u201d this will update automatically if the project SDK changes. 3. File/Settings/Build, Execution, Deployment/Java Compiler \u2192 Project Bytecode version \u2192 17 (for JDK 17) Correct run configuration: Select Default JRE (this will update with the project sdk) or select the correct one manually. Could not target platform \u00b6 Error: When building via gradlew: \u201cCould not target platform: 'Java SE 17' using tool chain: 'JDK 13 (13)'\u201d Solution (Windows): Set the JAVA_HOME environment variable to the JDK 17 root directory. See https://docs.oracle.com/cd/E19182-01/821-0917/inst_jdk_javahome_t/index.html Gradle project not imported \u00b6 If gradle tool window is not shown: 1. To import the Gradle project navigate to the build.gradle in the project tool window right click \u2192 import gradle project. The gradle tool window should now be visible. 2. To update the imports click the update gradle project button in the gradle tool window Olena Mokshyna (1.65%), Robin Schmid (97.52%), Adriano Rutz (0.83%)","title":"MZmine development (in IntelliJ)"},{"location":"contribute_intellij.html#development-in-intellij","text":"","title":"Development in IntelliJ"},{"location":"contribute_intellij.html#set-up","text":"Fork the mzmine (https://github.com/mzmine/mzmine3) GitHub repository (needs free GitHub account) (See https://help.github.com/en/github/getting-started-with-github/fork-a-repo) Download & Install IntelliJ IDEA (there is a free educational license for students and teachers) from https://www.jetbrains.com/idea/download/ Download & Install the current JDK. We recommend the OpenJDK. However, you can also use any other distribution, e.g., the Oracle JDK. This can be done from within IntelliJ. Open File/Project Structure (CTRL+ALT+SHIFT+S) and select SDKs and add the latest JDK with the +button: 4. Add your GitHub account via Settings/Version Control/GitHub +button. Below exemplified with the Log in with Token... option: - Log in with Token\u2026 Generate - redirects to GitHub - Make sure to select the Workflow scope to avoid conflicts that arise from changing GitHub actions 5. Clone GitHub project via version control: File/New/Project from version control use your user name to get your fork: https://github.com/YOUR USERNAME/mzmine3.git Make sure that gradle runs and updates the project. Otherwise, click on Reload Gradle Project . Now the project structure (CTRL+SHIFT+ALT+S) should show the source, test, and resource folders which are described in the build.gradle. Click on Add a Configuration. Select \u201cApplication\u201d from the template list). via the + button (don\u2019t just edit the template): Main class: io.github.mzmine.main.MZmineCore Environment var: -Djava.util.logging.config.class=io.github.mzmine.main.MZmineLoggingConfiguration -Xmx12G Run or debug with this configuration","title":"Set up"},{"location":"contribute_intellij.html#code-formatter","text":"The code formatter is important for contributions to the main version of MZmine and each java file should contain the license header. 1. Import the style format from mzmine-intellij-code-formater.xml 2. Apply format to any file with CTRL+ALT+L 3. Can also be applied on each file saved or each commited change (see below) 4. Better exclude specific file formats from being formatted (see below screenshot 2) ( .*{fxml,xml,htm,html,json,yml,css} )","title":"Code formatter"},{"location":"contribute_intellij.html#copyright-header","text":"Add the license header to each file - the easiest way is to add the copyright profile to intelliJ Import the copyright from mzmine_intellij_licence_header.xml or create a new one with the exact text specified in license_header.txt Add a new scope for all project files Apply after file save or commit operation or run the Update copyright... action","title":"Copyright header"},{"location":"contribute_intellij.html#useful-settings","text":"","title":"Useful settings"},{"location":"contribute_intellij.html#faster-building","text":"Activate auto building (consumes more resources) Set Settings/Gradle/build and run to IntelliJ Activate HotSwap to automatically load changed classes during debugging","title":"Faster building"},{"location":"contribute_intellij.html#save-and-commit-actions-apply-copyright-format-etc","text":"Select any actions to perform when a file is saved or committed.","title":"Save and commit actions: Apply copyright, format, etc"},{"location":"contribute_intellij.html#live-templates","text":"Live templates are used to add custom entries to the code completion, e.g., to quickly create a class-specific logger. Access Settings/Editor/Live Templates (CTRL+ALT+S on Windows) and add a new template (+ button). Define the abbreviation to trigger autocompletion at this statement, define the template text, and change the target context (\u201c Java \u201d) at the bottom. The template below generates a logger after typing log and pressing CTRL+SPACE. The variable \\(CLASS_NAME\\) was set to represent the current className() under Edit variable . The template: private static final java . util . logging . Logger logger = java . util . logging . Logger . getLogger ( $CLASSNAME$ . class . getName ()); Generates the output in class Scan: private static final Logger logger = Logger . getLogger ( Scan . class . getName ()); Another example to create Javadoc links for @l . The variable (here \\(target\\) ) places the cursor.","title":"Live templates"},{"location":"contribute_intellij.html#troubleshooting","text":"","title":"Troubleshooting"},{"location":"contribute_intellij.html#correct-jdk-selection","text":"Make sure the correct JDK is set in these places: 1. File/Project Structure/SDKs 2. File/Settings/Build, Execution, Deployment/Build Tools \u2192 Gradle \u2192 Gradle JVM \u2192 \u201cProject SDK\u201d this will update automatically if the project SDK changes. 3. File/Settings/Build, Execution, Deployment/Java Compiler \u2192 Project Bytecode version \u2192 17 (for JDK 17) Correct run configuration: Select Default JRE (this will update with the project sdk) or select the correct one manually.","title":"Correct JDK selection"},{"location":"contribute_intellij.html#could-not-target-platform","text":"Error: When building via gradlew: \u201cCould not target platform: 'Java SE 17' using tool chain: 'JDK 13 (13)'\u201d Solution (Windows): Set the JAVA_HOME environment variable to the JDK 17 root directory. See https://docs.oracle.com/cd/E19182-01/821-0917/inst_jdk_javahome_t/index.html","title":"Could not target platform"},{"location":"contribute_intellij.html#gradle-project-not-imported","text":"If gradle tool window is not shown: 1. To import the Gradle project navigate to the build.gradle in the project tool window right click \u2192 import gradle project. The gradle tool window should now be visible. 2. To update the imports click the update gradle project button in the gradle tool window Olena Mokshyna (1.65%), Robin Schmid (97.52%), Adriano Rutz (0.83%)","title":"Gradle project not imported"},{"location":"data_conversion.html","text":"Data conversion to open formats (mzML / imzML) \u00b6 MSConvert (ProteoWizard) to mzML \u00b6 Recommended conversion settings for high-resolution MS data to mzML (newer than mzXML). Use 64 bit for m/z to retain accuracy. Compression is optional but reduces the size significantly without much information loss - this might be instrument dependent though. The peak picking filter needs to be the first in the list - otherwise MSConvert might default to another algorithm than the selected vendor-specific one. Beware that previous versions of MSConvert had the titleMaker filter at the first position and the peak picking algorithm was added manually and the position needed to be switched accordingly to peak picking first. MSConvert command line interface \u00b6 Example Microsoft windows command to convert all .raw to .mzML. Can be in a .bat-batchfile located together with the raw data files. By default, the m/z is encoded in 64 bit , whereas the intensity is encoded in 32 bit . NumpressPic compresses the intensity, whereas the numpressLinear compresses the m/z and RT and a [toler] can be set. The peakPicking can be set to specific MS levels (here MS1- for multistage fragmentation) \"C:\\Users\\**USERNAME**\\AppData\\Local\\Apps\\ProteoWizard 3.0.22166.28b1b7b 64-bit\\msconvert.exe\" *.raw --filter \"peakPicking true 1-\" --zlib --numpressPic --numpressLinear -v -o mzml pause 1 More details can be found in the proteowizard documentation. https://proteowizard.sourceforge.io/tools/msconvert.html Bruker: Recalibrated files to the data conversion guide \u00b6 For Bruker recalibrated data, it is recommended to perform export analysis to mzXML using the Bruker's Data Analysis software (for automation, apply Bruker\u2019s processing script during data acquisition) prior to importing to MZmine. Compared to the mzML and mzData formats, the mzXML format best retains the full scan definition and sample recalibration properties. In mzML the MS1 scans were recalibrated but the MS2 scan definition of the precursor m/z did stay unchanged, leading to differences between MS1 and MS2. Page Contributors \u00b6 Robin Schmid (9.09%), corinnabrungs (45.45%), Robin Schmid (33.33%), li-chin (12.12%)","title":"Data conversion"},{"location":"data_conversion.html#data-conversion-to-open-formats-mzml-imzml","text":"","title":"Data conversion to open formats (mzML / imzML)"},{"location":"data_conversion.html#msconvert-proteowizard-to-mzml","text":"Recommended conversion settings for high-resolution MS data to mzML (newer than mzXML). Use 64 bit for m/z to retain accuracy. Compression is optional but reduces the size significantly without much information loss - this might be instrument dependent though. The peak picking filter needs to be the first in the list - otherwise MSConvert might default to another algorithm than the selected vendor-specific one. Beware that previous versions of MSConvert had the titleMaker filter at the first position and the peak picking algorithm was added manually and the position needed to be switched accordingly to peak picking first.","title":"MSConvert (ProteoWizard) to mzML"},{"location":"data_conversion.html#msconvert-command-line-interface","text":"Example Microsoft windows command to convert all .raw to .mzML. Can be in a .bat-batchfile located together with the raw data files. By default, the m/z is encoded in 64 bit , whereas the intensity is encoded in 32 bit . NumpressPic compresses the intensity, whereas the numpressLinear compresses the m/z and RT and a [toler] can be set. The peakPicking can be set to specific MS levels (here MS1- for multistage fragmentation) \"C:\\Users\\**USERNAME**\\AppData\\Local\\Apps\\ProteoWizard 3.0.22166.28b1b7b 64-bit\\msconvert.exe\" *.raw --filter \"peakPicking true 1-\" --zlib --numpressPic --numpressLinear -v -o mzml pause 1 More details can be found in the proteowizard documentation. https://proteowizard.sourceforge.io/tools/msconvert.html","title":"MSConvert command line interface"},{"location":"data_conversion.html#bruker-recalibrated-files-to-the-data-conversion-guide","text":"For Bruker recalibrated data, it is recommended to perform export analysis to mzXML using the Bruker's Data Analysis software (for automation, apply Bruker\u2019s processing script during data acquisition) prior to importing to MZmine. Compared to the mzML and mzData formats, the mzXML format best retains the full scan definition and sample recalibration properties. In mzML the MS1 scans were recalibrated but the MS2 scan definition of the precursor m/z did stay unchanged, leading to differences between MS1 and MS2.","title":"Bruker: Recalibrated files to the data conversion guide"},{"location":"data_conversion.html#page-contributors","text":"Robin Schmid (9.09%), corinnabrungs (45.45%), Robin Schmid (33.33%), li-chin (12.12%)","title":"Page Contributors"},{"location":"getting_started.html","text":"Getting Started \u00b6 Download \u00b6 Download MZmine 3 portable versions or installers from GitHub: https://github.com/mzmine/mzmine3/releases/latest Installation \u00b6 On Windows and Linux the installers and portable versions should function directly. Windows users might be warned that MZmine is not signed or from a trusted source and have to click run anyways. Before creating your first project, we recommend to set the preferences . On macOS \u00b6 Currently, MZmine 3 lacks a signature for macOS. While we are working on this, user can allow MZmine in the macOS Gatekeeper protection by running the following command in the terminal from the Applications folder. Download MZmine and click the MZmine.dmg installer - Drag and drop MZmine into the Applications folder Open the Applciations folder, right click (CTRL click) anywhere, e.g., on the MZmine icon, and choose \"New Terminal at folder\" from the context menu Run the provided command to tell macOS to trust the installed version of MZmine. The terminal directory has to be the Applications folder. (Depending on the actual folder use or omit the ../ to jump to the parent directory). Approve command with user password Start MZmine sudo xattr -cr ../MZmine.app # if this fails try sudo xattr -cr MZmine.app The Terminal does not output any log or message. Before creating your first project, we recommend to set the preferences . Set User Preferences \u00b6 Before creating your first project, we recommend setting up some things. Set a temporary file directory. Go to Project \u2192 Set preferences \u2192 Temporary file directory . This requires a restart to take effect. We recommend setting the directory to an SSD with enough space for fast processing and visualizations. On Windows, old temporary files are deleted when a new session is started. MZmine 2 projects cannot be imported due to changes in the data structure. MZmine 2 batch files cannot be imported due to parameter optimizations. You can get familiar with the new GUI here: Main window overview A quick insight to data processing workflows can be found here: LC-MS workflow or LC-IMS-IMS workflow You can also check out the new processing wizard under Processing wizard in the main menu. Olena Mokshyna (3.08%), SteffenHeu (55.38%), tdamiani (3.08%), Robin Schmid (3.08%), amcaraballor (35.38%)","title":"Getting started"},{"location":"getting_started.html#getting-started","text":"","title":"Getting Started"},{"location":"getting_started.html#download","text":"Download MZmine 3 portable versions or installers from GitHub: https://github.com/mzmine/mzmine3/releases/latest","title":"Download"},{"location":"getting_started.html#installation","text":"On Windows and Linux the installers and portable versions should function directly. Windows users might be warned that MZmine is not signed or from a trusted source and have to click run anyways. Before creating your first project, we recommend to set the preferences .","title":"Installation"},{"location":"getting_started.html#on-macos","text":"Currently, MZmine 3 lacks a signature for macOS. While we are working on this, user can allow MZmine in the macOS Gatekeeper protection by running the following command in the terminal from the Applications folder. Download MZmine and click the MZmine.dmg installer - Drag and drop MZmine into the Applications folder Open the Applciations folder, right click (CTRL click) anywhere, e.g., on the MZmine icon, and choose \"New Terminal at folder\" from the context menu Run the provided command to tell macOS to trust the installed version of MZmine. The terminal directory has to be the Applications folder. (Depending on the actual folder use or omit the ../ to jump to the parent directory). Approve command with user password Start MZmine sudo xattr -cr ../MZmine.app # if this fails try sudo xattr -cr MZmine.app The Terminal does not output any log or message. Before creating your first project, we recommend to set the preferences .","title":"On macOS"},{"location":"getting_started.html#set-user-preferences","text":"Before creating your first project, we recommend setting up some things. Set a temporary file directory. Go to Project \u2192 Set preferences \u2192 Temporary file directory . This requires a restart to take effect. We recommend setting the directory to an SSD with enough space for fast processing and visualizations. On Windows, old temporary files are deleted when a new session is started. MZmine 2 projects cannot be imported due to changes in the data structure. MZmine 2 batch files cannot be imported due to parameter optimizations. You can get familiar with the new GUI here: Main window overview A quick insight to data processing workflows can be found here: LC-MS workflow or LC-IMS-IMS workflow You can also check out the new processing wizard under Processing wizard in the main menu. Olena Mokshyna (3.08%), SteffenHeu (55.38%), tdamiani (3.08%), Robin Schmid (3.08%), amcaraballor (35.38%)","title":"Set User Preferences"},{"location":"main-window-overview.html","text":"Main window overview \u00b6 The MZmine 3 man window is made up of mainly four important building blocks. MS data files and feature lists tab \u00b6 [1]: The (raw) ms data and feature list tabs. Here you can find your imported data files and processed feature lists. Hint: you can also import files by dragging & dropping them to the ms data tab. Main content pane \u00b6 [2]: The main content pane. Visualisations such as a raw data overview or a feature list can be viewed here. This pane can also contain multiple tabs. Every tab can also be opened in a new separate window by right-clicking on the header. Main menu \u00b6 [3]: The main menu. Here you can find methods to import and process your data files and feature lists and visualise the results. Furthermore, projects can be saved and preferences can be set. Task overview \u00b6 [4]: The task overview. Current tasks are displayed and their status and progress are indicated. Tasks can also be canceled by right clicking on a task. Page Contributors \u00b6 SteffenHeu","title":"Main window overview"},{"location":"main-window-overview.html#main-window-overview","text":"The MZmine 3 man window is made up of mainly four important building blocks.","title":"Main window overview"},{"location":"main-window-overview.html#ms-data-files-and-feature-lists-tab","text":"[1]: The (raw) ms data and feature list tabs. Here you can find your imported data files and processed feature lists. Hint: you can also import files by dragging & dropping them to the ms data tab.","title":"MS data files and feature lists tab"},{"location":"main-window-overview.html#main-content-pane","text":"[2]: The main content pane. Visualisations such as a raw data overview or a feature list can be viewed here. This pane can also contain multiple tabs. Every tab can also be opened in a new separate window by right-clicking on the header.","title":"Main content pane"},{"location":"main-window-overview.html#main-menu","text":"[3]: The main menu. Here you can find methods to import and process your data files and feature lists and visualise the results. Furthermore, projects can be saved and preferences can be set.","title":"Main menu"},{"location":"main-window-overview.html#task-overview","text":"[4]: The task overview. Current tasks are displayed and their status and progress are indicated. Tasks can also be canceled by right clicking on a task.","title":"Task overview"},{"location":"main-window-overview.html#page-contributors","text":"SteffenHeu","title":"Page Contributors"},{"location":"performance.html","text":"This section contains information on how to tune MZmine 3 for different systems. Preferences \u00b6 The preferences can be changed in MZmine's graphical user interface by accessing File/Set preferences from the menu. The choices will be stored in a (hidden) .mzmine3.conf file in the user's home directory (Windows: C:\\Users\\USERNAME ) once MZmine is closed. Temporary files \u00b6 MZmine will create multiple temporary files at various times of the processing stage, e.g., when importing spectral data, running mass detection, or creating feature lists. These files will be stored in a folder that can be specified in the preferences. We recommend putting this folder on an SSD drive, ideally an M.2 for the best performance. The temporary files will be deleted when MZmine is closed (Mac & Linux) or when a new session is started (Windows). Memory options \u00b6 The parameter Keep in Memory defines what data is kept in memory (RAM) or otherwise memory mapped to the temp directory. Generally this setting should be none ( default ). If memory is no issue this option might be set to all process all spectral and feature data in memory. The option masses_features keeps centroid mass lists and features in memory while memory mapping raw spectral data. The option mass_lists will keep only mass lists in RAM, while memory mapping the raw spectral data and features. Logs \u00b6 Currently, the logs are written to an mzmine_0_0.log file in the user's home directory. Please submit your log files together with any issues on GitHub . Maximum memory \u00b6 The maximum Java heap size (the main part of the RAM available to MZmine) is set to 80%. This is usually a good value, considering that MZmine and its Java Virtual Machine (JVM) will use memory extending over this 80% threshold for specific tasks. There is one way to change the maximum heap size before starting MZmine, however, it requires administrator access. Find the MZmine/app/MZmine.cfg file in the MZmine install directory or portable version. Under Window, this file is write protected, which needs to be changed under File/Properties/Security/ select Users and click Edit to grant write access. Now change the MaxRAMPercentage to grant more RAM. java-options=-XX:InitialRAMPercentage=10 java-options=-XX:MaxRAMPercentage=80 Olena Mokshyna (3.77%), SteffenHeu (50.94%), Robin Schmid (26.42%), Robin Schmid (18.87%)","title":"Performance options"},{"location":"performance.html#preferences","text":"The preferences can be changed in MZmine's graphical user interface by accessing File/Set preferences from the menu. The choices will be stored in a (hidden) .mzmine3.conf file in the user's home directory (Windows: C:\\Users\\USERNAME ) once MZmine is closed.","title":"Preferences"},{"location":"performance.html#temporary-files","text":"MZmine will create multiple temporary files at various times of the processing stage, e.g., when importing spectral data, running mass detection, or creating feature lists. These files will be stored in a folder that can be specified in the preferences. We recommend putting this folder on an SSD drive, ideally an M.2 for the best performance. The temporary files will be deleted when MZmine is closed (Mac & Linux) or when a new session is started (Windows).","title":"Temporary files"},{"location":"performance.html#memory-options","text":"The parameter Keep in Memory defines what data is kept in memory (RAM) or otherwise memory mapped to the temp directory. Generally this setting should be none ( default ). If memory is no issue this option might be set to all process all spectral and feature data in memory. The option masses_features keeps centroid mass lists and features in memory while memory mapping raw spectral data. The option mass_lists will keep only mass lists in RAM, while memory mapping the raw spectral data and features.","title":"Memory options"},{"location":"performance.html#logs","text":"Currently, the logs are written to an mzmine_0_0.log file in the user's home directory. Please submit your log files together with any issues on GitHub .","title":"Logs"},{"location":"performance.html#maximum-memory","text":"The maximum Java heap size (the main part of the RAM available to MZmine) is set to 80%. This is usually a good value, considering that MZmine and its Java Virtual Machine (JVM) will use memory extending over this 80% threshold for specific tasks. There is one way to change the maximum heap size before starting MZmine, however, it requires administrator access. Find the MZmine/app/MZmine.cfg file in the MZmine install directory or portable version. Under Window, this file is write protected, which needs to be changed under File/Properties/Security/ select Users and click Edit to grant write access. Now change the MaxRAMPercentage to grant more RAM. java-options=-XX:InitialRAMPercentage=10 java-options=-XX:MaxRAMPercentage=80 Olena Mokshyna (3.77%), SteffenHeu (50.94%), Robin Schmid (26.42%), Robin Schmid (18.87%)","title":"Maximum memory"},{"location":"tool_integration.html","text":"Integration to other tools \u00b6 Overview \u00b6 MZmine3 data can be easily exchanged with and integrated into other software and web services, allowing to perform additional downstream analysis. Multiple export modules in MZmine3 allow to transfer its results with great flexibility. Links to the detailed documentation and specifications are provided in the table. Tool Doc Applicable MZmine module(s) Format Description SIRIUS Doc Export to SIRIUS .mgf Contains MS2 spectra and MS1 or correlated MS1 spectra for each feature list row GNPS-FBMN GNPS-IIMN FBMN IIMN Export/submit GNPS-FBMN .mgf _quant.csv _edges.csv - Contains one representative MS2 spectrum per feature - The feature list as an intensity (area/height) matrix - The additional IIN edges between features GNPS-GC-MS Doc Export to GNPS-GC-MS .mgf _quant.csv - Contains one representative correlated GC-MS1 spectrum per feature - The feature list as an intensity (area/height) matrix MetaboAnalyst Doc Export to MetaboAnalyst .csv Metadata grouped feature intensity matrix (area/height) R, Python general purpose export Export to CSV (legacy) Export to CSV (modular) .csv Export any row (averaged) and feature (per sample) types to a tabular format. Export all columns from the feature table to a tabular format. tidyMass Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format MetDNA Doc GNPS-FBMN/IIMN export .csv Export any row (averaged) and feature (per sample) types to a tabular format NeatMS Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format NetID Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format mzRAPP Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format MetGem Doc MSP Export MGF Export .msp .mgf TIMA Doc Export/submit GNPS-FBMN _quant.csv _edges.csv - The feature list as an intensity (area/height) matrix - The additional IIN edges between features Inventa Doc Export/submit GNPS-FBMN / Export to Sirius .mgf _quant.csv _edges.csv - Contains one representative MS2 spectrum per feature - The feature list as an intensity (area/height) matrix - The additional IIN edges between features MEMO Doc Export/submit GNPS-FBMN .mgf - Contains one representative MS2 spectrum per feature SLAW Doc Export/submit GNPS-FBMN .mgf _quant.csv _edges.csv - Contains one representative MS2 spectrum per feature - The feature list as an intensity (area/height) matrix - The additional IIN edges between features Page Contributors \u00b6 Olena Mokshyna (56.67%), Robin Schmid (36.67%), Adriano Rutz (6.67%)","title":"Integration to other tools"},{"location":"tool_integration.html#integration-to-other-tools","text":"","title":"Integration to other tools"},{"location":"tool_integration.html#overview","text":"MZmine3 data can be easily exchanged with and integrated into other software and web services, allowing to perform additional downstream analysis. Multiple export modules in MZmine3 allow to transfer its results with great flexibility. Links to the detailed documentation and specifications are provided in the table. Tool Doc Applicable MZmine module(s) Format Description SIRIUS Doc Export to SIRIUS .mgf Contains MS2 spectra and MS1 or correlated MS1 spectra for each feature list row GNPS-FBMN GNPS-IIMN FBMN IIMN Export/submit GNPS-FBMN .mgf _quant.csv _edges.csv - Contains one representative MS2 spectrum per feature - The feature list as an intensity (area/height) matrix - The additional IIN edges between features GNPS-GC-MS Doc Export to GNPS-GC-MS .mgf _quant.csv - Contains one representative correlated GC-MS1 spectrum per feature - The feature list as an intensity (area/height) matrix MetaboAnalyst Doc Export to MetaboAnalyst .csv Metadata grouped feature intensity matrix (area/height) R, Python general purpose export Export to CSV (legacy) Export to CSV (modular) .csv Export any row (averaged) and feature (per sample) types to a tabular format. Export all columns from the feature table to a tabular format. tidyMass Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format MetDNA Doc GNPS-FBMN/IIMN export .csv Export any row (averaged) and feature (per sample) types to a tabular format NeatMS Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format NetID Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format mzRAPP Doc Export to CSV (legacy) .csv Export any row (averaged) and feature (per sample) types to a tabular format MetGem Doc MSP Export MGF Export .msp .mgf TIMA Doc Export/submit GNPS-FBMN _quant.csv _edges.csv - The feature list as an intensity (area/height) matrix - The additional IIN edges between features Inventa Doc Export/submit GNPS-FBMN / Export to Sirius .mgf _quant.csv _edges.csv - Contains one representative MS2 spectrum per feature - The feature list as an intensity (area/height) matrix - The additional IIN edges between features MEMO Doc Export/submit GNPS-FBMN .mgf - Contains one representative MS2 spectrum per feature SLAW Doc Export/submit GNPS-FBMN .mgf _quant.csv _edges.csv - Contains one representative MS2 spectrum per feature - The feature list as an intensity (area/height) matrix - The additional IIN edges between features","title":"Overview"},{"location":"tool_integration.html#page-contributors","text":"Olena Mokshyna (56.67%), Robin Schmid (36.67%), Adriano Rutz (6.67%)","title":"Page Contributors"},{"location":"wikiacknowledgements.html","text":"Acknowledgements \u00b6 We would like to point out that this wiki was set up in tight collaboration with the GNPS staff. We highly appreciate your help! Related projects \u00b6 GNPS SIRIUS Libraries we use in MZmine \u00b6 Apache XML Graphics - EPS image export Chemistry Development Kit - Isotope pattern and molecular calculations Freehep - EMF image export Google Guava - Utility classes JDK Documentation JChemPaint - 2D molecule visualization JFreeChart - TIC, Spectra and 2D visualizers JMol - 3D molecule visualization jmzml - mzML file import jmzTab - mzTab file import and export NetCDF-Java - NetCDF file import VisAD - 3D visualizer WEKA - Clustering and other machine learning algorithms Bruker TDF SDK - Native tdf/tdf file import (requires VC++ 2017 redist.) Thermo raw file parser - Native Thermo raw import Olena Mokshyna (6.9%), SteffenHeu (13.79%), Robin Schmid (79.31%)","title":"Acknowledgements"},{"location":"wikiacknowledgements.html#acknowledgements","text":"We would like to point out that this wiki was set up in tight collaboration with the GNPS staff. We highly appreciate your help!","title":"Acknowledgements"},{"location":"wikiacknowledgements.html#related-projects","text":"GNPS SIRIUS","title":"Related projects"},{"location":"wikiacknowledgements.html#libraries-we-use-in-mzmine","text":"Apache XML Graphics - EPS image export Chemistry Development Kit - Isotope pattern and molecular calculations Freehep - EMF image export Google Guava - Utility classes JDK Documentation JChemPaint - 2D molecule visualization JFreeChart - TIC, Spectra and 2D visualizers JMol - 3D molecule visualization jmzml - mzML file import jmzTab - mzTab file import and export NetCDF-Java - NetCDF file import VisAD - 3D visualizer WEKA - Clustering and other machine learning algorithms Bruker TDF SDK - Native tdf/tdf file import (requires VC++ 2017 redist.) Thermo raw file parser - Native Thermo raw import Olena Mokshyna (6.9%), SteffenHeu (13.79%), Robin Schmid (79.31%)","title":"Libraries we use in MZmine"},{"location":"coding/example_module.html","text":"","title":"Example module"},{"location":"coding/feature_data_structure.html","text":"","title":"Feature data structure"},{"location":"coding/general_structure.html","text":"General structure of MZmine3 code \u00b6 MZmine architecture \u00b6 MZmine 3 is developed using Java technology, therefore it is completely platform independent, requiring only Java runtime for running. One of the main design goals is to keep a strict separation between the application core and modules for data processing and visualization. The general architecture of the modules is presented at the following scheme. Tip The practical instructions for MZmine coding can be found here . Libraries used \u00b6 Apache XML Graphics - EPS image export Chemistry Development Kit - Isotope pattern and molecular calculations Freehep - EMF image export Google Guava - Utility classes JavaHelp - Help system JChemPaint - 2D molecule visualization JFreeChart - TIC, Spectra and 2D visualizers JMol - 3D molecule visualization jmzml - mzML file import jmzTab - mzTab file import and export NetCDF-Java - NetCDF file import VisAD - 3D visualizer WEKA - Clustering and other machine learning algorithms Module structure \u00b6 Each module in MZmine necessarily contains three classes: [Name]Module.java [Name]Parameters.java [Name]Task.java Optionally module can contain dialog class: [Name]Dialog.java Tip You can fnd examples for all these classes in the java/io/github/mzmine/modules/example folder. Module class \u00b6 Each Module class implements one of three interfaces: MZMineModule interface - the most basic interface, aimed at any module that has to store some kind of parameters, MZMineRunnableModule interface - an interface that extends MZmine module and presents a runModule() method, which provides an opportunity to run task (for example, from the dialog), MZMineProcessingModule interface - an interface that extends MZMineRunnableModule and gives an opportunity to execute a module in a batch. Parameters class \u00b6 The Parameters class is defined by the ParameterSet interface , which declares functions necessary to get, load, and save module parameters. Also, in this class additional information must be defined, such as compatibility of module with the IMS data and URL of online documentation. Typically, a module would use SimpleParameterSet class . Task \u00b6 This is the part where the functionality of a module is implemented. The main specifications are defined by the Task interface , with methods that control and monitor the flow of a task execution (such as cancel() , getTaskPriority() , getFinishedPercentage() ). Task interface is implemented by AbstractTask class , which defines some of the most common used methods. Olena Mokshyna","title":"General structure"},{"location":"coding/general_structure.html#general-structure-of-mzmine3-code","text":"","title":"General structure of MZmine3 code"},{"location":"coding/general_structure.html#mzmine-architecture","text":"MZmine 3 is developed using Java technology, therefore it is completely platform independent, requiring only Java runtime for running. One of the main design goals is to keep a strict separation between the application core and modules for data processing and visualization. The general architecture of the modules is presented at the following scheme. Tip The practical instructions for MZmine coding can be found here .","title":"MZmine architecture"},{"location":"coding/general_structure.html#libraries-used","text":"Apache XML Graphics - EPS image export Chemistry Development Kit - Isotope pattern and molecular calculations Freehep - EMF image export Google Guava - Utility classes JavaHelp - Help system JChemPaint - 2D molecule visualization JFreeChart - TIC, Spectra and 2D visualizers JMol - 3D molecule visualization jmzml - mzML file import jmzTab - mzTab file import and export NetCDF-Java - NetCDF file import VisAD - 3D visualizer WEKA - Clustering and other machine learning algorithms","title":"Libraries used"},{"location":"coding/general_structure.html#module-structure","text":"Each module in MZmine necessarily contains three classes: [Name]Module.java [Name]Parameters.java [Name]Task.java Optionally module can contain dialog class: [Name]Dialog.java Tip You can fnd examples for all these classes in the java/io/github/mzmine/modules/example folder.","title":"Module structure"},{"location":"coding/general_structure.html#module-class","text":"Each Module class implements one of three interfaces: MZMineModule interface - the most basic interface, aimed at any module that has to store some kind of parameters, MZMineRunnableModule interface - an interface that extends MZmine module and presents a runModule() method, which provides an opportunity to run task (for example, from the dialog), MZMineProcessingModule interface - an interface that extends MZMineRunnableModule and gives an opportunity to execute a module in a batch.","title":"Module class"},{"location":"coding/general_structure.html#parameters-class","text":"The Parameters class is defined by the ParameterSet interface , which declares functions necessary to get, load, and save module parameters. Also, in this class additional information must be defined, such as compatibility of module with the IMS data and URL of online documentation. Typically, a module would use SimpleParameterSet class .","title":"Parameters class"},{"location":"coding/general_structure.html#task","text":"This is the part where the functionality of a module is implemented. The main specifications are defined by the Task interface , with methods that control and monitor the flow of a task execution (such as cancel() , getTaskPriority() , getFinishedPercentage() ). Task interface is implemented by AbstractTask class , which defines some of the most common used methods. Olena Mokshyna","title":"Task"},{"location":"coding/module_development.html","text":"Key steps to MZmine module development \u00b6 Coding tutorials \u00b6 Detailed coding tutorials by Robin Schmid: 01. First module and new columns 02. Git, GitHub, contribute code to MZmine 1. Define the role and functionality of your module \u00b6 Each module in MZmine belongs to some module category (see MZmine architecture ). Before starting, try to define category, to which your module will belong - raw data processing, feature detection, visualization, etc. A good idea is to browse already existing modules. Currently, MZmine contains more than 100 modules, so there are high chances that one of the existing modules may carry similar functionality to the one you want to code. This can help you to create your own module. Assess the scale of the added functionality and how the new module can be integrated with the existing ones. For example, if you'd like to add a new filter for the feature list rows, the best option might be not to create a new module but to add the new option as a parameter to the already existing Feature list rows filter. 2. Create a new branch locally for your changes \u00b6 You can either do it from command line using git command git checkout -b new-branch-name or directly from your IDE (detailed expanation can be found in the video tutorial). 3. Create a package for your module \u00b6 Go to the folder that corresponds to the functionality of your module (e.g., dataprocessing for the module that will be process features in the feature list). Create a new package in this folder. Tip Make sure that a package name starts with a meaningful prefix, such as \"filter_\" for a module that will filter rows in a feature table. 4. Create necessary classes \u00b6 Following the module structure described here , create Module, Parameters, and Task classes. Tip You can directly copy examples for all these classes from the java/io/github/mzmine/modules/example folder and rename them accordingly. These example files also contain some useful tips. 5. Define module name, description, and category \u00b6 Start by defining MODULE_NAME and MODULE_DESCRIPTION variables. Assign your module a category by modifying getModuleCategory() method. Available categories are listed in MZmineModuleCategory file. 6. Work on your Parameters class \u00b6 You can search for available parameters in the Parameters package or copy them from similar modules. After you have described all parameters, add parameters to the constructor of your Parameters class super(new Parameter[]{parameters go here}) Warning A parameter in the Parameters class should be public static final. 7. Define runModule() method [For the runnable modules] \u00b6 Here you are creating a task that will be launched after user has chosen parameters. You do not need to worry about task scheduling here, the task is only created and passed here. 8. Work on your Task class \u00b6 As you extend the AbstractTask class, some functionality will already be defined. To get the values of the parameters from ParameterSet, use the following approach parameters.getValue(YourClassParameters.paramererName.getValue() . You can modify the message by the logger, check for cancelled state, and update progress. Before progress update, implement the logic of your calculations. Warning Do not forget to modify addAppliedMethodsAndResultsToProject , so that the method info will be accessible in the feature list information. Tip If you have to implement some method to process scans, check ScanUtils first, it might already have been implemented. 9. Integrate a newly created module into MZmine GUI \u00b6 As the last step, for your module to be accessible, add it to MainMenu.fxml file. If you wish your module to be accessible in the batch mode, add it in the BatchModeModulesList 10. Test and debug \u00b6 Before pushing your final changes to the remote branch, try to thoroughly test your code. Think about corner cases and possible bugs. Using IDE tools can be extremely useful in this step. 11. Create documentation \u00b6 Prepare a description for your module that will go into the documentation. Creating a thorough documentation will help more people to used and understand your module. The documentation template can be found here 12. Push to the remote branch and create a pull request \u00b6 After you coded and tested your module, you can push your changes to the remote branch and create a pull request. After your pull request will be reviewed by one of the main contributors. There might be some comments that you'll have to address. After that, your module will be merged into the master branch and become a part of MZmine! Olena Mokshyna","title":"Module development"},{"location":"coding/module_development.html#key-steps-to-mzmine-module-development","text":"","title":"Key steps to MZmine module development"},{"location":"coding/module_development.html#coding-tutorials","text":"Detailed coding tutorials by Robin Schmid: 01. First module and new columns 02. Git, GitHub, contribute code to MZmine","title":"Coding tutorials"},{"location":"coding/module_development.html#1-define-the-role-and-functionality-of-your-module","text":"Each module in MZmine belongs to some module category (see MZmine architecture ). Before starting, try to define category, to which your module will belong - raw data processing, feature detection, visualization, etc. A good idea is to browse already existing modules. Currently, MZmine contains more than 100 modules, so there are high chances that one of the existing modules may carry similar functionality to the one you want to code. This can help you to create your own module. Assess the scale of the added functionality and how the new module can be integrated with the existing ones. For example, if you'd like to add a new filter for the feature list rows, the best option might be not to create a new module but to add the new option as a parameter to the already existing Feature list rows filter.","title":"1. Define the role and functionality of your module"},{"location":"coding/module_development.html#2-create-a-new-branch-locally-for-your-changes","text":"You can either do it from command line using git command git checkout -b new-branch-name or directly from your IDE (detailed expanation can be found in the video tutorial).","title":"2. Create a new branch locally for your changes"},{"location":"coding/module_development.html#3-create-a-package-for-your-module","text":"Go to the folder that corresponds to the functionality of your module (e.g., dataprocessing for the module that will be process features in the feature list). Create a new package in this folder. Tip Make sure that a package name starts with a meaningful prefix, such as \"filter_\" for a module that will filter rows in a feature table.","title":"3. Create a package for your module"},{"location":"coding/module_development.html#4-create-necessary-classes","text":"Following the module structure described here , create Module, Parameters, and Task classes. Tip You can directly copy examples for all these classes from the java/io/github/mzmine/modules/example folder and rename them accordingly. These example files also contain some useful tips.","title":"4. Create necessary classes"},{"location":"coding/module_development.html#5-define-module-name-description-and-category","text":"Start by defining MODULE_NAME and MODULE_DESCRIPTION variables. Assign your module a category by modifying getModuleCategory() method. Available categories are listed in MZmineModuleCategory file.","title":"5. Define module name, description, and category"},{"location":"coding/module_development.html#6-work-on-your-parameters-class","text":"You can search for available parameters in the Parameters package or copy them from similar modules. After you have described all parameters, add parameters to the constructor of your Parameters class super(new Parameter[]{parameters go here}) Warning A parameter in the Parameters class should be public static final.","title":"6. Work on your Parameters class"},{"location":"coding/module_development.html#7-define-runmodule-method-for-the-runnable-modules","text":"Here you are creating a task that will be launched after user has chosen parameters. You do not need to worry about task scheduling here, the task is only created and passed here.","title":"7. Define runModule() method [For the runnable modules]"},{"location":"coding/module_development.html#8-work-on-your-task-class","text":"As you extend the AbstractTask class, some functionality will already be defined. To get the values of the parameters from ParameterSet, use the following approach parameters.getValue(YourClassParameters.paramererName.getValue() . You can modify the message by the logger, check for cancelled state, and update progress. Before progress update, implement the logic of your calculations. Warning Do not forget to modify addAppliedMethodsAndResultsToProject , so that the method info will be accessible in the feature list information. Tip If you have to implement some method to process scans, check ScanUtils first, it might already have been implemented.","title":"8. Work on your Task class"},{"location":"coding/module_development.html#9-integrate-a-newly-created-module-into-mzmine-gui","text":"As the last step, for your module to be accessible, add it to MainMenu.fxml file. If you wish your module to be accessible in the batch mode, add it in the BatchModeModulesList","title":"9. Integrate a newly created module into MZmine GUI"},{"location":"coding/module_development.html#10-test-and-debug","text":"Before pushing your final changes to the remote branch, try to thoroughly test your code. Think about corner cases and possible bugs. Using IDE tools can be extremely useful in this step.","title":"10. Test and debug"},{"location":"coding/module_development.html#11-create-documentation","text":"Prepare a description for your module that will go into the documentation. Creating a thorough documentation will help more people to used and understand your module. The documentation template can be found here","title":"11. Create documentation"},{"location":"coding/module_development.html#12-push-to-the-remote-branch-and-create-a-pull-request","text":"After you coded and tested your module, you can push your changes to the remote branch and create a pull request. After your pull request will be reviewed by one of the main contributors. There might be some comments that you'll have to address. After that, your module will be merged into the master branch and become a part of MZmine! Olena Mokshyna","title":"12. Push to the remote branch and create a pull request"},{"location":"coding/module_list.html","text":"MZmine module overview \u00b6 List of MZmine modules \u00b6 List of MZmine modules extracted on: 2022/12/01 Please note that some contributors might not be correctly reflected due to reformatting and refactoring. Use git-blame at the MZmine code repository for a more detailed insight. name description main class sub class contributors path 13C isotope filter (formerly: isotope grouper) This module detects isotopic features and removes them from the feature list. Its isotope patterns are limited to detected features. For a more comprehensive isotope pattern coverage and isotopes other than 13C, use the Isotope finder. Feature filtering Isotopes Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_isotopegrouper/IsotopeGrouperModule.java 2D visualizer Two dimensional visualization of feature lists. Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/twod/TwoDVisualizerModule.java 3D visualizer 3D visulization of raw data. Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/fx3d/Fx3DVisualizerModule.java ADAP Aligner (GC) This module calculates pairwise convolution integral for each pair of unaligned peaks in order to find the best alignment Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/align_adap3/ADAP3AlignerModule.java ADAP Chromatogram Builder This module connects data points from mass lists and builds chromatograms. Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_adapchromatogrambuilder/ModularADAPChromatogramBuilderModule.java ADAP3D feature detection (experimental) This module detect peaks from profile spectra using the ADAP3D algorithm developed by the Xiuxia Du lab. The module requires no parameter settings. Note that it will not work with centroid spectra. Feature detection Chromatogram detection Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_adap3d/ADAP3DModule.java Adap Resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/ADAPpeakpicking/AdapResolverModule.java Add ion identities to networks This module adds ion identities to existing networks Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/addionannotations/AddIonNetworkingModule.java Aird file import This module imports aird raw data into the project. Spectral data Raw data import Robin Schmid; Tomas Pluskal; lms19880914 src/main/java/io//mzmine/modules/io/import_rawdata_aird/AirdImportModule.java Align scans (LC/MS or MS level 1) This module align scans for small fluctuations correlating consecutive scans. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_alignscans/AlignScansModule.java Annotate possible isomers Annotates features with the same (or similar) m/z but different mobilities within a specified retention time window. Feature processing Feature grouping Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_interestingfeaturefinder/AnnotateIsomersModule.java Average formulas for annotation networks Creates a list of average molecular formulas from all formula lists of all ions in this network (e.g., M+H and M+Na) Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/formula/createavgformulas/CreateAvgNetworkFormulasModule.java Baseline correction This module performs a baseline correction on raw data files. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_baselinecorrection/BaselineCorrectionModule.java Baseline resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/baseline/BaselineFeatureResolverModule.java Batch mode This module allows execution of multiple processing tasks in a batch. Project Project Kirill Ponomarov; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/batchmode/BatchModeModule.java Batch spectral library generation Uses metadata sheet to generate spectral library Feature IO Feature list export Steffen Heuckeroth; Robin Schmid src/main/java/io//mzmine/modules/io/spectraldbsubmit/batch/LibraryBatchGenerationModule.java Bruker TDF file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_bruker_tdf/TDFImportModule.java CAMERA search This method searches for pseudo-spectra using the CAMERA algorithm. Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_camera/CameraSearchModule.java CCS calculation module Calculates CCS values for features. Feature processing Annotation Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; tarush.singh src/main/java/io//mzmine/modules/dataprocessing/id_ccscalc/CCSCalcModule.java Calculate EC-MS potentials Calculates metabolite formation potentials in EC-MS experiments. Feature processing Annotation Tomas Pluskal; m_wesn01 src/main/java/io//mzmine/modules/dataprocessing/id_ecmscalcpotential/CalcEcmsPotentialModule.java CentWave resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/centwave/CentWaveResolverModule.java Check all ion identities by MS/MS Checks ion identities (in-source fragments and multimers) by MS/MS Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/checkmsms/IonNetworkMSMSCheckModule.java Chromatogram and spectra visualizer Inspect LC-MS data by navigating through raw data. Visualization Visualization Annexhc; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; annexhc; knakul853; Robin Schmid src/main/java/io//mzmine/modules/visualization/chromatogramandspectra/ChromatogramAndSpectraVisualizerModule.java Clear feature list annotations This method clears the annotations from the feature list Feature filtering Feature list filtering Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_clearannotations/ClearFeatureAnnotationsModule.java Clear ion identites Deletes all ion identities and networks of all rows Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/clearionids/ClearIonIdentitiesModule.java Clear project Clearing all project files and feature lists Project Project Robin Schmid src/main/java/io//mzmine/modules/tools/clear_project/ClearProjectModule.java CliqueMS annotation This method groups features and annotates the groups/cliques using CliqueMS algorithm. Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_cliquems/CliqueMSModule.java Correlated features \u00ce\u0094 m/z histogram This module plots all m/z deltas between correlated features in a histogram and offers a Gaussian fit. Visualization Visualization feature list Olena Mokshyna; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/scan_histogram/CorrelatedFeaturesMzHistogramModule.java Correlation coefficient histogram (grouped feature shapes) This module plots all correlations between feature shapes. Visualization Visualization feature list Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/histo_feature_correlation/FeatureCorrelationHistogramModule.java Crop filter This module performs cropping of raw data files. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_cropfilter/CropFilterModule.java Custom DB search Search spectrum against local csv database Feature processing Annotation Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/customdatabase/CustomDBSpectraSearchModule.java Custom database search This method searches a custom database (CSV file) using m/z and retention time values. Feature processing Annotation Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_localcsvsearch/LocalCSVDatabaseSearchModule.java DIA pseudo MS2 builder (experimental) Builds pseudo MS2 scans based on feature shape correlation. Feature filtering Feature list filtering Steffen Heuckeroth; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_diams2/DiaMs2CorrModule.java Data point processing Processes individual spectra with multiple steps like mass detection, deisotoping, annotation Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/datapointprocessing/DataPointProcessingModule.java Duplicate peak filter This method removes duplicate peaks (peaks with same retention times and m/z) from the feature list. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_duplicatefilter/DuplicateFilterModule.java Export CSV (legacy MZmine 2) Legacy MZmine 2 method: This method exports the feature list contents into a CSV (comma-separated values) file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_csv_legacy/LegacyCSVExportModule.java Export MS/MS spectra Export MS/MS spectra of detected features. Spectral data Export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/featurelisttable_modular/export/MSMSExportModule.java Export MSn trees This method exports the feature list contents into a CSV (comma-separated values) file. Spectral data Raw data export Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_msn_tree/MSnTreeExportModule.java Export feature networks to csv Export resutls from correlation/MS annotation as networks to csv Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; sanbit876 src/main/java/io//mzmine/modules/dataprocessing/group_metacorrelate/export/ExportCorrAnnotationModule.java Export for SIRIUS This method exports a MGF file that contains for each feature, (1) the deconvoluted MS1 isotopic pattern, and (2) the MS/MS spectrum (highest precursor ion intensity). This file can be open and processed with Sirius, https://bio.informatik.uni-jena.de/software/sirius/. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_features_sirius/SiriusExportModule.java Export images to csv Exports spatially resolved data of features to csv files. Feature IO Export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_image_csv/ImageToCsvExportModule.java Export isotope pattern Export isotope pattern of detected features. Spectral data Export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/featurelisttable_modular/export/IsotopePatternExportModule.java Export library analysis csv Cosine similarity of library to csv Feature IO Feature list export Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_library_analysis_csv/LibraryAnalysisCSVExportModule.java Export scans Export scans from raw data. Spectral data Export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_scans/ExportScansModule.java Export scans into one file Export scans or mass lists into one file Spectral data Raw data export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_scans/ExportScansFromRawFilesModule.java Export to CSV file (modular) This method exports the feature list contents into a CSV (comma-separated values) file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_csv/CSVExportModularModule.java Export to GNPS-GC-MS (with ADAP) GNPS GC-EI-MS workflow. Export the mgf, quant table and Kovats reference file (optionally). Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_gnps/gc/GnpsGcExportAndSubmitModule.java Export to MGF file (ADAP) This method exports all ADAP clustered spectra in a feature lists to an MGF file. Used in the GNPS GC-MS workflow. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_mgf/AdapMgfExportModule.java Export to MSP file (ADAP) This method exports all ADAP clustered spectra in a feature lists to an MSP file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_msp/AdapMspExportModule.java Export to MetaboAnalyst file This method exports the feature list contents into a CSV (comma-separated values) file that is formatted for easy processing by the MetaboAnalyst service (http://www.metaboanalyst.ca). Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_metaboanalyst/MetaboAnalystExportModule.java Export to SQL database This method exports the feature list contents into an SQL database using JDBC. Feature IO Feature list export Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_features_sql/SQLExportModule.java Export to mzTab file This method exports the feature list contents into a mzTab file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_mztab/MzTabExportModule.java Export to mzTab-m file. This method exports the feature list contents into a mzTab-m file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_mztabm/MZTabmExportModule.java Export/Submit to GNPS-FBMN GNPS feature-based molecular networking export and submit module. Exports the MGF file for GNPS (only for MS/MS), the quant table (CSV export) and additional edges (ion identity networks and correlation) Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_gnps/fbmn/GnpsFbmnExportAndSubmitModule.java External CCS calibration Uses an externally calculated CCS calibration to calculate CCS values. Feature processing Annotation Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ccscalibration/external/ExternalCCSCalibrationModule.java Extract scans Extract a defined number of scans around a center time Spectral data Raw data export Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_extractscans/ExtractScansModule.java FTMS shoulder peaks filter This method filters mass lists and removes residual signals known as 'shoulder peaks' and commonly observed in FTMS data. Spectral data Raw data filtering Robin Schmid; Roman Bushuiev; Sonja-analytik; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_shoulderpeaksfilter/ShoulderPeaksFilterModule.java Feature intensity plot Feature intensity plot. Visualization Visualization feature list Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/intensityplot/IntensityPlotModule.java Feature list blank subtraction Subtracts features appearing in (procedural) blank measurements feature list from an aligned feature list. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_blanksubtraction/FeatureListBlankSubtractionModule.java Feature list info visualizer Generates a batch from the list of applied methods to reproduce this feature list. Visualization Visualization Roman Bushuiev; Tomas Pluskal; m_wesn01 src/main/java/io//mzmine/modules/visualization/infovisualizer/InfoVisualizerModule.java Feature list rows filter This method removes certain rows from a feature list based on given restrictions. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_rowsfilter/RowsFilterModule.java Feature table MZmine 3 feature table. Visualization Visualization Annexhc; Kirill Ponomarov; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/featurelisttable_modular/FeatureTableFXModule.java Formula prediction This method gets the predicted formula for each unknown compound Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_formulapredictionfeaturelist/FormulaPredictionFeatureListModule.java Formula prediction Predict molecular formulae for features. Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Weiching Chen; knakul853 src/main/java/io//mzmine/modules/dataprocessing/id_formulaprediction/FormulaPredictionModule.java Formula prediction (on annotation networks) This method predicts formulae for each ion identity in all annotation networks (generated by MS annotations module or similar) Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/formula/prediction/FormulaPredictionIonNetworkModule.java Formula prediction on a single spectrum Predict formulae in a single spectrum. Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/sumformula/SumFormulaSpectraSearchModule.java Frame visualizer Visualizes frames from ion mobility raw data files. Visualization Visualization Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/frames/FrameVisualizerModule.java Graphical manual picker Manually pick or reintegrate features in EICs by point and click operations. Feature processing Feature resolving Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_manual/XICManualPickerModule.java Graphics export Export charts to vector or pixel graphics Visualization Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/gui/chartbasics/graphicsexport/GraphicsExportModule.java GridMass - 2D feature detection This module detect peaks based on a 2D peak recognition procedure. Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_gridmass/GridMassModule.java Group MS2 scans with features This method assings all MS2 scans within range to all features in this feature list Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_groupms2/GroupMS2Module.java Hierachical aligner (GC) This method aligns detected peaks using a match score. This score is calculated based on the MZ profile and RT of each peak using preset tolerances. Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_hierarchical/HierarAlignerGcModule.java Hierarchical Clustering This method combines peaks into analytes and constructs fragmentation spectrum for each analyte Feature filtering Spectral deconvolution Aleksandr Smirnov; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Varun Suresh; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/adap_hierarchicalclustering/ADAPHierarchicalClusteringModule.java Histogram plot Histogram plot Visualization Visualization feature list Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/histogram/HistogramVisualizerModule.java ICP MS CSV file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_icpms_csv/IcpMsCVSImportModule.java IMS Raw data visualizer Multidimensional raw data inspection of IMS raw data. Visualization Visualization Annexhc; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; aiden; knakul853 src/main/java/io//mzmine/modules/visualization/ims/ImsVisualizerModule.java IMS mobility mz plot Heatmap view for detected features. Visualization Visualization Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/ims_mobilitymzplot/IMSMobilityMzPlotModule.java Image builder This module connects data points from mass lists and builds images. Feature detection Chromatogram detection Annexhc; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_imagebuilder/ImageBuilderModule.java Image visualizer Image visualizer Visualization Visualization Annexhc; Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/image/ImageVisualizerModule.java Import GNPS results Imports GNPS feature based molecular networking results into the selected feature list (library matches) Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_gnpsresultsimport/GNPSResultsImportModule.java Import MS data This module combines the import of different MS data formats and provides advanced options Spectral data Raw data import Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; lms19880914; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_all/AllSpectralDataImportModule.java Import from csv file. This method imports the feature list contents from a csv file. Feature IO Feature list import Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_features_csv/CsvImportModule.java Import mzTab file This method imports a feature list from a mzTab file. Feature IO Feature list import Nils Hoffmann; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_features_mztab/MzTabImportModule.java Import mzTab-m file This method imports a feature list from a mzTab-m file. Feature IO Feature list import Nils Hoffmann; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_features_mztabm/MZTabmImportModule.java Import spectral library This method imports spectral libraries to speed up spectral library matching Spectral data Raw data import Olena Mokshyna; Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_spectral_library/SpectralLibraryImportModule.java Ims expander Expands rt chromatograms in mobility dimension. Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_imsexpander/ImsExpanderModule.java Injection time analysis Plots the minimum signal intensity against the injection time to see trends in trap based mass spectrometers Visualization Visualization Olena Mokshyna; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/injection_time/InjectTimeAnalysisModule.java Internal standard CCS calculation Calculates CCS values based on an reference compound list and it's detected features in a feature list. Feature processing Annotation Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ccscalibration/reference/ReferenceCCSCalibrationModule.java Ion Identity Molecular Networks Visualize the results of the MS annotation module Visualization Visualization feature list Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/networking/AnnotationNetworkModule.java Ion identity network refinement Refinement of ion identity networks Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/refinement/IonNetworkRefinementModule.java Ion identity networking This method searches for adducts, in-source fragments, and clusters Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/ionidnetworking/IonNetworkingModule.java Ion mobility raw data overview Visualizes ion mobility raw data files. Visualization Visualization Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/rawdataoverviewims/IMSRawDataOverviewModule.java Ion mobility trace builder Builds ion mobility traces for a raw data file Feature detection Chromatogram detection Annexhc; Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_ionmobilitytracebuilder/IonMobilityTraceBuilderModule.java Isotope pattern preview Calculate and view isotope patterns. Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/tools/isotopepatternpreview/IsotopePatternPreviewModule.java Isotope peak scanner Searches for m/z and intensity distribution of a calculated isotope pattern within a feature list. Feature filtering Isotopes Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_isotopepeakscanner/IsotopePeakScannerModule.java Isotopic peaks finder Find isotope signals in the FWHM of all features in the list Feature filtering Isotopes Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; tarush.singh src/main/java/io//mzmine/modules/dataprocessing/filter_isotopefinder/IsotopeFinderModule.java Join aligner This method aligns detected peaks using a match score. This score is calculated based on the mass and retention time of each peak using preset tolerance. Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/align_join/JoinAlignerModule.java Kendrick mass plot Kendrick mass plot. Visualization Visualization feature list Annexhc; Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; annexhc; knakul853 src/main/java/io//mzmine/modules/visualization/kendrickmassplot/KendrickMassPlotModule.java Kovats index extraction Extract Kovats indexes from a raw data file and save to csv. Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/tools/kovats/KovatsIndexExtractionModule.java LC-Image Aligner Aligns LC and imaging measurements based on m/z and mobility. Images are aligned to all LC features that match, only the best match is retained. Feature detection Alignment Olena Mokshyna; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_lcimage/LcImageAlignerModule.java Learner module This module is for learners only Feature filtering Feature list filtering Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/example/LearnerModule.java Library search results window Visualize spectral database search results. Visualization Visualization Kevin-Murray; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; murra668; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/spectralmatchresults/SpectraIdentificationResultsModule.java Library submit Submit MS2 spectra for spectral libraries. Spectral data Export Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/spectraldbsubmit/LibrarySubmitModule.java Linear normalizer Linear normalizer divides the height (or area) of each feature in the feature list by a normalization factor, determined according to the given normalization type. Feature processing Normalization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/norm_linear/LinearNormalizerModule.java Lipid annotation This method searches and annotates for features which m/z value matches a predicted mass of selected lipids. Feature processing Annotation Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_lipididentification/LipidSearchModule.java Lipid annotation Lipid annotation on individual spectra Raw data Annotation Annexhc; Robin Schmid; Steffen Heuckeroth; SurajV; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/lipidsearch/LipidSpectraSearchModule.java Local minimum resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/minimumsearch/MinimumSearchFeatureResolverModule.java MS/MS data visualizer Scatter plot for MS/MS data visualization, fouraxes types supported: retention time, precursor m/z, product m/z, neutral loss Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Sandeep; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/msms/MsMsVisualizerModule.java MS/MS quality export Exports metrics for MS/MS spectra Other Tools Steffen Heuckeroth; SteffenHeu src/main/java/io//mzmine/modules/io/export_msmsquality/MsMsQualityExportModule.java MS/MS spectral networking (Molecular networking) Checks MS2 similarity of all rows within the groups or on all networks and between networks Feature processing Feature grouping Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/group_metacorrelate/msms/similarity/MS2SimilarityModule.java MS2 similarity search This method searches for similar MS2 fragmentation spectra between two feature lists Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ms2search/Ms2SearchModule.java MSn Tree Visualizer Visualizes MSn spectra in a tree structure and all spectra of the same level in one spectra chart Visualization Visualization Olena Mokshyna; Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/msn_tree/MSnTreeVisualizerModule.java MSn feature list builder This module looks through the whole raw data for MSn scans and makes a list of chromatographic features using the precursor mass. Feature detection Chromatogram detection Kevin-Murray; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_msn/MsnFeatureDetectionModule.java MSn tree feature list builder Builds all MSn trees and extracts chromatograms for the precursor m/z Feature detection Chromatogram detection Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_msn_tree/MsnTreeFeatureDetectionModule.java MZ range from formula calcuator Calculate mz range from formula and mz tolerance Other Tools Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/mzrangecalculator/MzRangeFormulaCalculatorModule.java MZ range from tolerance calculator Calculate mz range from mz tolerance and mass Other Tools Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/mzrangecalculator/MzRangeMassCalculatorModule.java Main resolver Resolves chromatograms to features. Provides additional parameters and orchestrates the algoriithms Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/FeatureResolverModule.java Manual picker Manually pick or reintegrate features in EICs. Feature processing Feature resolving Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_manual/ManualFeaturePickerModule.java Mass calibration This module estimates systematic error of measurement by analysing differences between actual mass peaks and masses of assigned compounds, it then shifts the mass peaks to account against that bias. Spectral data Raw data methods Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_masscalibration/MassCalibrationModule.java Mass detection This module detects individual ions in each scan and builds a mass list for each scan. Spectral data Raw data methods Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_massdetection/MassDetectionModule.java Massvoltammogram chart A chart that combines a specific instrumental setup (redox cell) with mass spectrometry. Different timepoints are converted into the potentials applied to the sample, this is plotted as 3D spectra against this potential. Visualization Visualization Tomas Pluskal; m_wesn01 src/main/java/io//mzmine/modules/visualization/massvoltammogram/MassvoltommogramModule.java Merge files Merge all scans of multiple files to one raw data file Spectral data Raw data methods Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_merge/RawFileMergeModule.java Merge lists This method merges feature lists by appending all rows into a new list. Perform alignment before to align all features from comparable samples and use this method to merge feature lists that should not be aligned: e.g., positive and negative mode data. Feature detection Alignment Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_append_rows/MergeAlignerModule.java Mobility scan merging module Merges mobility scans at the same retention time to a summed frame spectrum. Spectral data Raw data methods Olena Mokshyna; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_mobilityscanmerger/MobilityScanMergerModule.java Mobilogram summing Bins intensities within given mobility ranges to correct for noise in mobilograms. Feature detection Chromatogram detection Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_mobilogram_summing/MobilogramBinningModule.java MsMs Spectra merge Merge multiple MS2 spectra to a single spectrum. Spectral data Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/msmsspectramerge/MsMsSpectraMergeModule.java Multivariate Curve Resolution This method combines peaks into analytes and constructs fragmentation spectrum for each analyte Feature filtering Spectral deconvolution Aleksandr Smirnov; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Varun Suresh; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/adap_mcr/ADAPMultivariateCurveResolutionModule.java NIST MS Search This method searches spectra against the NIST library. Feature processing Annotation Kevin-Murray; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; murra668; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_nist/NistMsSearchModule.java Neutral loss filter Searches for neutral losses within a feature list. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_neutralloss/NeutralLossFilterModule.java Noise amplitude resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/noiseamplitude/NoiseAmplitudeResolverModule.java Online DB search Online DB search on individual spectra Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/onlinedatabase/OnlineDBSpectraSearchModule.java Online database search This module attempts to find those peaks in a feature list, which form an isotope pattern. Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal; knakul853 src/main/java/io//mzmine/modules/dataprocessing/id_onlinecompounddb/OnlineDBSearchModule.java Open project This module opens an existing MZmine project. The current workspace will be discarded. Project Project I/O Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/io/projectload/ProjectLoadModule.java Path aligner Description not yet available. Feature detection Alignment Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_path/PathAlignerModule.java Peak comparison rows filter This method removes certain rows from a feature list based on peak comparisons. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_peakcomparisonrowfilter/PeakComparisonRowFilterModule.java Peak filter This method removes certain peak entries based on given restrictions. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_featurefilter/FeatureFilterModule.java Peak finder Fill gaps in aligned feature lists of LC-MS measurements. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/gapfill_peakfinder/PeakFinderModule.java Peak finder (multithreaded) This method fills the missing peaks (gaps) in the feature list by searching for a peak in the raw data. Feature detection Gap filling Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/gapfill_peakfinder/multithreaded/MultiThreadPeakFinderModule.java Precursor search in spectral libraries This method searches all peaklist rows against a local spectral libraries to identify possible precursor ions Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_precursordbsearch/PrecursorDBSearchModule.java Processing wizard Creates processing batches with a reduced set of parameters. Other Tools Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/tools/batchwizard/BatchWizardModule.java Project metadata import This module imports metadata into the project from .tsv-format files. Project Project metadata Kirill Ponomarov; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/projectmetadata/ProjectMetadataImportModule.java Quality parameters Calculates quality parameters such as FWHM, asymmetry factor, tailing factor, S/N ratio. Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/qualityparameters/QualityParametersModule.java RANSAC aligner Feature list aligner based on the RANSAC algorithm. Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_ransac/RansacAlignerModule.java Raw data export This module exports raw data files from your MZmine project into various formats Spectral data Raw data export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_rawdata_mzml/MzMLExportModule.java Raw data export to netCDF This module exports raw data files from your MZmine project into various formats Spectral data Raw data export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_rawdata_netcdf/NetCDFExportModule.java Raw data file rename Renames raw data files. Other Tools Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/rawfilerename/RawDataFileRenameModule.java Raw data overview Raw data overview Visualization Visualization Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/visualization/rawdataoverview/RawDataOverviewModule.java Recursive IMS Builder Builds m/z traces for ion mobility spectrometry data Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_recursiveimsbuilder/RecursiveIMSBuilderModule.java Relations between ion networks This method searches for relations between ion networks (e.g., chemical modifications, heterodimers, covalently bound multimers Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/relations/IonNetRelationsModule.java Retention time calibration The retention time calibration attempts to reduce the deviation of retention times between feature lists, by searching for common features in these lists and using them as calibration standards. Feature processing Normalization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/norm_rtcalibration/RTCalibrationModule.java Same RT and m/z range gap filler This method fills the missing peaks (gaps) in the feature list by looking at the whole m/z and retention time range of the feature list row and adding all raw data points in the same range. Feature detection Gap filling Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/gapfill_samerange/SameRangeGapFillerModule.java Save project This module saves the current MZmine project. Project Project I/O Annexhc; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/io/projectsave/ProjectSaveModule.java Save project as This module saves the current MZmine project. Project Project I/O Annexhc; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/io/projectsave/ProjectSaveAsModule.java Savitzky Golay resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/savitzkygolay/SavitzkyGolayResolverModule.java Scan by scan filtering This module performs filtering algorithms on each scan individually. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853 src/main/java/io//mzmine/modules/dataprocessing/filter_scanfilters/ScanFiltersModule.java Scan smoothing (LC/MS or MS level 1) This module averages intensity values within a time-scan frame. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_scansmoothing/ScanSmoothingModule.java Scatter plot Scatter plot. Visualization Visualization feature list Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/scatterplot/ScatterPlotVisualizerModule.java Set CCS calibration Sets a CCS calibration to a raw data file. Feature processing Annotation Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ccscalibration/setcalibration/SetCCSCalibrationModule.java Single Spectrum library search Search single spectrum in a spectral library. Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/spectraldatabase/SingleSpectrumLibrarySearchModule.java Smoothing Smooths intensity along the retention time and/or mobility dimension. Feature detection Resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_smoothing/SmoothingModule.java Sort feature lists Sort selected feature lists alphabetically Feature detection Feature list methods Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/sortfeaturelists/SortFeatureListsModule.java Sort formulas This module sorts all formula lists of rows in a feature list Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_formula_sort/FormulaSortModule.java Sort raw data files Sort selected raw data files alphabetically Spectral data Raw data methods Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/sortdatafiles/SortDataFilesModule.java Sort results of spectra library search This method sorts all results of spectral library search. Feature processing Annotation Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_spectral_match_sort/SortSpectralMatchesModule.java Spectra stack visualizer Visualize multiple spectra. Visualization Visualization Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/spectra_stack/SpectraStackVisualizerModule.java Spectra visualizer Spectra visualizer. Visualization Visualization Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal; aiden; Robin Schmid; ?ukasz Fiszer src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/SpectraVisualizerModule.java Spectral library search This method searches all feature list rows (from all feature lists) against a local spectral libraries (needs to be loaded first). Feature processing Annotation Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_spectral_library_match/SpectralLibrarySearchModule.java Spectral mirror (USI enabled) Compare spectra Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/mirrorspectra/MirrorScanModule.java Standard compound normalizer This module normalizes the feature heights and areas according to selected internal standards. Feature processing Normalization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/norm_standardcompound/StandardCompoundNormalizerModule.java Submit GNPS MASST search Submit an MS2 spectrum to GNPS MASST search, searching against public data. Feature IO Feature list export Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_features_gnps/masst/GnpsMasstSubmitModule.java TIC/XIC visualizer TIC/XIC visualizer. Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/chromatogram/ChromatogramVisualizerModule.java TSF import module Imports Bruker .d directories with tsf data files. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_bruker_tsf/TSFImportModule.java Targeted feature detection Targeted feature detection Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_targeted/TargetedFeatureDetectionModule.java Thermo RAW file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_thermo_raw/ThermoRawImportModule.java Van Krevelen Diagram Van Krevelen Diagram. Visualization Visualization feature list Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/vankrevelendiagram/VanKrevelenDiagramModule.java Venn export module Exports detected/undetected features in a feature list so they can be plotted as a venn diagramm. Feature IO Feature list export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_venn/VennExportModule.java Waters RAW file import This module imports raw data into the project. Spectral data Raw data import Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_waters_raw/WatersRawImportModule.java ZIP/gZIP file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_zip/ZipImportModule.java iMZML file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_imzml/ImzMLImportModule.java m/z mobility region extraction Extracts regions of m/z-mobility regions Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_mobilitymzregionextraction/MobilityMzRegionExtractionModule.java metaCorrelate This method correlates and groups feature list rows based on multiple criteria (feature shape, intensity across samples, ...) Feature processing Feature grouping Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/group_metacorrelate/corrgrouping/CorrelateGroupingModule.java module describe Feature filtering Feature list filtering Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/example/EmptyFeatureListModule.java mzData file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_mzdata/MzDataImportModule.java mzML file import via MSDK This module imports raw data into the project. Spectral data Raw data import Kirill Ponomarov; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_mzml/MSDKmzMLImportModule.java mzML file import via jmzml This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/deprecated_jmzml/MzMLImportModule.java mzXML file import This module imports raw data into the project. Spectral data Raw data import Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_mzxml/MzXMLImportModule.java netCDF file import This module imports raw data into the project. Spectral data Raw data import David Ma\u009aek; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_netcdf/NetCDFImportModule.java scan histogram This module plots all values of all selected scans into one histogram and offers a Gaussian fit. Visualization Visualization Olena Mokshyna; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/scan_histogram/ScanHistogramModule.java","title":"Modules list"},{"location":"coding/module_list.html#mzmine-module-overview","text":"","title":"MZmine module overview"},{"location":"coding/module_list.html#list-of-mzmine-modules","text":"List of MZmine modules extracted on: 2022/12/01 Please note that some contributors might not be correctly reflected due to reformatting and refactoring. Use git-blame at the MZmine code repository for a more detailed insight. name description main class sub class contributors path 13C isotope filter (formerly: isotope grouper) This module detects isotopic features and removes them from the feature list. Its isotope patterns are limited to detected features. For a more comprehensive isotope pattern coverage and isotopes other than 13C, use the Isotope finder. Feature filtering Isotopes Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_isotopegrouper/IsotopeGrouperModule.java 2D visualizer Two dimensional visualization of feature lists. Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/twod/TwoDVisualizerModule.java 3D visualizer 3D visulization of raw data. Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/fx3d/Fx3DVisualizerModule.java ADAP Aligner (GC) This module calculates pairwise convolution integral for each pair of unaligned peaks in order to find the best alignment Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/align_adap3/ADAP3AlignerModule.java ADAP Chromatogram Builder This module connects data points from mass lists and builds chromatograms. Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_adapchromatogrambuilder/ModularADAPChromatogramBuilderModule.java ADAP3D feature detection (experimental) This module detect peaks from profile spectra using the ADAP3D algorithm developed by the Xiuxia Du lab. The module requires no parameter settings. Note that it will not work with centroid spectra. Feature detection Chromatogram detection Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_adap3d/ADAP3DModule.java Adap Resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/ADAPpeakpicking/AdapResolverModule.java Add ion identities to networks This module adds ion identities to existing networks Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/addionannotations/AddIonNetworkingModule.java Aird file import This module imports aird raw data into the project. Spectral data Raw data import Robin Schmid; Tomas Pluskal; lms19880914 src/main/java/io//mzmine/modules/io/import_rawdata_aird/AirdImportModule.java Align scans (LC/MS or MS level 1) This module align scans for small fluctuations correlating consecutive scans. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_alignscans/AlignScansModule.java Annotate possible isomers Annotates features with the same (or similar) m/z but different mobilities within a specified retention time window. Feature processing Feature grouping Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_interestingfeaturefinder/AnnotateIsomersModule.java Average formulas for annotation networks Creates a list of average molecular formulas from all formula lists of all ions in this network (e.g., M+H and M+Na) Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/formula/createavgformulas/CreateAvgNetworkFormulasModule.java Baseline correction This module performs a baseline correction on raw data files. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_baselinecorrection/BaselineCorrectionModule.java Baseline resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/baseline/BaselineFeatureResolverModule.java Batch mode This module allows execution of multiple processing tasks in a batch. Project Project Kirill Ponomarov; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/batchmode/BatchModeModule.java Batch spectral library generation Uses metadata sheet to generate spectral library Feature IO Feature list export Steffen Heuckeroth; Robin Schmid src/main/java/io//mzmine/modules/io/spectraldbsubmit/batch/LibraryBatchGenerationModule.java Bruker TDF file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_bruker_tdf/TDFImportModule.java CAMERA search This method searches for pseudo-spectra using the CAMERA algorithm. Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_camera/CameraSearchModule.java CCS calculation module Calculates CCS values for features. Feature processing Annotation Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; tarush.singh src/main/java/io//mzmine/modules/dataprocessing/id_ccscalc/CCSCalcModule.java Calculate EC-MS potentials Calculates metabolite formation potentials in EC-MS experiments. Feature processing Annotation Tomas Pluskal; m_wesn01 src/main/java/io//mzmine/modules/dataprocessing/id_ecmscalcpotential/CalcEcmsPotentialModule.java CentWave resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/centwave/CentWaveResolverModule.java Check all ion identities by MS/MS Checks ion identities (in-source fragments and multimers) by MS/MS Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/checkmsms/IonNetworkMSMSCheckModule.java Chromatogram and spectra visualizer Inspect LC-MS data by navigating through raw data. Visualization Visualization Annexhc; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; annexhc; knakul853; Robin Schmid src/main/java/io//mzmine/modules/visualization/chromatogramandspectra/ChromatogramAndSpectraVisualizerModule.java Clear feature list annotations This method clears the annotations from the feature list Feature filtering Feature list filtering Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_clearannotations/ClearFeatureAnnotationsModule.java Clear ion identites Deletes all ion identities and networks of all rows Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/clearionids/ClearIonIdentitiesModule.java Clear project Clearing all project files and feature lists Project Project Robin Schmid src/main/java/io//mzmine/modules/tools/clear_project/ClearProjectModule.java CliqueMS annotation This method groups features and annotates the groups/cliques using CliqueMS algorithm. Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_cliquems/CliqueMSModule.java Correlated features \u00ce\u0094 m/z histogram This module plots all m/z deltas between correlated features in a histogram and offers a Gaussian fit. Visualization Visualization feature list Olena Mokshyna; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/scan_histogram/CorrelatedFeaturesMzHistogramModule.java Correlation coefficient histogram (grouped feature shapes) This module plots all correlations between feature shapes. Visualization Visualization feature list Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/histo_feature_correlation/FeatureCorrelationHistogramModule.java Crop filter This module performs cropping of raw data files. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_cropfilter/CropFilterModule.java Custom DB search Search spectrum against local csv database Feature processing Annotation Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/customdatabase/CustomDBSpectraSearchModule.java Custom database search This method searches a custom database (CSV file) using m/z and retention time values. Feature processing Annotation Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_localcsvsearch/LocalCSVDatabaseSearchModule.java DIA pseudo MS2 builder (experimental) Builds pseudo MS2 scans based on feature shape correlation. Feature filtering Feature list filtering Steffen Heuckeroth; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_diams2/DiaMs2CorrModule.java Data point processing Processes individual spectra with multiple steps like mass detection, deisotoping, annotation Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/datapointprocessing/DataPointProcessingModule.java Duplicate peak filter This method removes duplicate peaks (peaks with same retention times and m/z) from the feature list. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_duplicatefilter/DuplicateFilterModule.java Export CSV (legacy MZmine 2) Legacy MZmine 2 method: This method exports the feature list contents into a CSV (comma-separated values) file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_csv_legacy/LegacyCSVExportModule.java Export MS/MS spectra Export MS/MS spectra of detected features. Spectral data Export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/featurelisttable_modular/export/MSMSExportModule.java Export MSn trees This method exports the feature list contents into a CSV (comma-separated values) file. Spectral data Raw data export Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_msn_tree/MSnTreeExportModule.java Export feature networks to csv Export resutls from correlation/MS annotation as networks to csv Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; sanbit876 src/main/java/io//mzmine/modules/dataprocessing/group_metacorrelate/export/ExportCorrAnnotationModule.java Export for SIRIUS This method exports a MGF file that contains for each feature, (1) the deconvoluted MS1 isotopic pattern, and (2) the MS/MS spectrum (highest precursor ion intensity). This file can be open and processed with Sirius, https://bio.informatik.uni-jena.de/software/sirius/. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_features_sirius/SiriusExportModule.java Export images to csv Exports spatially resolved data of features to csv files. Feature IO Export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_image_csv/ImageToCsvExportModule.java Export isotope pattern Export isotope pattern of detected features. Spectral data Export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/featurelisttable_modular/export/IsotopePatternExportModule.java Export library analysis csv Cosine similarity of library to csv Feature IO Feature list export Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_library_analysis_csv/LibraryAnalysisCSVExportModule.java Export scans Export scans from raw data. Spectral data Export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_scans/ExportScansModule.java Export scans into one file Export scans or mass lists into one file Spectral data Raw data export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_scans/ExportScansFromRawFilesModule.java Export to CSV file (modular) This method exports the feature list contents into a CSV (comma-separated values) file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_csv/CSVExportModularModule.java Export to GNPS-GC-MS (with ADAP) GNPS GC-EI-MS workflow. Export the mgf, quant table and Kovats reference file (optionally). Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_gnps/gc/GnpsGcExportAndSubmitModule.java Export to MGF file (ADAP) This method exports all ADAP clustered spectra in a feature lists to an MGF file. Used in the GNPS GC-MS workflow. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_mgf/AdapMgfExportModule.java Export to MSP file (ADAP) This method exports all ADAP clustered spectra in a feature lists to an MSP file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_msp/AdapMspExportModule.java Export to MetaboAnalyst file This method exports the feature list contents into a CSV (comma-separated values) file that is formatted for easy processing by the MetaboAnalyst service (http://www.metaboanalyst.ca). Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_metaboanalyst/MetaboAnalystExportModule.java Export to SQL database This method exports the feature list contents into an SQL database using JDBC. Feature IO Feature list export Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_features_sql/SQLExportModule.java Export to mzTab file This method exports the feature list contents into a mzTab file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_mztab/MzTabExportModule.java Export to mzTab-m file. This method exports the feature list contents into a mzTab-m file. Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_mztabm/MZTabmExportModule.java Export/Submit to GNPS-FBMN GNPS feature-based molecular networking export and submit module. Exports the MGF file for GNPS (only for MS/MS), the quant table (CSV export) and additional edges (ion identity networks and correlation) Feature IO Feature list export Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_gnps/fbmn/GnpsFbmnExportAndSubmitModule.java External CCS calibration Uses an externally calculated CCS calibration to calculate CCS values. Feature processing Annotation Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ccscalibration/external/ExternalCCSCalibrationModule.java Extract scans Extract a defined number of scans around a center time Spectral data Raw data export Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_extractscans/ExtractScansModule.java FTMS shoulder peaks filter This method filters mass lists and removes residual signals known as 'shoulder peaks' and commonly observed in FTMS data. Spectral data Raw data filtering Robin Schmid; Roman Bushuiev; Sonja-analytik; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_shoulderpeaksfilter/ShoulderPeaksFilterModule.java Feature intensity plot Feature intensity plot. Visualization Visualization feature list Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/intensityplot/IntensityPlotModule.java Feature list blank subtraction Subtracts features appearing in (procedural) blank measurements feature list from an aligned feature list. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_blanksubtraction/FeatureListBlankSubtractionModule.java Feature list info visualizer Generates a batch from the list of applied methods to reproduce this feature list. Visualization Visualization Roman Bushuiev; Tomas Pluskal; m_wesn01 src/main/java/io//mzmine/modules/visualization/infovisualizer/InfoVisualizerModule.java Feature list rows filter This method removes certain rows from a feature list based on given restrictions. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_rowsfilter/RowsFilterModule.java Feature table MZmine 3 feature table. Visualization Visualization Annexhc; Kirill Ponomarov; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/featurelisttable_modular/FeatureTableFXModule.java Formula prediction This method gets the predicted formula for each unknown compound Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_formulapredictionfeaturelist/FormulaPredictionFeatureListModule.java Formula prediction Predict molecular formulae for features. Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Weiching Chen; knakul853 src/main/java/io//mzmine/modules/dataprocessing/id_formulaprediction/FormulaPredictionModule.java Formula prediction (on annotation networks) This method predicts formulae for each ion identity in all annotation networks (generated by MS annotations module or similar) Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/formula/prediction/FormulaPredictionIonNetworkModule.java Formula prediction on a single spectrum Predict formulae in a single spectrum. Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/sumformula/SumFormulaSpectraSearchModule.java Frame visualizer Visualizes frames from ion mobility raw data files. Visualization Visualization Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/frames/FrameVisualizerModule.java Graphical manual picker Manually pick or reintegrate features in EICs by point and click operations. Feature processing Feature resolving Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_manual/XICManualPickerModule.java Graphics export Export charts to vector or pixel graphics Visualization Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/gui/chartbasics/graphicsexport/GraphicsExportModule.java GridMass - 2D feature detection This module detect peaks based on a 2D peak recognition procedure. Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_gridmass/GridMassModule.java Group MS2 scans with features This method assings all MS2 scans within range to all features in this feature list Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_groupms2/GroupMS2Module.java Hierachical aligner (GC) This method aligns detected peaks using a match score. This score is calculated based on the MZ profile and RT of each peak using preset tolerances. Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_hierarchical/HierarAlignerGcModule.java Hierarchical Clustering This method combines peaks into analytes and constructs fragmentation spectrum for each analyte Feature filtering Spectral deconvolution Aleksandr Smirnov; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Varun Suresh; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/adap_hierarchicalclustering/ADAPHierarchicalClusteringModule.java Histogram plot Histogram plot Visualization Visualization feature list Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/histogram/HistogramVisualizerModule.java ICP MS CSV file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_icpms_csv/IcpMsCVSImportModule.java IMS Raw data visualizer Multidimensional raw data inspection of IMS raw data. Visualization Visualization Annexhc; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; aiden; knakul853 src/main/java/io//mzmine/modules/visualization/ims/ImsVisualizerModule.java IMS mobility mz plot Heatmap view for detected features. Visualization Visualization Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/ims_mobilitymzplot/IMSMobilityMzPlotModule.java Image builder This module connects data points from mass lists and builds images. Feature detection Chromatogram detection Annexhc; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_imagebuilder/ImageBuilderModule.java Image visualizer Image visualizer Visualization Visualization Annexhc; Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/image/ImageVisualizerModule.java Import GNPS results Imports GNPS feature based molecular networking results into the selected feature list (library matches) Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_gnpsresultsimport/GNPSResultsImportModule.java Import MS data This module combines the import of different MS data formats and provides advanced options Spectral data Raw data import Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; lms19880914; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_all/AllSpectralDataImportModule.java Import from csv file. This method imports the feature list contents from a csv file. Feature IO Feature list import Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_features_csv/CsvImportModule.java Import mzTab file This method imports a feature list from a mzTab file. Feature IO Feature list import Nils Hoffmann; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_features_mztab/MzTabImportModule.java Import mzTab-m file This method imports a feature list from a mzTab-m file. Feature IO Feature list import Nils Hoffmann; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_features_mztabm/MZTabmImportModule.java Import spectral library This method imports spectral libraries to speed up spectral library matching Spectral data Raw data import Olena Mokshyna; Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_spectral_library/SpectralLibraryImportModule.java Ims expander Expands rt chromatograms in mobility dimension. Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_imsexpander/ImsExpanderModule.java Injection time analysis Plots the minimum signal intensity against the injection time to see trends in trap based mass spectrometers Visualization Visualization Olena Mokshyna; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/injection_time/InjectTimeAnalysisModule.java Internal standard CCS calculation Calculates CCS values based on an reference compound list and it's detected features in a feature list. Feature processing Annotation Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ccscalibration/reference/ReferenceCCSCalibrationModule.java Ion Identity Molecular Networks Visualize the results of the MS annotation module Visualization Visualization feature list Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/networking/AnnotationNetworkModule.java Ion identity network refinement Refinement of ion identity networks Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/refinement/IonNetworkRefinementModule.java Ion identity networking This method searches for adducts, in-source fragments, and clusters Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/ionidnetworking/IonNetworkingModule.java Ion mobility raw data overview Visualizes ion mobility raw data files. Visualization Visualization Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/rawdataoverviewims/IMSRawDataOverviewModule.java Ion mobility trace builder Builds ion mobility traces for a raw data file Feature detection Chromatogram detection Annexhc; Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_ionmobilitytracebuilder/IonMobilityTraceBuilderModule.java Isotope pattern preview Calculate and view isotope patterns. Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/tools/isotopepatternpreview/IsotopePatternPreviewModule.java Isotope peak scanner Searches for m/z and intensity distribution of a calculated isotope pattern within a feature list. Feature filtering Isotopes Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_isotopepeakscanner/IsotopePeakScannerModule.java Isotopic peaks finder Find isotope signals in the FWHM of all features in the list Feature filtering Isotopes Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; tarush.singh src/main/java/io//mzmine/modules/dataprocessing/filter_isotopefinder/IsotopeFinderModule.java Join aligner This method aligns detected peaks using a match score. This score is calculated based on the mass and retention time of each peak using preset tolerance. Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/align_join/JoinAlignerModule.java Kendrick mass plot Kendrick mass plot. Visualization Visualization feature list Annexhc; Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; annexhc; knakul853 src/main/java/io//mzmine/modules/visualization/kendrickmassplot/KendrickMassPlotModule.java Kovats index extraction Extract Kovats indexes from a raw data file and save to csv. Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/tools/kovats/KovatsIndexExtractionModule.java LC-Image Aligner Aligns LC and imaging measurements based on m/z and mobility. Images are aligned to all LC features that match, only the best match is retained. Feature detection Alignment Olena Mokshyna; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_lcimage/LcImageAlignerModule.java Learner module This module is for learners only Feature filtering Feature list filtering Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/example/LearnerModule.java Library search results window Visualize spectral database search results. Visualization Visualization Kevin-Murray; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; murra668; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/spectralmatchresults/SpectraIdentificationResultsModule.java Library submit Submit MS2 spectra for spectral libraries. Spectral data Export Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/spectraldbsubmit/LibrarySubmitModule.java Linear normalizer Linear normalizer divides the height (or area) of each feature in the feature list by a normalization factor, determined according to the given normalization type. Feature processing Normalization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/norm_linear/LinearNormalizerModule.java Lipid annotation This method searches and annotates for features which m/z value matches a predicted mass of selected lipids. Feature processing Annotation Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_lipididentification/LipidSearchModule.java Lipid annotation Lipid annotation on individual spectra Raw data Annotation Annexhc; Robin Schmid; Steffen Heuckeroth; SurajV; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/lipidsearch/LipidSpectraSearchModule.java Local minimum resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/minimumsearch/MinimumSearchFeatureResolverModule.java MS/MS data visualizer Scatter plot for MS/MS data visualization, fouraxes types supported: retention time, precursor m/z, product m/z, neutral loss Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Sandeep; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/msms/MsMsVisualizerModule.java MS/MS quality export Exports metrics for MS/MS spectra Other Tools Steffen Heuckeroth; SteffenHeu src/main/java/io//mzmine/modules/io/export_msmsquality/MsMsQualityExportModule.java MS/MS spectral networking (Molecular networking) Checks MS2 similarity of all rows within the groups or on all networks and between networks Feature processing Feature grouping Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/group_metacorrelate/msms/similarity/MS2SimilarityModule.java MS2 similarity search This method searches for similar MS2 fragmentation spectra between two feature lists Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ms2search/Ms2SearchModule.java MSn Tree Visualizer Visualizes MSn spectra in a tree structure and all spectra of the same level in one spectra chart Visualization Visualization Olena Mokshyna; Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/msn_tree/MSnTreeVisualizerModule.java MSn feature list builder This module looks through the whole raw data for MSn scans and makes a list of chromatographic features using the precursor mass. Feature detection Chromatogram detection Kevin-Murray; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_msn/MsnFeatureDetectionModule.java MSn tree feature list builder Builds all MSn trees and extracts chromatograms for the precursor m/z Feature detection Chromatogram detection Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_msn_tree/MsnTreeFeatureDetectionModule.java MZ range from formula calcuator Calculate mz range from formula and mz tolerance Other Tools Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/mzrangecalculator/MzRangeFormulaCalculatorModule.java MZ range from tolerance calculator Calculate mz range from mz tolerance and mass Other Tools Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/mzrangecalculator/MzRangeMassCalculatorModule.java Main resolver Resolves chromatograms to features. Provides additional parameters and orchestrates the algoriithms Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/FeatureResolverModule.java Manual picker Manually pick or reintegrate features in EICs. Feature processing Feature resolving Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_manual/ManualFeaturePickerModule.java Mass calibration This module estimates systematic error of measurement by analysing differences between actual mass peaks and masses of assigned compounds, it then shifts the mass peaks to account against that bias. Spectral data Raw data methods Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_masscalibration/MassCalibrationModule.java Mass detection This module detects individual ions in each scan and builds a mass list for each scan. Spectral data Raw data methods Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/featdet_massdetection/MassDetectionModule.java Massvoltammogram chart A chart that combines a specific instrumental setup (redox cell) with mass spectrometry. Different timepoints are converted into the potentials applied to the sample, this is plotted as 3D spectra against this potential. Visualization Visualization Tomas Pluskal; m_wesn01 src/main/java/io//mzmine/modules/visualization/massvoltammogram/MassvoltommogramModule.java Merge files Merge all scans of multiple files to one raw data file Spectral data Raw data methods Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/filter_merge/RawFileMergeModule.java Merge lists This method merges feature lists by appending all rows into a new list. Perform alignment before to align all features from comparable samples and use this method to merge feature lists that should not be aligned: e.g., positive and negative mode data. Feature detection Alignment Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_append_rows/MergeAlignerModule.java Mobility scan merging module Merges mobility scans at the same retention time to a summed frame spectrum. Spectral data Raw data methods Olena Mokshyna; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_mobilityscanmerger/MobilityScanMergerModule.java Mobilogram summing Bins intensities within given mobility ranges to correct for noise in mobilograms. Feature detection Chromatogram detection Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_mobilogram_summing/MobilogramBinningModule.java MsMs Spectra merge Merge multiple MS2 spectra to a single spectrum. Spectral data Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/msmsspectramerge/MsMsSpectraMergeModule.java Multivariate Curve Resolution This method combines peaks into analytes and constructs fragmentation spectrum for each analyte Feature filtering Spectral deconvolution Aleksandr Smirnov; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Varun Suresh; tnguy271 src/main/java/io//mzmine/modules/dataprocessing/adap_mcr/ADAPMultivariateCurveResolutionModule.java NIST MS Search This method searches spectra against the NIST library. Feature processing Annotation Kevin-Murray; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; murra668; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_nist/NistMsSearchModule.java Neutral loss filter Searches for neutral losses within a feature list. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_neutralloss/NeutralLossFilterModule.java Noise amplitude resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/noiseamplitude/NoiseAmplitudeResolverModule.java Online DB search Online DB search on individual spectra Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/onlinedatabase/OnlineDBSpectraSearchModule.java Online database search This module attempts to find those peaks in a feature list, which form an isotope pattern. Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal; knakul853 src/main/java/io//mzmine/modules/dataprocessing/id_onlinecompounddb/OnlineDBSearchModule.java Open project This module opens an existing MZmine project. The current workspace will be discarded. Project Project I/O Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/io/projectload/ProjectLoadModule.java Path aligner Description not yet available. Feature detection Alignment Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_path/PathAlignerModule.java Peak comparison rows filter This method removes certain rows from a feature list based on peak comparisons. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_peakcomparisonrowfilter/PeakComparisonRowFilterModule.java Peak filter This method removes certain peak entries based on given restrictions. Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_featurefilter/FeatureFilterModule.java Peak finder Fill gaps in aligned feature lists of LC-MS measurements. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/gapfill_peakfinder/PeakFinderModule.java Peak finder (multithreaded) This method fills the missing peaks (gaps) in the feature list by searching for a peak in the raw data. Feature detection Gap filling Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/gapfill_peakfinder/multithreaded/MultiThreadPeakFinderModule.java Precursor search in spectral libraries This method searches all peaklist rows against a local spectral libraries to identify possible precursor ions Feature processing Annotation Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_precursordbsearch/PrecursorDBSearchModule.java Processing wizard Creates processing batches with a reduced set of parameters. Other Tools Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/tools/batchwizard/BatchWizardModule.java Project metadata import This module imports metadata into the project from .tsv-format files. Project Project metadata Kirill Ponomarov; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/projectmetadata/ProjectMetadataImportModule.java Quality parameters Calculates quality parameters such as FWHM, asymmetry factor, tailing factor, S/N ratio. Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/qualityparameters/QualityParametersModule.java RANSAC aligner Feature list aligner based on the RANSAC algorithm. Feature detection Alignment Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/align_ransac/RansacAlignerModule.java Raw data export This module exports raw data files from your MZmine project into various formats Spectral data Raw data export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_rawdata_mzml/MzMLExportModule.java Raw data export to netCDF This module exports raw data files from your MZmine project into various formats Spectral data Raw data export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_rawdata_netcdf/NetCDFExportModule.java Raw data file rename Renames raw data files. Other Tools Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/rawfilerename/RawDataFileRenameModule.java Raw data overview Raw data overview Visualization Visualization Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/visualization/rawdataoverview/RawDataOverviewModule.java Recursive IMS Builder Builds m/z traces for ion mobility spectrometry data Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_recursiveimsbuilder/RecursiveIMSBuilderModule.java Relations between ion networks This method searches for relations between ion networks (e.g., chemical modifications, heterodimers, covalently bound multimers Feature processing Ion identity networking Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ion_identity_networking/relations/IonNetRelationsModule.java Retention time calibration The retention time calibration attempts to reduce the deviation of retention times between feature lists, by searching for common features in these lists and using them as calibration standards. Feature processing Normalization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/norm_rtcalibration/RTCalibrationModule.java Same RT and m/z range gap filler This method fills the missing peaks (gaps) in the feature list by looking at the whole m/z and retention time range of the feature list row and adding all raw data points in the same range. Feature detection Gap filling Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/gapfill_samerange/SameRangeGapFillerModule.java Save project This module saves the current MZmine project. Project Project I/O Annexhc; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/io/projectsave/ProjectSaveModule.java Save project as This module saves the current MZmine project. Project Project I/O Annexhc; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853; Robin Schmid src/main/java/io//mzmine/modules/io/projectsave/ProjectSaveAsModule.java Savitzky Golay resolver Resolves chromatograms to features. Feature processing Feature resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_chromatogramdeconvolution/savitzkygolay/SavitzkyGolayResolverModule.java Scan by scan filtering This module performs filtering algorithms on each scan individually. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; knakul853 src/main/java/io//mzmine/modules/dataprocessing/filter_scanfilters/ScanFiltersModule.java Scan smoothing (LC/MS or MS level 1) This module averages intensity values within a time-scan frame. Spectral data Raw data filtering Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_scansmoothing/ScanSmoothingModule.java Scatter plot Scatter plot. Visualization Visualization feature list Olena Mokshyna; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/scatterplot/ScatterPlotVisualizerModule.java Set CCS calibration Sets a CCS calibration to a raw data file. Feature processing Annotation Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_ccscalibration/setcalibration/SetCCSCalibrationModule.java Single Spectrum library search Search single spectrum in a spectral library. Raw data Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/spectraidentification/spectraldatabase/SingleSpectrumLibrarySearchModule.java Smoothing Smooths intensity along the retention time and/or mobility dimension. Feature detection Resolving Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_smoothing/SmoothingModule.java Sort feature lists Sort selected feature lists alphabetically Feature detection Feature list methods Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/sortfeaturelists/SortFeatureListsModule.java Sort formulas This module sorts all formula lists of rows in a feature list Feature processing Annotation Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_formula_sort/FormulaSortModule.java Sort raw data files Sort selected raw data files alphabetically Spectral data Raw data methods Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/tools/sortdatafiles/SortDataFilesModule.java Sort results of spectra library search This method sorts all results of spectral library search. Feature processing Annotation Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/id_spectral_match_sort/SortSpectralMatchesModule.java Spectra stack visualizer Visualize multiple spectra. Visualization Visualization Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/spectra_stack/SpectraStackVisualizerModule.java Spectra visualizer Spectra visualizer. Visualization Visualization Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; SurajV; Tomas Pluskal; aiden; Robin Schmid; ?ukasz Fiszer src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/SpectraVisualizerModule.java Spectral library search This method searches all feature list rows (from all feature lists) against a local spectral libraries (needs to be loaded first). Feature processing Annotation Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/dataprocessing/id_spectral_library_match/SpectralLibrarySearchModule.java Spectral mirror (USI enabled) Compare spectra Other Tools Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/spectra/simplespectra/mirrorspectra/MirrorScanModule.java Standard compound normalizer This module normalizes the feature heights and areas according to selected internal standards. Feature processing Normalization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/norm_standardcompound/StandardCompoundNormalizerModule.java Submit GNPS MASST search Submit an MS2 spectrum to GNPS MASST search, searching against public data. Feature IO Feature list export Robin Schmid; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/export_features_gnps/masst/GnpsMasstSubmitModule.java TIC/XIC visualizer TIC/XIC visualizer. Visualization Visualization Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/chromatogram/ChromatogramVisualizerModule.java TSF import module Imports Bruker .d directories with tsf data files. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_bruker_tsf/TSFImportModule.java Targeted feature detection Targeted feature detection Feature detection Chromatogram detection Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/featdet_targeted/TargetedFeatureDetectionModule.java Thermo RAW file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_thermo_raw/ThermoRawImportModule.java Van Krevelen Diagram Van Krevelen Diagram. Visualization Visualization feature list Annexhc; Olena Mokshyna; Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/visualization/vankrevelendiagram/VanKrevelenDiagramModule.java Venn export module Exports detected/undetected features in a feature list so they can be plotted as a venn diagramm. Feature IO Feature list export Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/export_features_venn/VennExportModule.java Waters RAW file import This module imports raw data into the project. Spectral data Raw data import Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_waters_raw/WatersRawImportModule.java ZIP/gZIP file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_zip/ZipImportModule.java iMZML file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_imzml/ImzMLImportModule.java m/z mobility region extraction Extracts regions of m/z-mobility regions Feature filtering Feature list filtering Olena Mokshyna; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/filter_mobilitymzregionextraction/MobilityMzRegionExtractionModule.java metaCorrelate This method correlates and groups feature list rows based on multiple criteria (feature shape, intensity across samples, ...) Feature processing Feature grouping Robin Schmid; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/dataprocessing/group_metacorrelate/corrgrouping/CorrelateGroupingModule.java module describe Feature filtering Feature list filtering Robin Schmid; Roman Bushuiev; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/example/EmptyFeatureListModule.java mzData file import This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_mzdata/MzDataImportModule.java mzML file import via MSDK This module imports raw data into the project. Spectral data Raw data import Kirill Ponomarov; Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_mzml/MSDKmzMLImportModule.java mzML file import via jmzml This module imports raw data into the project. Spectral data Raw data import Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/deprecated_jmzml/MzMLImportModule.java mzXML file import This module imports raw data into the project. Spectral data Raw data import Robin Schmid; Steffen Heuckeroth; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/io/import_rawdata_mzxml/MzXMLImportModule.java netCDF file import This module imports raw data into the project. Spectral data Raw data import David Ma\u009aek; Steffen Heuckeroth; Tomas Pluskal src/main/java/io//mzmine/modules/io/import_rawdata_netcdf/NetCDFImportModule.java scan histogram This module plots all values of all selected scans into one histogram and offers a Gaussian fit. Visualization Visualization Olena Mokshyna; Tomas Pluskal; Robin Schmid src/main/java/io//mzmine/modules/visualization/scan_histogram/ScanHistogramModule.java","title":"List of MZmine modules"},{"location":"coding/raw_data_structure.html","text":"","title":"Raw data structure"},{"location":"module_docs/align_adap/align_adap_gc.html","text":"ADAP Aligner (GC) \u00b6 Description \u00b6 Feature list methods \u2192 Alignment \u2192 ADAP aligner (GC) This alignment algorithm has been developed as part of ADAP-GC v1.0, Automatic Data Analysis Pipeline for processing GC-MS metabolomics data. ADAP Aligner aligns features based on their mass spectra and retention time similarity. Unlike Join Aligner (which aligns peaks across all samples, using their m/z and retention time similarity), ADAP Aligner uses mass spectra and retention time to detect similar features in each sample and align them together. In fact, this algorithm is similar to Hierarchical Aligner (GC) , but it uses a different clustering method. Similarity between two features \\(f1\\) and \\(f2\\) is calculated by the following score: \\[S(f1, f2) = w*S_{time}(f1, f2) + (1 - w)*S_{spec}(f1, f2)\\] where \\(S_{time}(f1, f2)\\) is the relative retention time difference between two features, \\(S_{spec}(f1, f2)\\) is the spectrum similarity between two features. For more details, see reference [ 1 ]. Requirements \u00b6 ADAP Aligner requires mass spectra to be constructed prior to the alignment (e.g. using Spectral Deconvolution). A typical workflow can be as following: \"Raw data methods \u2192 Raw data import\" to import raw data files \"Raw data methods \u2192 Mass detection\" to detect masses in the raw data \"Feature detection \u2192 ADAP Chromatogram builder\" to build extracted-ion chromatograms \"Feature detection \u2192 Chromatogram resolving \u2192 ADAP Resolver\" to detect peaks (features) in each chromatogram \"Feature list methods \u2192 Spectral deconvolution (GC) \u2192 Multivariate Curve Resolution\" to combine the detected peaks (features) into analytes and builds pure fragmentation mass spectra for each analyte \"Feature list methods \u2192 Alignment \u2192 ADAP Aligner (GC)\" to align the analytes produced by the previous step \"Feature list methods \u2192 Export feature list \u2192 MSP file (ADAP)\" to export fragmentation mass spectra into MSP format References \u00b6 Jiang, W.; Qiu, Y.; Ni, Y.; Su, M.; Jia, W.; Du, X.: An automated data analysis pipeline for GC-TOF-MS metabonomics studies. Journal of proteome research 2010, 9 (11), 5974-81. DOI: 10.1021/pr1007703 Parameters \u00b6 Min confidence (between 0 and 1) \u00b6 A fraction of the total number of samples. An aligned feature must be detected at least in several samples. This parameter determines the minimum number of samples where a feature must be detected. The default value is 0.7, so an aligned feature must be observed at least in 70% of all samples. Retention time tolerance \u00b6 The maximum allowed retention time difference between aligned features from different samples. m/z tolerance \u00b6 The maximum m/z difference, when two peaks from different mass spectra are considered equal. Score threshold (between 0 and 1) \u00b6 The minimum value of the similarity function \\(S(f1, f2)\\) required for features to be aligned together. The default value is 0.75. Score weight (between 0 and 1) \u00b6 The weight \\(w\\) that is used in the similarity function \\(S(f1, f2)\\) . The default value is 0.1. Retention time similarity \u00b6 A method used for calculating the retention time similarity. The retention time difference (fast) is preferred method. Olena Mokshyna","title":"ADAP aligner (GC)"},{"location":"module_docs/align_adap/align_adap_gc.html#adap-aligner-gc","text":"","title":"ADAP Aligner (GC)"},{"location":"module_docs/align_adap/align_adap_gc.html#description","text":"Feature list methods \u2192 Alignment \u2192 ADAP aligner (GC) This alignment algorithm has been developed as part of ADAP-GC v1.0, Automatic Data Analysis Pipeline for processing GC-MS metabolomics data. ADAP Aligner aligns features based on their mass spectra and retention time similarity. Unlike Join Aligner (which aligns peaks across all samples, using their m/z and retention time similarity), ADAP Aligner uses mass spectra and retention time to detect similar features in each sample and align them together. In fact, this algorithm is similar to Hierarchical Aligner (GC) , but it uses a different clustering method. Similarity between two features \\(f1\\) and \\(f2\\) is calculated by the following score: \\[S(f1, f2) = w*S_{time}(f1, f2) + (1 - w)*S_{spec}(f1, f2)\\] where \\(S_{time}(f1, f2)\\) is the relative retention time difference between two features, \\(S_{spec}(f1, f2)\\) is the spectrum similarity between two features. For more details, see reference [ 1 ].","title":"Description"},{"location":"module_docs/align_adap/align_adap_gc.html#requirements","text":"ADAP Aligner requires mass spectra to be constructed prior to the alignment (e.g. using Spectral Deconvolution). A typical workflow can be as following: \"Raw data methods \u2192 Raw data import\" to import raw data files \"Raw data methods \u2192 Mass detection\" to detect masses in the raw data \"Feature detection \u2192 ADAP Chromatogram builder\" to build extracted-ion chromatograms \"Feature detection \u2192 Chromatogram resolving \u2192 ADAP Resolver\" to detect peaks (features) in each chromatogram \"Feature list methods \u2192 Spectral deconvolution (GC) \u2192 Multivariate Curve Resolution\" to combine the detected peaks (features) into analytes and builds pure fragmentation mass spectra for each analyte \"Feature list methods \u2192 Alignment \u2192 ADAP Aligner (GC)\" to align the analytes produced by the previous step \"Feature list methods \u2192 Export feature list \u2192 MSP file (ADAP)\" to export fragmentation mass spectra into MSP format","title":"Requirements"},{"location":"module_docs/align_adap/align_adap_gc.html#references","text":"Jiang, W.; Qiu, Y.; Ni, Y.; Su, M.; Jia, W.; Du, X.: An automated data analysis pipeline for GC-TOF-MS metabonomics studies. Journal of proteome research 2010, 9 (11), 5974-81. DOI: 10.1021/pr1007703","title":"References"},{"location":"module_docs/align_adap/align_adap_gc.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/align_adap/align_adap_gc.html#min-confidence-between-0-and-1","text":"A fraction of the total number of samples. An aligned feature must be detected at least in several samples. This parameter determines the minimum number of samples where a feature must be detected. The default value is 0.7, so an aligned feature must be observed at least in 70% of all samples.","title":"Min confidence (between 0 and 1)"},{"location":"module_docs/align_adap/align_adap_gc.html#retention-time-tolerance","text":"The maximum allowed retention time difference between aligned features from different samples.","title":"Retention time tolerance"},{"location":"module_docs/align_adap/align_adap_gc.html#mz-tolerance","text":"The maximum m/z difference, when two peaks from different mass spectra are considered equal.","title":"m/z tolerance"},{"location":"module_docs/align_adap/align_adap_gc.html#score-threshold-between-0-and-1","text":"The minimum value of the similarity function \\(S(f1, f2)\\) required for features to be aligned together. The default value is 0.75.","title":"Score threshold (between 0 and 1)"},{"location":"module_docs/align_adap/align_adap_gc.html#score-weight-between-0-and-1","text":"The weight \\(w\\) that is used in the similarity function \\(S(f1, f2)\\) . The default value is 0.1.","title":"Score weight (between 0 and 1)"},{"location":"module_docs/align_adap/align_adap_gc.html#retention-time-similarity","text":"A method used for calculating the retention time similarity. The retention time difference (fast) is preferred method. Olena Mokshyna","title":"Retention time similarity"},{"location":"module_docs/align_hierarch/align_hierarch.html","text":"Hierachical aligner GC (or Hierarchical Clustering aligner) \u00b6 Description \u00b6 Feature list methods \u2192 Alignment \u2192 Hierachical aligner (GC) This method aligns detected features in different samples through a match score . This score is calculated based on the mass spectrum and retention time of each peak and ranges of tolerance stipulated in the parameters setup dialog. General Algorithm \u00b6 This module uses the principles of agglomerative / hierarchical clustering approaches. The general principle behind those algorithms is described below. Given a set of N items to be clustered, and an N N distance (or similarity) matrix, the basic process of hierarchical clustering * (defined by S.C. Johnson in 1967 - https://home.deib.polimi.it/matteucc/Clustering/tutorial_html/hierarchical.html#johnson ) is this: Start by assigning each item to a cluster, so that if you have N items , you now have N clusters , each containing just one item. Let the distances (similarities) between the clusters the same as the distances (similarities) between the items they contain. Find the closest (most similar) pair of clusters and merge them into a single cluster, so that now you have one cluster less. Compute distances (similarities) between the new cluster and each of the old clusters. Repeat steps 2 and 3 until all items are clustered into a single cluster of size N. (*) Step 3 can be done in different ways based on linkage criteria : In single-linkage clustering (also called the connectedness or minimum method), we consider the distance between one cluster and another cluster to be equal to the shortest distance from any member of one cluster to any member of the other cluster. If the data consist of similarities, we consider the similarity between one cluster and another cluster to be equal to the greatest similarity from any member of one cluster to any member of the other cluster. In complete-linkage clustering (also called the diameter or maximum method), we consider the distance between one cluster and another cluster to be equal to the greatest distance from any member of one cluster to any member of the other cluster. In average-linkage clustering, we consider the distance between one cluster and another cluster to be equal to the average distance from any member of one cluster to any member of the other cluster. A variation on average-link clustering is the UCLUS method of R. D'Andrade (1978) - https://home.deib.polimi.it/matteucc/Clustering/tutorial_html/hierarchical.html#dandrade - which uses the median distance, which is much more outlier-proof than the average distance. All implemented types of hierarchical clustering are called agglomerative because they merge clusters iteratively. There is also a divisive hierarchical clustering , which does the reverse by starting with all objects in one cluster and subdividing them into smaller pieces. Divisive methods are not generally available, and have rarely been applied. Of course there is no point in having all the N items grouped in a single cluster. But, once you have got the complete hierarchical tree, if you want to change number of clusters to \\(k\\) , you can just cut the \\(k-1\\) longest links. Available linkage criteria \u00b6 Several linkage criteria are available: Single Complete Average A linkage criteria determines the distance between sets of observations as a function of the pairwise distances between observations. Some commonly used linkage criteria between two sets of observations \\(A\\) and \\(B\\) are: Name Description Maximum or complete-linkage clustering \\(max \\{ d(a,b):a \\in A, b \\in B \\}\\) Minimum or single-linkage clustering \\(min \\{ d(a,b):a \\in A, b \\in B \\}\\) Mean or average-linkage clustering, or UPGMA \\(\\frac{1}{\\lvert {A} \\rvert \\lvert {B} \\rvert} \\sum_{a \\in A} \\sum_{b \\in B} d(a,b)\\) where \\(d\\) is the chosen metric. MZmine GC: Specific considerations \u00b6 To obtain a distance matrix between all pairs of observations: A similarity score based on chemical likelihood only (chemSimScore) is computed. Calculation of the dot product is based on work by Stein and Scott (1994) , which is the most popular approach for spectrum similarity measure. Between two mass spectra \\(I_{t_j}\\) and \\(I_{r_i}\\) of two peaks \\(t_j\\) and \\(r_i\\) similarity is calculated as follows: \\[S(t_j,r_i)=dot(I_{t_j},I_{r_i})=<I_{t_j},I_{r_i}>/ (\\lvert I_{t_j} \\rvert \\lvert I_{r_i} \\rvert)\\] Then a similarity score based on RT likelihood only (rtScore) is computed. Retention time score is normalized relatively to the RT window tolerance provided by the user \\[rtScore=\\frac{1.0 d-rtDiff}{rtMaxDiff}\\] A combined weighted (or mixture) score is determined based on a mixture of the above two scores The final mixture score \\[score = (chemSimScore * mzWeight) + (rtScore * rtWeight))\\] A final square matrix is generated by comparing all the scores, for all the pairs of peaks. Getting clusters from rooted binary tree \u00b6 The algorithm methods described above all lead to a unique binary tree where all items are clustered into a single cluster of size N (number of leafs) . One more step is required to get the very final clusters list. A \"cutoff\" based on two criterion allows to split the single cluster into appropriate subgroups: A cluster cannot contain more than one leaf per sample A cluster cannot contain two leafs for which the distance (or mixture similarity score) is too low Method parameters \u00b6 Clustering strategy \u00b6 What strategy will be used for the clustering algorithm decision-making. Feature list name \u00b6 Name of the new aligned peak list. m/z tolerance \u00b6 This value sets the range, in terms of m/z, for possible peaks to be aligned. Maximum allowed m/z difference. Weight for m/z \u00b6 The assigned weight for m/z difference at the moment of match score calculation between feature rows. In case of perfectly matching m/z values the score receives the complete weight. Retention time tolerance \u00b6 Maximum allowed difference between two RT values. Weight for RT \u00b6 The assigned weight for RT difference at the moment of match score calculation between peak rows. In case of perfectly matching RT values the score receives the complete weight. Export dendrogram as TXT/CDT \u00b6 If checked, exports the resulting dendrogram to the given *txt file. The dendrogram can be then browsed using common applications such as TreeView https://sourceforge.net/projects/jtreeview/ . Dendrogram output text filename \u00b6 Name of the resulting TXT file to write the clustering resulting dendrogram to. If the file already exists, it will be overwritten. Olena Mokshyna","title":"Hierachical aligner (GC)"},{"location":"module_docs/align_hierarch/align_hierarch.html#hierachical-aligner-gc-or-hierarchical-clustering-aligner","text":"","title":"Hierachical aligner GC (or Hierarchical Clustering aligner)"},{"location":"module_docs/align_hierarch/align_hierarch.html#description","text":"Feature list methods \u2192 Alignment \u2192 Hierachical aligner (GC) This method aligns detected features in different samples through a match score . This score is calculated based on the mass spectrum and retention time of each peak and ranges of tolerance stipulated in the parameters setup dialog.","title":"Description"},{"location":"module_docs/align_hierarch/align_hierarch.html#general-algorithm","text":"This module uses the principles of agglomerative / hierarchical clustering approaches. The general principle behind those algorithms is described below. Given a set of N items to be clustered, and an N N distance (or similarity) matrix, the basic process of hierarchical clustering * (defined by S.C. Johnson in 1967 - https://home.deib.polimi.it/matteucc/Clustering/tutorial_html/hierarchical.html#johnson ) is this: Start by assigning each item to a cluster, so that if you have N items , you now have N clusters , each containing just one item. Let the distances (similarities) between the clusters the same as the distances (similarities) between the items they contain. Find the closest (most similar) pair of clusters and merge them into a single cluster, so that now you have one cluster less. Compute distances (similarities) between the new cluster and each of the old clusters. Repeat steps 2 and 3 until all items are clustered into a single cluster of size N. (*) Step 3 can be done in different ways based on linkage criteria : In single-linkage clustering (also called the connectedness or minimum method), we consider the distance between one cluster and another cluster to be equal to the shortest distance from any member of one cluster to any member of the other cluster. If the data consist of similarities, we consider the similarity between one cluster and another cluster to be equal to the greatest similarity from any member of one cluster to any member of the other cluster. In complete-linkage clustering (also called the diameter or maximum method), we consider the distance between one cluster and another cluster to be equal to the greatest distance from any member of one cluster to any member of the other cluster. In average-linkage clustering, we consider the distance between one cluster and another cluster to be equal to the average distance from any member of one cluster to any member of the other cluster. A variation on average-link clustering is the UCLUS method of R. D'Andrade (1978) - https://home.deib.polimi.it/matteucc/Clustering/tutorial_html/hierarchical.html#dandrade - which uses the median distance, which is much more outlier-proof than the average distance. All implemented types of hierarchical clustering are called agglomerative because they merge clusters iteratively. There is also a divisive hierarchical clustering , which does the reverse by starting with all objects in one cluster and subdividing them into smaller pieces. Divisive methods are not generally available, and have rarely been applied. Of course there is no point in having all the N items grouped in a single cluster. But, once you have got the complete hierarchical tree, if you want to change number of clusters to \\(k\\) , you can just cut the \\(k-1\\) longest links.","title":"General Algorithm"},{"location":"module_docs/align_hierarch/align_hierarch.html#available-linkage-criteria","text":"Several linkage criteria are available: Single Complete Average A linkage criteria determines the distance between sets of observations as a function of the pairwise distances between observations. Some commonly used linkage criteria between two sets of observations \\(A\\) and \\(B\\) are: Name Description Maximum or complete-linkage clustering \\(max \\{ d(a,b):a \\in A, b \\in B \\}\\) Minimum or single-linkage clustering \\(min \\{ d(a,b):a \\in A, b \\in B \\}\\) Mean or average-linkage clustering, or UPGMA \\(\\frac{1}{\\lvert {A} \\rvert \\lvert {B} \\rvert} \\sum_{a \\in A} \\sum_{b \\in B} d(a,b)\\) where \\(d\\) is the chosen metric.","title":"Available linkage criteria"},{"location":"module_docs/align_hierarch/align_hierarch.html#mzmine-gc-specific-considerations","text":"To obtain a distance matrix between all pairs of observations: A similarity score based on chemical likelihood only (chemSimScore) is computed. Calculation of the dot product is based on work by Stein and Scott (1994) , which is the most popular approach for spectrum similarity measure. Between two mass spectra \\(I_{t_j}\\) and \\(I_{r_i}\\) of two peaks \\(t_j\\) and \\(r_i\\) similarity is calculated as follows: \\[S(t_j,r_i)=dot(I_{t_j},I_{r_i})=<I_{t_j},I_{r_i}>/ (\\lvert I_{t_j} \\rvert \\lvert I_{r_i} \\rvert)\\] Then a similarity score based on RT likelihood only (rtScore) is computed. Retention time score is normalized relatively to the RT window tolerance provided by the user \\[rtScore=\\frac{1.0 d-rtDiff}{rtMaxDiff}\\] A combined weighted (or mixture) score is determined based on a mixture of the above two scores The final mixture score \\[score = (chemSimScore * mzWeight) + (rtScore * rtWeight))\\] A final square matrix is generated by comparing all the scores, for all the pairs of peaks.","title":"MZmine GC: Specific considerations"},{"location":"module_docs/align_hierarch/align_hierarch.html#getting-clusters-from-rooted-binary-tree","text":"The algorithm methods described above all lead to a unique binary tree where all items are clustered into a single cluster of size N (number of leafs) . One more step is required to get the very final clusters list. A \"cutoff\" based on two criterion allows to split the single cluster into appropriate subgroups: A cluster cannot contain more than one leaf per sample A cluster cannot contain two leafs for which the distance (or mixture similarity score) is too low","title":"Getting clusters from rooted binary tree"},{"location":"module_docs/align_hierarch/align_hierarch.html#method-parameters","text":"","title":"Method parameters"},{"location":"module_docs/align_hierarch/align_hierarch.html#clustering-strategy","text":"What strategy will be used for the clustering algorithm decision-making.","title":"Clustering strategy"},{"location":"module_docs/align_hierarch/align_hierarch.html#feature-list-name","text":"Name of the new aligned peak list.","title":"Feature list name"},{"location":"module_docs/align_hierarch/align_hierarch.html#mz-tolerance","text":"This value sets the range, in terms of m/z, for possible peaks to be aligned. Maximum allowed m/z difference.","title":"m/z tolerance"},{"location":"module_docs/align_hierarch/align_hierarch.html#weight-for-mz","text":"The assigned weight for m/z difference at the moment of match score calculation between feature rows. In case of perfectly matching m/z values the score receives the complete weight.","title":"Weight for m/z"},{"location":"module_docs/align_hierarch/align_hierarch.html#retention-time-tolerance","text":"Maximum allowed difference between two RT values.","title":"Retention time tolerance"},{"location":"module_docs/align_hierarch/align_hierarch.html#weight-for-rt","text":"The assigned weight for RT difference at the moment of match score calculation between peak rows. In case of perfectly matching RT values the score receives the complete weight.","title":"Weight for RT"},{"location":"module_docs/align_hierarch/align_hierarch.html#export-dendrogram-as-txtcdt","text":"If checked, exports the resulting dendrogram to the given *txt file. The dendrogram can be then browsed using common applications such as TreeView https://sourceforge.net/projects/jtreeview/ .","title":"Export dendrogram as TXT/CDT"},{"location":"module_docs/align_hierarch/align_hierarch.html#dendrogram-output-text-filename","text":"Name of the resulting TXT file to write the clustering resulting dendrogram to. If the file already exists, it will be overwritten. Olena Mokshyna","title":"Dendrogram output text filename"},{"location":"module_docs/align_join_aligner/join_aligner.html","text":"Join aligner \u00b6 Description \u00b6 Feature list methods \u2192 Alignment \u2192 Join aligner This method aligns detected peaks in different samples through a match score . This score is calculated based on the mass and retention time of each peak and ranges of tolerance specified in the parameter setup dialog. Algorithm \u00b6 Input \u00b6 The peak alignment algorithm uses: A master list of peaks (L) against which every new sample (Sj) will be matched. When aligning peaks from multiple samples, the master list is initially set to the first sample. Subsequently, it becomes a combination of samples aligned this far. Master list contains the samples as the columns and the matching peaks as the rows. For every row i in L, a two-dimensional window (a window size is selected by the user), called Alignment window (AW) , defines the ranges of m/z and RT. The window is centered around the average of m/z and RT of all the individual peaks in the row. A score function is used to compute the similarity of peaks between L and the new sample Sj inside the alignment window. The score function computes the similarity based on the similarities in m/z, retention time, and (optionally) on identification, and isotope patterns between the peaks to be matched. The score is calculated as follows: \\[score = \\frac{1 - MZ_{difference}}{MZ_{tolerance}} \u00d7 MZ_{weight} + \\frac{1 - RT_{difference}}{RT_ {tolerance}} \u00d7 RT_{weight}\\] Steps \u00b6 The algorithm works as follows: It iterates through the rows of L. For each row, it looks for peaks within the alignment window in Sj that has to be aligned with L. A score is calculated for each possible match The pair getting the best score will be aligned. Parameters \u00b6 Feature list name \u00b6 Name of the new aligned peak list. m/z tolerance \u00b6 Maximum allowed difference between two m/z values in order for them to be considered the same and thus the peaks aligned. The value is specified both as absolute tolerance (in m/z) and relative tolerance (in ppm). The tolerance range is calculated using maximum of the absolute and relative tolerances for possible peaks to be aligned. Weight for m/z \u00b6 This is the assigned weight for m/z difference at the moment of match score calculation between peak rows, as can be seen in the aforementioned formula. Only in cases where there is a perfect match of m/z values, the score receives the complete m/z weight. Generally, higher weight is given to m/z values than to RT values. Retention time tolerance \u00b6 Maximum allowed difference between two retention times in order for them to be considered the same and thus peaks aligned. Maximum RT difference can be defined either using absolute or relative value. Weight for RT \u00b6 This is the assigned weight for RT difference at the moment of match score calculation between peak rows. Only in cases where there is a perfect match of RT values, the score receives the complete RT weight. Mobility tolerance \u00b6 In case of IM data,the user can determine the mobility tolerance. If checked, this parameter specifies the tolerance range for matching the mobility values. Mobility weight \u00b6 Score for perfectly matching mobility values. Only taken into account if \"Mobility tolerance\" is activated. Furthermore, score calculation that is mentioned in the Algorithm is then modified to account for the mobility as well. Mobility tolerance and weight are accounted for in the same manner as m/z and RT parameters. Require same charge state \u00b6 Optional parameter If checked, only rows having same charge can be aligned. Require same ID \u00b6 Optional parameter If checked, only rows having same compound identities (or no identities) can be aligned. Compare isotope pattern \u00b6 Optional parameter If both peaks represent an isotope pattern, checking this box will add isotope pattern score to the match score calculation. Additionally, the user can set up isotope m/z tolerance which defines what isotopes would be considered same when comparing two isotopic patterns, minimum absolute intensity below which isotopes will be ignored and minimum score % between isotope patterns that has to be satisfied in order for the match to not be discarded. Compare spectra similarity \u00b6 Optional parameter Compare MS1 or MS2 scans similarity. Select the m/z tolerance, MS level and spectra similarity algorithm. Only features meeting this criteria will be aligned. See compare spectra similarity for additional information. Original feature list \u00b6 The user can choose to either KEEP the original feature list and generate a new processed one, or REMOVE the original feature list with the processed one. Generally, you would keep the original feature list, but opting for REMOVE will save memory. Olena Mokshyna (60.68%), lalalana5 (6.84%), lalalana5 (32.48%)","title":"Join aligner"},{"location":"module_docs/align_join_aligner/join_aligner.html#join-aligner","text":"","title":"Join aligner"},{"location":"module_docs/align_join_aligner/join_aligner.html#description","text":"Feature list methods \u2192 Alignment \u2192 Join aligner This method aligns detected peaks in different samples through a match score . This score is calculated based on the mass and retention time of each peak and ranges of tolerance specified in the parameter setup dialog.","title":"Description"},{"location":"module_docs/align_join_aligner/join_aligner.html#algorithm","text":"","title":"Algorithm"},{"location":"module_docs/align_join_aligner/join_aligner.html#input","text":"The peak alignment algorithm uses: A master list of peaks (L) against which every new sample (Sj) will be matched. When aligning peaks from multiple samples, the master list is initially set to the first sample. Subsequently, it becomes a combination of samples aligned this far. Master list contains the samples as the columns and the matching peaks as the rows. For every row i in L, a two-dimensional window (a window size is selected by the user), called Alignment window (AW) , defines the ranges of m/z and RT. The window is centered around the average of m/z and RT of all the individual peaks in the row. A score function is used to compute the similarity of peaks between L and the new sample Sj inside the alignment window. The score function computes the similarity based on the similarities in m/z, retention time, and (optionally) on identification, and isotope patterns between the peaks to be matched. The score is calculated as follows: \\[score = \\frac{1 - MZ_{difference}}{MZ_{tolerance}} \u00d7 MZ_{weight} + \\frac{1 - RT_{difference}}{RT_ {tolerance}} \u00d7 RT_{weight}\\]","title":"Input"},{"location":"module_docs/align_join_aligner/join_aligner.html#steps","text":"The algorithm works as follows: It iterates through the rows of L. For each row, it looks for peaks within the alignment window in Sj that has to be aligned with L. A score is calculated for each possible match The pair getting the best score will be aligned.","title":"Steps"},{"location":"module_docs/align_join_aligner/join_aligner.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/align_join_aligner/join_aligner.html#feature-list-name","text":"Name of the new aligned peak list.","title":"Feature list name"},{"location":"module_docs/align_join_aligner/join_aligner.html#mz-tolerance","text":"Maximum allowed difference between two m/z values in order for them to be considered the same and thus the peaks aligned. The value is specified both as absolute tolerance (in m/z) and relative tolerance (in ppm). The tolerance range is calculated using maximum of the absolute and relative tolerances for possible peaks to be aligned.","title":"m/z tolerance"},{"location":"module_docs/align_join_aligner/join_aligner.html#weight-for-mz","text":"This is the assigned weight for m/z difference at the moment of match score calculation between peak rows, as can be seen in the aforementioned formula. Only in cases where there is a perfect match of m/z values, the score receives the complete m/z weight. Generally, higher weight is given to m/z values than to RT values.","title":"Weight for m/z"},{"location":"module_docs/align_join_aligner/join_aligner.html#retention-time-tolerance","text":"Maximum allowed difference between two retention times in order for them to be considered the same and thus peaks aligned. Maximum RT difference can be defined either using absolute or relative value.","title":"Retention time tolerance"},{"location":"module_docs/align_join_aligner/join_aligner.html#weight-for-rt","text":"This is the assigned weight for RT difference at the moment of match score calculation between peak rows. Only in cases where there is a perfect match of RT values, the score receives the complete RT weight.","title":"Weight for RT"},{"location":"module_docs/align_join_aligner/join_aligner.html#mobility-tolerance","text":"In case of IM data,the user can determine the mobility tolerance. If checked, this parameter specifies the tolerance range for matching the mobility values.","title":"Mobility tolerance"},{"location":"module_docs/align_join_aligner/join_aligner.html#mobility-weight","text":"Score for perfectly matching mobility values. Only taken into account if \"Mobility tolerance\" is activated. Furthermore, score calculation that is mentioned in the Algorithm is then modified to account for the mobility as well. Mobility tolerance and weight are accounted for in the same manner as m/z and RT parameters.","title":"Mobility weight"},{"location":"module_docs/align_join_aligner/join_aligner.html#require-same-charge-state","text":"Optional parameter If checked, only rows having same charge can be aligned.","title":"Require same charge state"},{"location":"module_docs/align_join_aligner/join_aligner.html#require-same-id","text":"Optional parameter If checked, only rows having same compound identities (or no identities) can be aligned.","title":"Require same ID"},{"location":"module_docs/align_join_aligner/join_aligner.html#compare-isotope-pattern","text":"Optional parameter If both peaks represent an isotope pattern, checking this box will add isotope pattern score to the match score calculation. Additionally, the user can set up isotope m/z tolerance which defines what isotopes would be considered same when comparing two isotopic patterns, minimum absolute intensity below which isotopes will be ignored and minimum score % between isotope patterns that has to be satisfied in order for the match to not be discarded.","title":"Compare isotope pattern"},{"location":"module_docs/align_join_aligner/join_aligner.html#compare-spectra-similarity","text":"Optional parameter Compare MS1 or MS2 scans similarity. Select the m/z tolerance, MS level and spectra similarity algorithm. Only features meeting this criteria will be aligned. See compare spectra similarity for additional information.","title":"Compare spectra similarity"},{"location":"module_docs/align_join_aligner/join_aligner.html#original-feature-list","text":"The user can choose to either KEEP the original feature list and generate a new processed one, or REMOVE the original feature list with the processed one. Generally, you would keep the original feature list, but opting for REMOVE will save memory. Olena Mokshyna (60.68%), lalalana5 (6.84%), lalalana5 (32.48%)","title":"Original feature list"},{"location":"module_docs/align_join_aligner/spectra_similarity.html","text":"Spectral m/z tolerance \u00b6 Spectral m/z tolerance is used to match all signals between spectra of two compared raw files. MS level \u00b6 MS level of scans that should be compared. It can be 1 for MS1 or 2 for MS2 level. Compare spectra similarity \u00b6 Weighted dot-product cosine - used to determine the similarity between two spectra (usually library and query spectra).This option is used for MS2 level. Composite dot-product identity - used to determine the similarity between two spectra (usually library and query spectra). Especially useful for very reproducible generation of spectra (GC-EI-MS). Takes into account the relative intensities of neighbouring signals in the two spectra. This option is used for MS1 level. Additional setup of spectra similarity comparison enables modification of the following parameters: Weights \u00b6 Weights for the m/z and intensity values. Usually, MassBank is used, in which higher m/z values contribute more to the cosine similarity calculation. Minimum cos similarity \u00b6 Minimum cosine similarity for a match between compared spectra. Handle unmatched signals \u00b6 Usually, keep all and match to zero is used, which will take all signals into account, and the unmatched ones will decrease the cosine similarity. Olena Mokshyna","title":"Spectra similarity"},{"location":"module_docs/align_join_aligner/spectra_similarity.html#spectral-mz-tolerance","text":"Spectral m/z tolerance is used to match all signals between spectra of two compared raw files.","title":"Spectral m/z tolerance"},{"location":"module_docs/align_join_aligner/spectra_similarity.html#ms-level","text":"MS level of scans that should be compared. It can be 1 for MS1 or 2 for MS2 level.","title":"MS level"},{"location":"module_docs/align_join_aligner/spectra_similarity.html#compare-spectra-similarity","text":"Weighted dot-product cosine - used to determine the similarity between two spectra (usually library and query spectra).This option is used for MS2 level. Composite dot-product identity - used to determine the similarity between two spectra (usually library and query spectra). Especially useful for very reproducible generation of spectra (GC-EI-MS). Takes into account the relative intensities of neighbouring signals in the two spectra. This option is used for MS1 level. Additional setup of spectra similarity comparison enables modification of the following parameters:","title":"Compare spectra similarity"},{"location":"module_docs/align_join_aligner/spectra_similarity.html#weights","text":"Weights for the m/z and intensity values. Usually, MassBank is used, in which higher m/z values contribute more to the cosine similarity calculation.","title":"Weights"},{"location":"module_docs/align_join_aligner/spectra_similarity.html#minimum-cos-similarity","text":"Minimum cosine similarity for a match between compared spectra.","title":"Minimum cos similarity"},{"location":"module_docs/align_join_aligner/spectra_similarity.html#handle-unmatched-signals","text":"Usually, keep all and match to zero is used, which will take all signals into account, and the unmatched ones will decrease the cosine similarity. Olena Mokshyna","title":"Handle unmatched signals"},{"location":"module_docs/align_lc-image/align_lc-image.html","text":"LC-Image Aligner \u00b6 Description \u00b6 Feature list methods \u2192 Alignment \u2192 LC-Image-Aligner Aligns LC and imaging measurements based on m/z and mobility.Images are aligned to all LC features that match, only the best match is retained. Parameters \u00b6 Feature lists \u00b6 Select at least two feature lists. The image feature list(s) are aligned to a single (pre-aligned) LC feature list. m/z tolerance \u00b6 The file-to-file tolerance for two features. m/z weight \u00b6 Maximum score for a perfectly matching m/z. Default value is 1. Mobility tolerance \u00b6 Optional parameter The file-to-file mobility tolerance. If the files don't contain mobility information, this parameter will be ignored. Default value is 0.01. Mobility weight \u00b6 Maximum score for a perfectly matching mobility. Default value is 1. Feature list name \u00b6 The name of the new feature list. Use {lc} to use the name of the input (LC/DI) feature list. Olena Mokshyna","title":"LC Image Aligner"},{"location":"module_docs/align_lc-image/align_lc-image.html#lc-image-aligner","text":"","title":"LC-Image Aligner"},{"location":"module_docs/align_lc-image/align_lc-image.html#description","text":"Feature list methods \u2192 Alignment \u2192 LC-Image-Aligner Aligns LC and imaging measurements based on m/z and mobility.Images are aligned to all LC features that match, only the best match is retained.","title":"Description"},{"location":"module_docs/align_lc-image/align_lc-image.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/align_lc-image/align_lc-image.html#feature-lists","text":"Select at least two feature lists. The image feature list(s) are aligned to a single (pre-aligned) LC feature list.","title":"Feature lists"},{"location":"module_docs/align_lc-image/align_lc-image.html#mz-tolerance","text":"The file-to-file tolerance for two features.","title":"m/z tolerance"},{"location":"module_docs/align_lc-image/align_lc-image.html#mz-weight","text":"Maximum score for a perfectly matching m/z. Default value is 1.","title":"m/z weight"},{"location":"module_docs/align_lc-image/align_lc-image.html#mobility-tolerance","text":"Optional parameter The file-to-file mobility tolerance. If the files don't contain mobility information, this parameter will be ignored. Default value is 0.01.","title":"Mobility tolerance"},{"location":"module_docs/align_lc-image/align_lc-image.html#mobility-weight","text":"Maximum score for a perfectly matching mobility. Default value is 1.","title":"Mobility weight"},{"location":"module_docs/align_lc-image/align_lc-image.html#feature-list-name","text":"The name of the new feature list. Use {lc} to use the name of the input (LC/DI) feature list. Olena Mokshyna","title":"Feature list name"},{"location":"module_docs/align_merge_lists/align_merge_lists.html","text":"Merge lists \u00b6 Description \u00b6 Feature list methods \u2192 Alignment \u2192 Merge lists This method merges feature lists by appending all rows into a new list. Perform alignment before to align all features from comparable samples and use this method to merge feature lists that should not be aligned: e.g., positive and negative mode data. Parameters \u00b6 Feature lists \u00b6 Feature lists this module will take as an input Feature list name \u00b6 Resulting feature list name Olena Mokshyna","title":"Merge lists"},{"location":"module_docs/align_merge_lists/align_merge_lists.html#merge-lists","text":"","title":"Merge lists"},{"location":"module_docs/align_merge_lists/align_merge_lists.html#description","text":"Feature list methods \u2192 Alignment \u2192 Merge lists This method merges feature lists by appending all rows into a new list. Perform alignment before to align all features from comparable samples and use this method to merge feature lists that should not be aligned: e.g., positive and negative mode data.","title":"Description"},{"location":"module_docs/align_merge_lists/align_merge_lists.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/align_merge_lists/align_merge_lists.html#feature-lists","text":"Feature lists this module will take as an input","title":"Feature lists"},{"location":"module_docs/align_merge_lists/align_merge_lists.html#feature-list-name","text":"Resulting feature list name Olena Mokshyna","title":"Feature list name"},{"location":"module_docs/align_ransac/align_ransac.html","text":"RANSAC peak list aligner \u00b6 Description \u00b6 Feature list methods \u2192 Alignment \u2192 RANSAC aligner This method is an extension of the Join aligner method. The alignment of each sample is done against a master peak list , which is taken from the first sample in the first round and from the average of all aligned peak lists in every round. It corrects any linear or non-linear deviation in the retention time of the chromatograms by creating a model of this deviation. This picture shows an example of two samples with a non-linear deviation in the retention time: The \"deviation\" model for the retention time is created by taking some corresponding points from the peak list of two samples using the RANSAC algorithm ( http://en.wikipedia.org/wiki/RANSAC ) and using a non-linear regression method to fit the model. This picture shows a preview of the model with the red dots representing the aligned peaks taken using RANSAC algorithm, and the blue line represents the fitted model using a non-linear regression. Using this model, the algorithm can predict the shift in the retention time along all the peak list and use the match score function, used also in Join Align algorithm, to match the peaks. This score is calculated based on the mass and retention time of each peak and ranges of tolerance stipulated in the parameter setup dialog. Parameters \u00b6 Feature list name \u00b6 The name of the new aligned feature list. m/z tolerance \u00b6 This value sets the range, in terms of m/z, to verify for possible peak rows to be aligned. Maximum allowed m/z difference. RT tolerance \u00b6 This value sets the range, in terms of retention time, to create the model using RANSAC and non-linear regression algorithm. Maximum allowed retention time difference. RT tolerance after correction \u00b6 This value sets the range, in terms of retention time, to verify for possible peak rows to be aligned. Maximum allowed retention time difference. RANSAC Iterations \u00b6 Maximum number of iterations allowed in the algorithm to find the right model consistent in all the pairs of aligned peaks. When the value is 0, the number of iterations (k) will be estimate automatically. Minimum Number of Points \u00b6 % of points required to consider the model valid (d). Threshold value \u00b6 Threshold value (minutes) for determining when a data point fits a model (t). Linear model This option should be selected only if the model has to be linear. Please, remember that when the shift in the retention time between the peaks in the samples is not constant the model shape is nonlinear, and this parameter should not be selected. Recommendations for setting optimal parameters \u00b6 The three first parameters (m/z tolerance, RT tolerance after the correction and RT tolerance) define 2 bi-dimensional windows with the same \"altitude\" (m/z tolerance) and different \"longitude\" (RT tolerances). The first window (m/z tolerance - RT tolerance after the correction) sets the space where the matching peak should be present, and the second window (m/z tolerance - RT tolerance) sets the total space where RANSAC algorithm will be applied. So, \"RT tolerance\" should be as big as the maximum deviation in the retention time along all the chromatogram, and \"RT tolerance after the correction\" can be more flexible and depends on the complexity of the data. If the data contains few peaks and the separation is good, the window can be bigger than \"RT tolerance\" window. It will improve the recall without including mistakes. This parameter should not change too much the final results. RANSAC is a non-deterministic algorithm, and the probability to find a good result increases with the number of iterations . If the user sets \"0 iterations\" into the parameter \"RANSAC iterations\" the algorithm will automatically set the optimum number of iterations depending on the number of data points. In the case that there is a big number of data points it is better to limit this parameter even though the result could be non-optimal. The preview module can help in setting this parameter. The parameter \"Minimum number of points\" should be an estimation of the proportion of the data points inside the model. It is important not to get models composed by few data points which do not correspond to the real model. All the models which contain less proportion of data points won't be taken into account by RANSAC algorithm. Threshold value represents the width of the model and depends on the nature of the data. If this parameter is too big, it can lead to deviation of the model. The preview module can help to set the optimal value. The choice of model depends on whether the deviation in the retention time can be considered linear or not in the data. If the deviation in the retention time is linear, a simple linear regression will be used to fit the model. Olena Mokshyna","title":"RANSAC aligner"},{"location":"module_docs/align_ransac/align_ransac.html#ransac-peak-list-aligner","text":"","title":"RANSAC peak list aligner"},{"location":"module_docs/align_ransac/align_ransac.html#description","text":"Feature list methods \u2192 Alignment \u2192 RANSAC aligner This method is an extension of the Join aligner method. The alignment of each sample is done against a master peak list , which is taken from the first sample in the first round and from the average of all aligned peak lists in every round. It corrects any linear or non-linear deviation in the retention time of the chromatograms by creating a model of this deviation. This picture shows an example of two samples with a non-linear deviation in the retention time: The \"deviation\" model for the retention time is created by taking some corresponding points from the peak list of two samples using the RANSAC algorithm ( http://en.wikipedia.org/wiki/RANSAC ) and using a non-linear regression method to fit the model. This picture shows a preview of the model with the red dots representing the aligned peaks taken using RANSAC algorithm, and the blue line represents the fitted model using a non-linear regression. Using this model, the algorithm can predict the shift in the retention time along all the peak list and use the match score function, used also in Join Align algorithm, to match the peaks. This score is calculated based on the mass and retention time of each peak and ranges of tolerance stipulated in the parameter setup dialog.","title":"Description"},{"location":"module_docs/align_ransac/align_ransac.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/align_ransac/align_ransac.html#feature-list-name","text":"The name of the new aligned feature list.","title":"Feature list name"},{"location":"module_docs/align_ransac/align_ransac.html#mz-tolerance","text":"This value sets the range, in terms of m/z, to verify for possible peak rows to be aligned. Maximum allowed m/z difference.","title":"m/z tolerance"},{"location":"module_docs/align_ransac/align_ransac.html#rt-tolerance","text":"This value sets the range, in terms of retention time, to create the model using RANSAC and non-linear regression algorithm. Maximum allowed retention time difference.","title":"RT tolerance"},{"location":"module_docs/align_ransac/align_ransac.html#rt-tolerance-after-correction","text":"This value sets the range, in terms of retention time, to verify for possible peak rows to be aligned. Maximum allowed retention time difference.","title":"RT tolerance after correction"},{"location":"module_docs/align_ransac/align_ransac.html#ransac-iterations","text":"Maximum number of iterations allowed in the algorithm to find the right model consistent in all the pairs of aligned peaks. When the value is 0, the number of iterations (k) will be estimate automatically.","title":"RANSAC Iterations"},{"location":"module_docs/align_ransac/align_ransac.html#minimum-number-of-points","text":"% of points required to consider the model valid (d).","title":"Minimum Number of Points"},{"location":"module_docs/align_ransac/align_ransac.html#threshold-value","text":"Threshold value (minutes) for determining when a data point fits a model (t). Linear model This option should be selected only if the model has to be linear. Please, remember that when the shift in the retention time between the peaks in the samples is not constant the model shape is nonlinear, and this parameter should not be selected.","title":"Threshold value"},{"location":"module_docs/align_ransac/align_ransac.html#recommendations-for-setting-optimal-parameters","text":"The three first parameters (m/z tolerance, RT tolerance after the correction and RT tolerance) define 2 bi-dimensional windows with the same \"altitude\" (m/z tolerance) and different \"longitude\" (RT tolerances). The first window (m/z tolerance - RT tolerance after the correction) sets the space where the matching peak should be present, and the second window (m/z tolerance - RT tolerance) sets the total space where RANSAC algorithm will be applied. So, \"RT tolerance\" should be as big as the maximum deviation in the retention time along all the chromatogram, and \"RT tolerance after the correction\" can be more flexible and depends on the complexity of the data. If the data contains few peaks and the separation is good, the window can be bigger than \"RT tolerance\" window. It will improve the recall without including mistakes. This parameter should not change too much the final results. RANSAC is a non-deterministic algorithm, and the probability to find a good result increases with the number of iterations . If the user sets \"0 iterations\" into the parameter \"RANSAC iterations\" the algorithm will automatically set the optimum number of iterations depending on the number of data points. In the case that there is a big number of data points it is better to limit this parameter even though the result could be non-optimal. The preview module can help in setting this parameter. The parameter \"Minimum number of points\" should be an estimation of the proportion of the data points inside the model. It is important not to get models composed by few data points which do not correspond to the real model. All the models which contain less proportion of data points won't be taken into account by RANSAC algorithm. Threshold value represents the width of the model and depends on the nature of the data. If this parameter is too big, it can lead to deviation of the model. The preview module can help to set the optimal value. The choice of model depends on whether the deviation in the retention time can be considered linear or not in the data. If the deviation in the retention time is linear, a simple linear regression will be used to fit the model. Olena Mokshyna","title":"Recommendations for setting optimal parameters"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html","text":"Merge raw data files \u00b6 Description \u00b6 Raw data methods \u2192 File merging \u2192 Raw data file merging This module merges all raw data files into a new. For example to combine positive and negative scans with MS2, all from different raw data files. Method parameters \u00b6 Raw data files \u00b6 Raw data files the module will take as an input. Mode \u00b6 MERGE PATTERN: Merge files based on a grouping identifier which can be a name suffix or prefix. (e.g., Sample_A_1, Sample_B_1: Use AFTER LAST _ to combine these files) MERGE SELECTED: Merge all selected files to a new Grouping identifier position \u00b6 Search for the specific group identifier before the first or after the last marker. Position marker \u00b6 The marker that splits the specific group identifier from the rest of the file names. MS2 marker \u00b6 If a raw data file has this marker in its name, it will only be used as a source of MS2 (MSn) scans. All MS1 scans of this file will be discarded. Suffix \u00b6 Suffix to be added to the new file name. Olena Mokshyna","title":"Raw data files merging"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#merge-raw-data-files","text":"","title":"Merge raw data files"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#description","text":"Raw data methods \u2192 File merging \u2192 Raw data file merging This module merges all raw data files into a new. For example to combine positive and negative scans with MS2, all from different raw data files.","title":"Description"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#method-parameters","text":"","title":"Method parameters"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#raw-data-files","text":"Raw data files the module will take as an input.","title":"Raw data files"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#mode","text":"MERGE PATTERN: Merge files based on a grouping identifier which can be a name suffix or prefix. (e.g., Sample_A_1, Sample_B_1: Use AFTER LAST _ to combine these files) MERGE SELECTED: Merge all selected files to a new","title":"Mode"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#grouping-identifier-position","text":"Search for the specific group identifier before the first or after the last marker.","title":"Grouping identifier position"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#position-marker","text":"The marker that splits the specific group identifier from the rest of the file names.","title":"Position marker"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#ms2-marker","text":"If a raw data file has this marker in its name, it will only be used as a source of MS2 (MSn) scans. All MS1 scans of this file will be discarded.","title":"MS2 marker"},{"location":"module_docs/featdet_file_merging/raw-files-merging.html#suffix","text":"Suffix to be added to the new file name. Olena Mokshyna","title":"Suffix"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html","text":"Spectral deconvolution: Hierarchical Clustering \u00b6 This module is being updated, which might affect its functionality Description \u00b6 Feature list methods \u2192 Spectral deconvolution (GC) \u2192 Hierarchical clustering This ADAP-based method finds analytes by combining similar features into clusters and using their intensities to construct fragmentation mass spectra. The following steps are performed: All EIC peaks are clustered based on proximity of their retention times. The user can specify minimum distance between clusters, minimum number of peaks forming a cluster, and minimum cluster intensity. If preview is selected, the top right plot displays the result of the clustering with dots corresponding to EIC peaks and colors corresponding to different clusters. In each cluster, EIC peaks are filtered based on their sharpness and on their elution profiles. All EIC peaks with sharpness below minimum sharpness are filtered out. If \" Find shared peaks \" is selected, then shared peaks are filtered out as well. A user can specify minimum edge-to-height ratio and minimum delta-to-height ratio that are used in determining shared peaks. EIC peaks that have passed the filtering step, are clustered based on their elution profiles. The user can specify shape-similarity tolerance: small tolerance corresponds to large number of clusters, while large tolerance corresponds to a small number of clusters. If a preview is selected, the result of the clustering is shown on the bottom-right plot. Each cluster corresponds to one analyte. Among all EIC peaks in the cluster, a model peak is chosen to represent the elution profile of the analyte. If Choise of Model Peak based on Sharpness is selected, then the EIC peak with the highest sharpness in the cluster is selected to be a model peak. If Choice of Model Peak based on Intensity is selected, then the EIC peak of the highest intensity is selected to be a model peak. If Choice of Model Peak based on M/z value is selected, then the EIC peak with the highest m/z value in the cluster is selected to be a model peak. In order to build fragmentation spectra for analytes, each EIC peak is decomposed into a linear combination of the model peaks with the weighting coefficients obtained by solving an optimization problem. These coefficients and m/z value of the EIC peak contribute to the fragmentation spectra of the corresponding analytes. Method definitions \u00b6 Sharpness In order to find sharpness, the medians of the slopes of the lines connecting the peak apex to its other data points are calculated on each side of the peak apex. The sharpness is defined as the average of the two medians. Shared peak EIC peak is considered to be shared (i.e. produced by two co-eluting analytes) if at least one of the following conditions is satisfied: its elution profile has several local maxima its left boundary intensity divided by the apex intensity exceeds minimum edge-to-height ratio its right boundary intensity divided by the apex intensity exceeds minimum edge-to-height ratio the absolute difference between its boundary intensities divided by the apex intensity exceeds by minimum delta-to-height ratio References \u00b6 Pluskal, T., Castillo, S., Villar-Briones, A. & Oresic, M. MZmine 2: Modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data. BMC Bioinformatics (2010). DOI: 10.1186/1471-2105-11-395 Smirnov A, Jia W, Walker D, Jones D, Du X: ADAP-GC 3.2: Graphical Software Tool for Efficient Spectral Deconvolution of Gas Cromatography\u2014High-Resolution Mass Spectrometry Metabolomics Data. J. Proteome Res 2017, DOI: 10.1021/acs.jproteome.7b00633 Parameters \u00b6 Min cluster distance (min) \u00b6 Minimum distance between any two retention-time clusters. Min cluster size \u00b6 Minimum number of peaks in a cluster. Min cluster intensity \u00b6 Minimum intensity of the highest peak in a cluster. Find shared peaks \u00b6 If selected, shared peaks are determined and do not participate in the second clustering. Min edge-to-height ratio \u00b6 Minimum value of a boundary intensity divided by the apex intensity of EIC peak that is considered to be shared. Min delta-to-height ratio \u00b6 Minimum value of the absolute difference of the boundary intensities divided by the apex intensity of EIC peak that is considered to be shared. Min sharpness \u00b6 Minimum sharpness of EIC peak that can participate in the second clustering. Shape-similarity tolerance (0..90) \u00b6 Tolerance is used in the second clustering based on the similarity of peaks' elution profiles: small tolerance corresponds to large number of clusters; large tolerance corresponds to a small number of clusters. Choice of Model Peak based on \u00b6 In each cluster, a model peak is chosen. If Sharpness is used, then EIC peak with the highest sharpness in the cluster is chosen to be a model peak. If Intensity is used, then EIC peak of the highest intensity in the cluster is chosen to be a model peak. If M/z value is used, then EIC peak with the highest m/z value in the cluster is chosen to be a model peak. Exclude m/z-values \u00b6 Optional parameter Optionally, the user can specify a list of deprecated m/z values such that EIC peaks with those m/z value could not be chosen as model peaks. It is possible to specify single m/z values as well as ranges of m/z values. For example: 1-50, 73, 100. Suffix \u00b6 String to add to feature list name as a suffix. Remove original feature list If checked, original feature list will be removed. Olena Mokshyna","title":"Hierarchical clustering"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#spectral-deconvolution-hierarchical-clustering","text":"This module is being updated, which might affect its functionality","title":"Spectral deconvolution: Hierarchical Clustering"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#description","text":"Feature list methods \u2192 Spectral deconvolution (GC) \u2192 Hierarchical clustering This ADAP-based method finds analytes by combining similar features into clusters and using their intensities to construct fragmentation mass spectra. The following steps are performed: All EIC peaks are clustered based on proximity of their retention times. The user can specify minimum distance between clusters, minimum number of peaks forming a cluster, and minimum cluster intensity. If preview is selected, the top right plot displays the result of the clustering with dots corresponding to EIC peaks and colors corresponding to different clusters. In each cluster, EIC peaks are filtered based on their sharpness and on their elution profiles. All EIC peaks with sharpness below minimum sharpness are filtered out. If \" Find shared peaks \" is selected, then shared peaks are filtered out as well. A user can specify minimum edge-to-height ratio and minimum delta-to-height ratio that are used in determining shared peaks. EIC peaks that have passed the filtering step, are clustered based on their elution profiles. The user can specify shape-similarity tolerance: small tolerance corresponds to large number of clusters, while large tolerance corresponds to a small number of clusters. If a preview is selected, the result of the clustering is shown on the bottom-right plot. Each cluster corresponds to one analyte. Among all EIC peaks in the cluster, a model peak is chosen to represent the elution profile of the analyte. If Choise of Model Peak based on Sharpness is selected, then the EIC peak with the highest sharpness in the cluster is selected to be a model peak. If Choice of Model Peak based on Intensity is selected, then the EIC peak of the highest intensity is selected to be a model peak. If Choice of Model Peak based on M/z value is selected, then the EIC peak with the highest m/z value in the cluster is selected to be a model peak. In order to build fragmentation spectra for analytes, each EIC peak is decomposed into a linear combination of the model peaks with the weighting coefficients obtained by solving an optimization problem. These coefficients and m/z value of the EIC peak contribute to the fragmentation spectra of the corresponding analytes.","title":"Description"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#method-definitions","text":"Sharpness In order to find sharpness, the medians of the slopes of the lines connecting the peak apex to its other data points are calculated on each side of the peak apex. The sharpness is defined as the average of the two medians. Shared peak EIC peak is considered to be shared (i.e. produced by two co-eluting analytes) if at least one of the following conditions is satisfied: its elution profile has several local maxima its left boundary intensity divided by the apex intensity exceeds minimum edge-to-height ratio its right boundary intensity divided by the apex intensity exceeds minimum edge-to-height ratio the absolute difference between its boundary intensities divided by the apex intensity exceeds by minimum delta-to-height ratio","title":"Method definitions"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#references","text":"Pluskal, T., Castillo, S., Villar-Briones, A. & Oresic, M. MZmine 2: Modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data. BMC Bioinformatics (2010). DOI: 10.1186/1471-2105-11-395 Smirnov A, Jia W, Walker D, Jones D, Du X: ADAP-GC 3.2: Graphical Software Tool for Efficient Spectral Deconvolution of Gas Cromatography\u2014High-Resolution Mass Spectrometry Metabolomics Data. J. Proteome Res 2017, DOI: 10.1021/acs.jproteome.7b00633","title":"References"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#min-cluster-distance-min","text":"Minimum distance between any two retention-time clusters.","title":"Min cluster distance (min)"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#min-cluster-size","text":"Minimum number of peaks in a cluster.","title":"Min cluster size"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#min-cluster-intensity","text":"Minimum intensity of the highest peak in a cluster.","title":"Min cluster intensity"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#find-shared-peaks","text":"If selected, shared peaks are determined and do not participate in the second clustering.","title":"Find shared peaks"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#min-edge-to-height-ratio","text":"Minimum value of a boundary intensity divided by the apex intensity of EIC peak that is considered to be shared.","title":"Min edge-to-height ratio"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#min-delta-to-height-ratio","text":"Minimum value of the absolute difference of the boundary intensities divided by the apex intensity of EIC peak that is considered to be shared.","title":"Min delta-to-height ratio"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#min-sharpness","text":"Minimum sharpness of EIC peak that can participate in the second clustering.","title":"Min sharpness"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#shape-similarity-tolerance-090","text":"Tolerance is used in the second clustering based on the similarity of peaks' elution profiles: small tolerance corresponds to large number of clusters; large tolerance corresponds to a small number of clusters.","title":"Shape-similarity tolerance (0..90)"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#choice-of-model-peak-based-on","text":"In each cluster, a model peak is chosen. If Sharpness is used, then EIC peak with the highest sharpness in the cluster is chosen to be a model peak. If Intensity is used, then EIC peak of the highest intensity in the cluster is chosen to be a model peak. If M/z value is used, then EIC peak with the highest m/z value in the cluster is chosen to be a model peak.","title":"Choice of Model Peak based on"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#exclude-mz-values","text":"Optional parameter Optionally, the user can specify a list of deprecated m/z values such that EIC peaks with those m/z value could not be chosen as model peaks. It is possible to specify single m/z values as well as ranges of m/z values. For example: 1-50, 73, 100.","title":"Exclude m/z-values"},{"location":"module_docs/featdet_hierarch_clustering/featdet_hierarch_clustering.html#suffix","text":"String to add to feature list name as a suffix. Remove original feature list If checked, original feature list will be removed. Olena Mokshyna","title":"Suffix"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html","text":"FTMS shoulder peak filter \u00b6 Description \u00b6 This module should be used after mass detection step is performed. Raw data methods \u2192 Mass detection \u2192 FTMS shoulder peak filter Raw data obtained from FTMS (Fourier Transform Mass Spectrometer) instruments often contains false signals around high-intensity m/z peaks, called \"shoulder peaks\" . These signals are residues of the Fourier Transform function and their intensity is usually below 5% of the main (true) m/z peak. The FTMS shoulder peaks filter attempts to remove these false signals. Ions in the mass lists (generated previously by the Mass detector module) are processed in the order of decreasing intensity. A peak model (shape) is built around each ion peak using given function and resolution, and those m/z peaks which fall below the model are considered to be shoulder peaks and therefore are removed. The method offers three theoretical peak models. Example of running the shoulder peaks filter on LTQ Orbitrap data: Parameters \u00b6 Mass resolution of the data \u00b6 Defines the width of the model, which should be equal to the estimated resolution of the peaks in the raw data. Mass resolution is the dimensionless ratio of the mass of the peak divided by its width. Peak width is taken as the full width at half maximum intensity (FWHM). Peak model function \u00b6 Defines the shape of the model function, as described below. Peaks under the curve of this peak model will be removed. Available peak models \u00b6 Gaussian peak model \u00b6 The Gaussian peak model is a characteristic symmetric \"bell shape curve\" that quickly falls off towards plus/minus infinity, described by the following formula. \\[f(x)=ae^-\\frac{(x-b)^2}{2c^2}\\] The parameter \"a\" is the height of the curve's peak, \"b\" is the position of the center of the peak, and \"c\" controls the width of the \"bell\". Lorentzian peak model \u00b6 The Lorentzian function (Cauchy-Lorentz distribution) is used for this model. The Lorentzian peak model is described by the following formula: \\(f(x;x_0,\\gamma,I)=\\frac{I}{\\biggl[1+\\frac{x-x_0}{\\gamma}^2\\biggr]} =I\\biggl[\\frac{\\gamma^2}{(x-x_0)^2+\\gamma^2}\\biggr]\\) Where \"x0\" is the location parameter, specifying the location of the peak of the distribution, and \"y\" is the scale parameter which specifies the width of the peak. Lorentzian extended peak model \u00b6 This model uses the same mathematical formula as the Lorentzian peak model, but the lower part of the model (below 5% of the intensity) is extended. The width of the peak below 5% intensity is calculated from another Lorentzian peak with 5% of the resolution of the main peak.","title":"FTMS shoulder peak finder"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#ftms-shoulder-peak-filter","text":"","title":"FTMS shoulder peak filter"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#description","text":"This module should be used after mass detection step is performed. Raw data methods \u2192 Mass detection \u2192 FTMS shoulder peak filter Raw data obtained from FTMS (Fourier Transform Mass Spectrometer) instruments often contains false signals around high-intensity m/z peaks, called \"shoulder peaks\" . These signals are residues of the Fourier Transform function and their intensity is usually below 5% of the main (true) m/z peak. The FTMS shoulder peaks filter attempts to remove these false signals. Ions in the mass lists (generated previously by the Mass detector module) are processed in the order of decreasing intensity. A peak model (shape) is built around each ion peak using given function and resolution, and those m/z peaks which fall below the model are considered to be shoulder peaks and therefore are removed. The method offers three theoretical peak models. Example of running the shoulder peaks filter on LTQ Orbitrap data:","title":"Description"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#mass-resolution-of-the-data","text":"Defines the width of the model, which should be equal to the estimated resolution of the peaks in the raw data. Mass resolution is the dimensionless ratio of the mass of the peak divided by its width. Peak width is taken as the full width at half maximum intensity (FWHM).","title":"Mass resolution of the data"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#peak-model-function","text":"Defines the shape of the model function, as described below. Peaks under the curve of this peak model will be removed.","title":"Peak model function"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#available-peak-models","text":"","title":"Available peak models"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#gaussian-peak-model","text":"The Gaussian peak model is a characteristic symmetric \"bell shape curve\" that quickly falls off towards plus/minus infinity, described by the following formula. \\[f(x)=ae^-\\frac{(x-b)^2}{2c^2}\\] The parameter \"a\" is the height of the curve's peak, \"b\" is the position of the center of the peak, and \"c\" controls the width of the \"bell\".","title":"Gaussian peak model"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#lorentzian-peak-model","text":"The Lorentzian function (Cauchy-Lorentz distribution) is used for this model. The Lorentzian peak model is described by the following formula: \\(f(x;x_0,\\gamma,I)=\\frac{I}{\\biggl[1+\\frac{x-x_0}{\\gamma}^2\\biggr]} =I\\biggl[\\frac{\\gamma^2}{(x-x_0)^2+\\gamma^2}\\biggr]\\) Where \"x0\" is the location parameter, specifying the location of the peak of the distribution, and \"y\" is the scale parameter which specifies the width of the peak.","title":"Lorentzian peak model"},{"location":"module_docs/featdet_mass_detection/FTMS-shoulder-peak-filter.html#lorentzian-extended-peak-model","text":"This model uses the same mathematical formula as the Lorentzian peak model, but the lower part of the model (below 5% of the intensity) is extended. The width of the peak below 5% intensity is calculated from another Lorentzian peak with 5% of the resolution of the main peak.","title":"Lorentzian extended peak model"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html","text":"Mass calibration \u00b6 Description \u00b6 This module should be used after mass detection step is performed. Raw data methods \u2192 Mass detection \u2192 Mass calibration Mass calibration module estimates the measurement error of each detected mass and calibrates them using reference libraries of ions through three main processes: Peak matching with library of reference and extraction of errors, Estimation of overall mass bias, and Mass calibration of detected masses. Parameters \u00b6 Raw data files \u00b6 The raw datafiles to calibrate. Each selected datafile is calibrated independently in a separate task. Mass list name \u00b6 Name of the mass lists to be calibrated. The mass lists must be previously generated for each scan by the Mass detector module. Intensity threshold \u00b6 Determines the intensity of the peaks used for matching against the library of ions and subsequent mass calibration. Only mass peaks with intensity above this threshold will be considered for calibration. This is useful to avoid certain noise peaks that could have been picked in the Mass Detection module. To consider all peaks, the Intensity Threshold needs to be set with a value equal or lower than the previously used in the Mass Detection module. Duplicate Error Filter \u00b6 Removes duplicate ions with the same m/z value independently of their retention time. If enabled, for a specific detected exact mass present in different scans (not necessarily consecutive), only a single ion with that exact mass value will be considered for calibration. This filter performs for the full list of masses and does not consider RT difference between ions. Reference Library of ions \u00b6 Selects the library used for ion matching and determination of mass errors. SCL and UCL libraries are available. SCL-only parameters Standard Calibrant Library file File with a list of ion formulas and retention times (xls, xlsx and csv files are supported). This list should contain ions that are expected to be detected in the samples. Files need to contain a first column with the retention time in minutes and a second column with the ion formula strings. Additional columns are optional. Sample standards list file: Retention time tolerance (only for SCL) Maximum difference in retention time between an actual measured ion and a calibrant to consider a match. UCL-only parameters Ionization mode Ionization mode for which an appropriate universal calibrants list is used. m/z tolerance \u00b6 Maximum allowed difference in m/z between an actual measured ion and a calibrant to consider a match. Overall Mass Bias Estimation \u00b6 Measurement mass errors are calculated based on the matching of detected ions against the library, a distribution of errors is built, and measurement bias is estimated. Because not all ion matches can be considered as correct, the calibration model will automatically identify the high-density mass error range (mass error range with larger number of matches) from the generated distribution of matching errors. If both parameters ( Primary High-Density Range of Errors size and Error range tolerance ) are set to zero, all errors obtained after matching against the reference library of ions are used for calibration of peaks. High-Density Range of Errors Primary High-Density Range of Errors size Determine the range (in PPM) containing most mass errors after matching the detected ions with the ion calibration library. Use zero to skip this step, in such case the distribution is split into subranges containing all the errors within the error tolerance and the largest subrange is used. Error Range Tolerance Maximum distance (in PPM error) between the maximum and minimum thresholds of the Primary High-Density Range of Errors and the consecutive error to allow the extension of the error range. Determines how far the distribution range of errors will be extended to extract the errors used for mass calibration. The module will include any consecutive matched error from the most populated error range found within the established error range tolerance (i.e., 0.1PPM). This process continues until the algorithm does not find any consecutive error within the Error Range Tolerance value. Use zero to skip this step and no extension will be computed. Percentile Range of Errors Percentile range The module calculates the Interquartile Range (IQR) from the overall distribution of errors to extract those errors to be used for mass calibration of peaks. IQR can be modified (by default determined at 25th and 75th percentiles). In such case, errors distributed below 25th or above 75th percentile will not be considered for mass calibration of peaks. Mass Calibration method \u00b6 Method used for mass calibration. Described in more details below . Arithmetic mean KNN regression Nearest neighbors\u2019 percentage Percentage of nearest neighbors used for error prediction. OLS regression Polynomial degree The degree of polynomial trend used, the summand powers of the polynomial will be the OLS regression features. Use 0 for constant component, 1 for linear, 2 for quadratic and so on. Exponential feature When selected, an exponential feature \\(exp(x/10)\\) is included. Logarithmic feature When selected, logarithmic feature \\(ln(x)\\) is included. Reference library of ions \u00b6 First, mass lists (MS1) from raw data files are matched against a reference library and mass measurement errors are calculated. This module can support two different matching strategies: Standard Calibrant Library (SCL) (recommended method): file needs to be provided by the user in xls, xlsx or csv format). The file needs to include retention time (RT) information and the ion formula of a collection of ions that are expected to appear in the samples analyzed with a known chromatographic method. Ion formulas format of the SCL will depend on the ionization method used to analyze the samples. See below in the \u201cParameters\u201d section a detailed description for the library format. Using a SCL, the matching of measured peaks the matching of measured peaks against the library is performed using both RT and exact m/z. RT and m/z error tolerances are needed to be defined. Note: To ignore RT parameter when using SCL for mass calibration, the parameter can be set with an equal or larger value of the chromatography length (i.e., 30 min). Universal Calibrant Library (UCL) include a collection of ions often found in mass spectrometry experiments. The module has two different lists in positive (+ve) and negative (-ve) ionization modes to be chosen by the user. Universal calibrant lists are based on Keller et al. 2008 Analytica Chimica Acta 627:71-81 and Hawkes et al. 2020 Limnology and Oceanography Methods 18:235-258 . MZmine includes both those libraries. Matching of detected ions against the UCL library is performed using m/z values alone independently where the ions are appearing along the chromatography and only m/z error tolerance will be needed. More details on mass calibration method \u00b6 To estimate mass measurement bias more accurately, we can model the trend exhibited by the error size vs m/z value relation obtained by matching the mass peaks. With the estimation model we can shift/calibrate the mass peaks at different particular m/z values more accurately. The module supports two main modes for mass calibration: Arithmetic mean: This method uses the arithmetic mean of the extracted errors of the overall bias estimation. Calibration of peaks will be performed globally based on a single overall bias value. This method is especially recommended for datasets with low number of extracted errors (i.e., blank samples). Regression mode: This mode models a trend from the direct relationship of error size (in PPM) vs. measured m/z of detected peaks. Mass lists will be calibrated according to the estimated model. The mass calibration module supports two different methods of regression: OLS and KNN . OLS (ordinary least squares) regression minimizes the mean squared error between the predicted trend and the datapoints in the dataset. Available features include power features (polynomial trend), logarithmic feature and exponential feature. By default , linear trend is fitted. This mode is suitable for datasets with enough data and exhibit a clear and strong trend (Error vs. m/z). KNN (K-Nearest Neighbors) regression finds the average value of the K nearest neighbors. In this module, the number of neighbors is defined by a percentage set by the user of all the errors present in the dataset. The K closest neighbors are thus found by the absolute difference of the m/z values within such percentage. Then the arithmetic mean of the neighbors' errors is calculated for each individual error and will serve as an error estimate for a specific m/z. This method is suitable for datasets with enough data and a trend between mass error vs. m/z is not clear. Therefore, KNN regression allows the trend to match the dataset closely without introducing additional assumptions on how the variables are related. Overfitting problems at large m/z values (>800) can occur when modeling the errors with regression as those regions commonly have less matches against the reference libraries of ions. If regression is modelled mainly by matches with small m/z ions (<400), it is recommended to use the arithmetic mean for mass calibration. This also applies to blank samples were the number of matched ions is commonly low and regression can produce overfitting problems. Examples \u00b6 This module was intially created during a GSoC 2020 project with MZmine by \u0141ukasz Fiszer and MZmine team. Olena Mokshyna","title":"Mass calibration"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#mass-calibration","text":"","title":"Mass calibration"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#description","text":"This module should be used after mass detection step is performed. Raw data methods \u2192 Mass detection \u2192 Mass calibration Mass calibration module estimates the measurement error of each detected mass and calibrates them using reference libraries of ions through three main processes: Peak matching with library of reference and extraction of errors, Estimation of overall mass bias, and Mass calibration of detected masses.","title":"Description"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#raw-data-files","text":"The raw datafiles to calibrate. Each selected datafile is calibrated independently in a separate task.","title":"Raw data files"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#mass-list-name","text":"Name of the mass lists to be calibrated. The mass lists must be previously generated for each scan by the Mass detector module.","title":"Mass list name"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#intensity-threshold","text":"Determines the intensity of the peaks used for matching against the library of ions and subsequent mass calibration. Only mass peaks with intensity above this threshold will be considered for calibration. This is useful to avoid certain noise peaks that could have been picked in the Mass Detection module. To consider all peaks, the Intensity Threshold needs to be set with a value equal or lower than the previously used in the Mass Detection module.","title":"Intensity threshold"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#duplicate-error-filter","text":"Removes duplicate ions with the same m/z value independently of their retention time. If enabled, for a specific detected exact mass present in different scans (not necessarily consecutive), only a single ion with that exact mass value will be considered for calibration. This filter performs for the full list of masses and does not consider RT difference between ions.","title":"Duplicate Error Filter"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#reference-library-of-ions","text":"Selects the library used for ion matching and determination of mass errors. SCL and UCL libraries are available. SCL-only parameters Standard Calibrant Library file File with a list of ion formulas and retention times (xls, xlsx and csv files are supported). This list should contain ions that are expected to be detected in the samples. Files need to contain a first column with the retention time in minutes and a second column with the ion formula strings. Additional columns are optional. Sample standards list file: Retention time tolerance (only for SCL) Maximum difference in retention time between an actual measured ion and a calibrant to consider a match. UCL-only parameters Ionization mode Ionization mode for which an appropriate universal calibrants list is used.","title":"Reference Library of ions"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#mz-tolerance","text":"Maximum allowed difference in m/z between an actual measured ion and a calibrant to consider a match.","title":"m/z tolerance"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#overall-mass-bias-estimation","text":"Measurement mass errors are calculated based on the matching of detected ions against the library, a distribution of errors is built, and measurement bias is estimated. Because not all ion matches can be considered as correct, the calibration model will automatically identify the high-density mass error range (mass error range with larger number of matches) from the generated distribution of matching errors. If both parameters ( Primary High-Density Range of Errors size and Error range tolerance ) are set to zero, all errors obtained after matching against the reference library of ions are used for calibration of peaks. High-Density Range of Errors Primary High-Density Range of Errors size Determine the range (in PPM) containing most mass errors after matching the detected ions with the ion calibration library. Use zero to skip this step, in such case the distribution is split into subranges containing all the errors within the error tolerance and the largest subrange is used. Error Range Tolerance Maximum distance (in PPM error) between the maximum and minimum thresholds of the Primary High-Density Range of Errors and the consecutive error to allow the extension of the error range. Determines how far the distribution range of errors will be extended to extract the errors used for mass calibration. The module will include any consecutive matched error from the most populated error range found within the established error range tolerance (i.e., 0.1PPM). This process continues until the algorithm does not find any consecutive error within the Error Range Tolerance value. Use zero to skip this step and no extension will be computed. Percentile Range of Errors Percentile range The module calculates the Interquartile Range (IQR) from the overall distribution of errors to extract those errors to be used for mass calibration of peaks. IQR can be modified (by default determined at 25th and 75th percentiles). In such case, errors distributed below 25th or above 75th percentile will not be considered for mass calibration of peaks.","title":"Overall Mass Bias Estimation"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#mass-calibration-method","text":"Method used for mass calibration. Described in more details below . Arithmetic mean KNN regression Nearest neighbors\u2019 percentage Percentage of nearest neighbors used for error prediction. OLS regression Polynomial degree The degree of polynomial trend used, the summand powers of the polynomial will be the OLS regression features. Use 0 for constant component, 1 for linear, 2 for quadratic and so on. Exponential feature When selected, an exponential feature \\(exp(x/10)\\) is included. Logarithmic feature When selected, logarithmic feature \\(ln(x)\\) is included.","title":"Mass Calibration method"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#reference-library-of-ions_1","text":"First, mass lists (MS1) from raw data files are matched against a reference library and mass measurement errors are calculated. This module can support two different matching strategies: Standard Calibrant Library (SCL) (recommended method): file needs to be provided by the user in xls, xlsx or csv format). The file needs to include retention time (RT) information and the ion formula of a collection of ions that are expected to appear in the samples analyzed with a known chromatographic method. Ion formulas format of the SCL will depend on the ionization method used to analyze the samples. See below in the \u201cParameters\u201d section a detailed description for the library format. Using a SCL, the matching of measured peaks the matching of measured peaks against the library is performed using both RT and exact m/z. RT and m/z error tolerances are needed to be defined. Note: To ignore RT parameter when using SCL for mass calibration, the parameter can be set with an equal or larger value of the chromatography length (i.e., 30 min). Universal Calibrant Library (UCL) include a collection of ions often found in mass spectrometry experiments. The module has two different lists in positive (+ve) and negative (-ve) ionization modes to be chosen by the user. Universal calibrant lists are based on Keller et al. 2008 Analytica Chimica Acta 627:71-81 and Hawkes et al. 2020 Limnology and Oceanography Methods 18:235-258 . MZmine includes both those libraries. Matching of detected ions against the UCL library is performed using m/z values alone independently where the ions are appearing along the chromatography and only m/z error tolerance will be needed.","title":"Reference library of ions"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#more-details-on-mass-calibration-method","text":"To estimate mass measurement bias more accurately, we can model the trend exhibited by the error size vs m/z value relation obtained by matching the mass peaks. With the estimation model we can shift/calibrate the mass peaks at different particular m/z values more accurately. The module supports two main modes for mass calibration: Arithmetic mean: This method uses the arithmetic mean of the extracted errors of the overall bias estimation. Calibration of peaks will be performed globally based on a single overall bias value. This method is especially recommended for datasets with low number of extracted errors (i.e., blank samples). Regression mode: This mode models a trend from the direct relationship of error size (in PPM) vs. measured m/z of detected peaks. Mass lists will be calibrated according to the estimated model. The mass calibration module supports two different methods of regression: OLS and KNN . OLS (ordinary least squares) regression minimizes the mean squared error between the predicted trend and the datapoints in the dataset. Available features include power features (polynomial trend), logarithmic feature and exponential feature. By default , linear trend is fitted. This mode is suitable for datasets with enough data and exhibit a clear and strong trend (Error vs. m/z). KNN (K-Nearest Neighbors) regression finds the average value of the K nearest neighbors. In this module, the number of neighbors is defined by a percentage set by the user of all the errors present in the dataset. The K closest neighbors are thus found by the absolute difference of the m/z values within such percentage. Then the arithmetic mean of the neighbors' errors is calculated for each individual error and will serve as an error estimate for a specific m/z. This method is suitable for datasets with enough data and a trend between mass error vs. m/z is not clear. Therefore, KNN regression allows the trend to match the dataset closely without introducing additional assumptions on how the variables are related. Overfitting problems at large m/z values (>800) can occur when modeling the errors with regression as those regions commonly have less matches against the reference libraries of ions. If regression is modelled mainly by matches with small m/z ions (<400), it is recommended to use the arithmetic mean for mass calibration. This also applies to blank samples were the number of matched ions is commonly low and regression can produce overfitting problems.","title":"More details on mass calibration method"},{"location":"module_docs/featdet_mass_detection/mass-calibration.html#examples","text":"This module was intially created during a GSoC 2020 project with MZmine by \u0141ukasz Fiszer and MZmine team. Olena Mokshyna","title":"Examples"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html","text":"Mass detection algorithms \u00b6 Mass detection can be done with the following six algorithms: Centroid Factor of the lowest signal Exact mass Local maxima Recursive threshold Wavelet transform Auto Centroid \u00b6 This mass detector is suitable for already centroided data. Centroid algorithm assumes that each signal above a given noise level is a detected ion. Factor of the lowest signal \u00b6 This mass detector is suitable for already centroided data. It removes all data points below a spectrum's lowest intensity multiplied by a factor. Exact mass \u00b6 The exact mass algorithm is highly recommended for profile MS data. This mass detector first searches for all local maxima within the spectrum, which then form candidate ions. This method calculates the exact mass of a peak using the FWHM (full width at half maximum) concept and linear equation ( \\(y = mx + b\\) ). FWHM is the difference between the two values of the independent variable at which the dependent variable equals half of its maximum value. First, the method locates the data points located nearest to the peak center at half of the maximum intensity (P1, P2, P3, P4). With these four points it calculates two points (cP1, cP2) that define the width of the peak. The exact mass is then obtained as the center of the width. This method is suitable for high-resolution MS data, such as provided by FTMS instruments. If the continous data is too noisy, one can use recursive threshold algorithm. Local maxima \u00b6 This very simple mass detector detects all local maxima within the spectrum, except the signals below the given noise level. The practical usability of this method on real MS data is limited, but it is useful to demonstrate and understand the functionality of mass detection using the preview plot. Recursive threshold \u00b6 The algorithm finds all m/z ranges within the given limit in a recursive way. Initially, it looks at the whole range of data points. If the m/z width of this range is not within given limits, a minimum data point is found and used to split the range in two parts. The same algorithm is then applied recursively on each part. Recursion continues until all m/z ranges fitting into the given width limits are found. Final m/z values are determined as local maxima of the identified m/z ranges. This mass detector is suitable for continuous data, which has too much noise for the Exact mass detector to be used, but which shows a consistent width of m/z peaks. Additional parameters \u00b6 Min m/z peak width : Minimum acceptable peak width in m/z. Max m/z peak width : Maximum acceptable peak width in m/z. Recursive threshold method can be used with the noisy continuous data that shows a consistent width of m/z peaks. Wavelet transform \u00b6 The method uses the Mexican Hat wavelet model of the continuous wavelet transform ( CWT ) algorithm. The search of mass spectrum peaks is executed in three steps. First, the data point intesity is converted into wavelet domain. Second, all the local maxima of the calculated wavelet are found. Finally, m/z peaks (ions) are declared in those points, where the wavelet has a local maximum. The m/z peak is formed with the selected data point (mass and intensity) using the wavelet and all surrounding data points. The final m/z value of the ion is calculated as an average of m/z values of surrounding data points weighted by their intensity. Mathematical model \u00b6 In numerical analysis, the Mexican hat wavelet is the normalized second derivative of a Gaussian function. \\[\\psi(t)=\\frac{1}{\\sqrt{2\\pi}\\sigma^3} \\left( 1-\\frac{t^2}{\\sigma^2} \\right)e^{-\\frac{t^2}{2\\sigma^2}}\\] The parameter \\(t\\) is the intensity of each data point in the curve, and \\(\\sigma\\) corresponds to the standard deviation. To simplify the process of wavelet calculation, the original function is transformed into two parts, where \\(W_{c}\\) is the wavelet coefficient and \\(y\\) is the intensity of the wavelet at certain point. In the following formula, \\(t\\) corresponds to the Wavelet window size (%) parameter. \\[W_{c}=\\left[\\frac{2}{\\sqrt{3}\\pi^\\frac{1}{4}}\\left(1-t^2\\right)e^-\\frac{t^2}{2}\\right]\\] \\[ y=\\lim_{LL \\to UL}(W_{c}x)\\] The lower (LL) and upper (UL) limits, where the Mexican Hat wavelet is evaluated, are from -5 until 5. The incremental step used in this range is the result of limits range division by 60,000. Additional parameters \u00b6 Scale level Number of wavelet coeficients to use in m/z feature detection. Serves as the scale factor that either dilates or compresses the wavelet signal. When the scale factor is relatively low, the signal is more contracted, which results in a more detailed resulting graph and more noisy peaks are detected. On the other hand, when the scale factor is high, the signal is stretched out, which means that the resulting graph will be less detailed with a smoothed signal. Wavelet window size (%) The size of the window used to calculated the wavelet signal. When the size of the window is small, more noisy peaks can be detected. The proper value of this parameter may help to avoid the undesired noise peaks. The Wavelet transform mass detector is particularly suitable for low-resolution and noisy data. Auto \u00b6 Auto mass detector recognizes if the spectrum is of profile or centroided data type and applies centroid or exact mass algorithms correspondingly. Olena Mokshyna (99.1%), tdamiani (0.9%)","title":"Mass detection algorithms"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#mass-detection-algorithms","text":"Mass detection can be done with the following six algorithms: Centroid Factor of the lowest signal Exact mass Local maxima Recursive threshold Wavelet transform Auto","title":"Mass detection algorithms"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#centroid","text":"This mass detector is suitable for already centroided data. Centroid algorithm assumes that each signal above a given noise level is a detected ion.","title":"Centroid"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#factor-of-the-lowest-signal","text":"This mass detector is suitable for already centroided data. It removes all data points below a spectrum's lowest intensity multiplied by a factor.","title":"Factor of the lowest signal"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#exact-mass","text":"The exact mass algorithm is highly recommended for profile MS data. This mass detector first searches for all local maxima within the spectrum, which then form candidate ions. This method calculates the exact mass of a peak using the FWHM (full width at half maximum) concept and linear equation ( \\(y = mx + b\\) ). FWHM is the difference between the two values of the independent variable at which the dependent variable equals half of its maximum value. First, the method locates the data points located nearest to the peak center at half of the maximum intensity (P1, P2, P3, P4). With these four points it calculates two points (cP1, cP2) that define the width of the peak. The exact mass is then obtained as the center of the width. This method is suitable for high-resolution MS data, such as provided by FTMS instruments. If the continous data is too noisy, one can use recursive threshold algorithm.","title":"Exact mass"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#local-maxima","text":"This very simple mass detector detects all local maxima within the spectrum, except the signals below the given noise level. The practical usability of this method on real MS data is limited, but it is useful to demonstrate and understand the functionality of mass detection using the preview plot.","title":"Local maxima"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#recursive-threshold","text":"The algorithm finds all m/z ranges within the given limit in a recursive way. Initially, it looks at the whole range of data points. If the m/z width of this range is not within given limits, a minimum data point is found and used to split the range in two parts. The same algorithm is then applied recursively on each part. Recursion continues until all m/z ranges fitting into the given width limits are found. Final m/z values are determined as local maxima of the identified m/z ranges. This mass detector is suitable for continuous data, which has too much noise for the Exact mass detector to be used, but which shows a consistent width of m/z peaks.","title":"Recursive threshold"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#additional-parameters","text":"Min m/z peak width : Minimum acceptable peak width in m/z. Max m/z peak width : Maximum acceptable peak width in m/z. Recursive threshold method can be used with the noisy continuous data that shows a consistent width of m/z peaks.","title":"Additional parameters"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#wavelet-transform","text":"The method uses the Mexican Hat wavelet model of the continuous wavelet transform ( CWT ) algorithm. The search of mass spectrum peaks is executed in three steps. First, the data point intesity is converted into wavelet domain. Second, all the local maxima of the calculated wavelet are found. Finally, m/z peaks (ions) are declared in those points, where the wavelet has a local maximum. The m/z peak is formed with the selected data point (mass and intensity) using the wavelet and all surrounding data points. The final m/z value of the ion is calculated as an average of m/z values of surrounding data points weighted by their intensity.","title":"Wavelet transform"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#mathematical-model","text":"In numerical analysis, the Mexican hat wavelet is the normalized second derivative of a Gaussian function. \\[\\psi(t)=\\frac{1}{\\sqrt{2\\pi}\\sigma^3} \\left( 1-\\frac{t^2}{\\sigma^2} \\right)e^{-\\frac{t^2}{2\\sigma^2}}\\] The parameter \\(t\\) is the intensity of each data point in the curve, and \\(\\sigma\\) corresponds to the standard deviation. To simplify the process of wavelet calculation, the original function is transformed into two parts, where \\(W_{c}\\) is the wavelet coefficient and \\(y\\) is the intensity of the wavelet at certain point. In the following formula, \\(t\\) corresponds to the Wavelet window size (%) parameter. \\[W_{c}=\\left[\\frac{2}{\\sqrt{3}\\pi^\\frac{1}{4}}\\left(1-t^2\\right)e^-\\frac{t^2}{2}\\right]\\] \\[ y=\\lim_{LL \\to UL}(W_{c}x)\\] The lower (LL) and upper (UL) limits, where the Mexican Hat wavelet is evaluated, are from -5 until 5. The incremental step used in this range is the result of limits range division by 60,000.","title":"Mathematical model"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#additional-parameters_1","text":"Scale level Number of wavelet coeficients to use in m/z feature detection. Serves as the scale factor that either dilates or compresses the wavelet signal. When the scale factor is relatively low, the signal is more contracted, which results in a more detailed resulting graph and more noisy peaks are detected. On the other hand, when the scale factor is high, the signal is stretched out, which means that the resulting graph will be less detailed with a smoothed signal. Wavelet window size (%) The size of the window used to calculated the wavelet signal. When the size of the window is small, more noisy peaks can be detected. The proper value of this parameter may help to avoid the undesired noise peaks. The Wavelet transform mass detector is particularly suitable for low-resolution and noisy data.","title":"Additional parameters"},{"location":"module_docs/featdet_mass_detection/mass-detection-algorithms.html#auto","text":"Auto mass detector recognizes if the spectrum is of profile or centroided data type and applies centroid or exact mass algorithms correspondingly. Olena Mokshyna (99.1%), tdamiani (0.9%)","title":"Auto"},{"location":"module_docs/featdet_mass_detection/mass-detection.html","text":"Mass detection \u00b6 Description \u00b6 Raw data methods \u2192 Mass detection \u2192 Mass detection The mass detection module generates a mass list ( i.e. list of m/z values and corresponding signal intensities) for each scan, in each raw data file. During the mass detection, profile raw data are centroided and a noise filtering is performed based on a user-defined threshold (see Setting the noise level ). The available algorithms are described here . Parameters \u00b6 Raw data files \u00b6 Select the input raw data files for the mass detection. All the imported data files can be processed in bulk ( i.e. All raw data files ), or a subset can be selected directly from the MS data files panel ( i.e. As selected in the main window ) or based on the filename ( i.e. File name pattern ) As an alternative, the files' directory can be also specified ( i.e. Specific raw data files ). Finally, if the Those created by previous batch step option is selected, MZmine takes the output of the last processing step as input. This option is only avaialble for batch processing . Scans \u00b6 Select (or filter out) the MS scans to be processed. Several filters are available ( Select filters button). A scan number, RT and mobility range can be set ( i.e Scan number , Retention time and Mobility options); only the scans belonging to the defined range(s) will be processed. The Base Filtering Integer option allows to prcesses one every- N scans. The Scan definition field can be used to filter scans based on the scan's description normally included in the raw file's metadata ( e.g. FTMS). Scans can also be filtered by MS level ( i.e. 1, 2, ..., N ), polarity and spectrum type ( i.e. Centroided, Profile and Thresholded). Scan types (IMS) \u00b6 This parameter applies only to IM data and determines if mobility scans , frame scans or both ( i.e. All scan types ) are processed. For more details about mobility and frame scans , see here . Tip . Since frame scans are obtained by merging multiple mobility scans , the noise thresholds will likely be different. However, only one noise level can be set per processing step. Therefore, if one wants to run the mass detection for mobility and frame scans using different noise cutoffs, two module calls are required. As an alternative, mass detection can be performed only on the mobility scans by selecteing the appropriate noise level. Mobility scans can then be merged into frame scans with a dedicated module . Mass detector \u00b6 Select the algorithm to be used for the mass detection. Several mass detection algorithms are available and can be selected in the drop-down menu. The choice depends on the raw data characteristics (profile/centroided, mass resolution, etc.). The Centroid algorithm must be used for already-centroided data. A step-by-step guide to convert profile into centroided data is provided in the GNPS documentation Other algorithms are available for profile raw data and are described in more details here . The Exact mass algorithm is highly recommended for profile HRMS data. When Auto is selected, the Centroid and Exact mass algorithms are used by default for centroided and profile data, respectively. Setting the noise level \u00b6 All the mass detection algorithms allow to set a threshold for the noise filtering ( i.e. Noise level ) by hitting the Setup button next to the Mass detector field. A dialog box like the following will open up: The noise threshold can be entered either in standard or scientific notation. By checking the Show preview box, an interactive visualization panel will open to help the user to adjust the noise level (see also How do I determine the noise level in my data? ). The red dots denotes the mass signals retained in the mass list according to the set threshold. Different data files and scan numbers can be visualized using the corresponding drop-down menus. Detect isotope signals below noise level \u00b6 The Centroid and Exact mass algorithms provide the option to retain signals that are below the noise level (and would be otherwise discarded), but correspond to isotopes of the detected masses. Theoretical isotopic distributions are calculated for each mass detected in the mass list based on the speciefied chemical elements. If a signal below the noise threshold that matches a theoretical isotopic mass is found in the raw data, it will be included in the final mass list. Tip . In the case of LC-MS data processing, the low-intensity isotope signals included in the final mass list will undergo the whole feature detection workflow (see, for example, LC-MS data processing workflow . Due to the low intensity, these masses often produce LC peaks with poor peak shape during the chromatogram building step and might be discarded if they do not meet the user-defined parameters ( e.g. minimum number of data points and intensity, see ADAP chromatogram builder for more details). Therefore, it might be advisable not to use this option during the mass detection, but rather use the Isotope finder module (CREATE DOC) By ticking the corresponding checkbox and hitting the Setup button, the following dialog box opens up: Chemical elements \u00b6 Elements considered when generating the isotopic distributions. Select the elements from the periodic table by hitting the Setup button. m/z tolerance \u00b6 Maximum allowed difference between measured and theoretical isotope m/z . It is an intra-scan m/z tolerance . The tolerance can be set in m/z , ppm or both. Since mass deviations expressed in ppm are dependent on the m/z ( e.g. higher at low m/z and lower at high m/z ), MZmine automatically uses the largest tolerance. Maximum charge of isotope m/z \u00b6 Maximum allowed charge state of the isotope to be retained in the mass list. Default value is 1. How do I determine the noise level in my data? \u00b6 The backgorund noise level largely depends on the mass spectrometer and detector type. For example, Orbitrap instruments normally provides higher signal intensities than TOF devices. To provide some numbers, while 1.0E2 - 1.0E3 could be an appropriate noise level for TOF analyzers, the same would be overly low for Orbitrap instruments (which normally require 1.0E4 - 1.0E5). The best way to determine the instrumental noise level is undoubtedly by looking at the raw data. The backgorund noise (often referred to as \"grass\" in technical jargon) is characterized by several signals having the same intensity and no clear pattern among them (see Figure). Since these signals are produced by electrical and/or mechanical noise, rather than actual ions being detected, they should be excluded from the mass detection and downstream data processing. The red dashed line in the figure corresponds to a hypothetical noise level (1.0E4 in this case) that would filter out most of the \"grass\"-type noise from the mass detection. Another way, more releant for the fearure detection, to determine the noise level consists of picking a mid-intensity LC peak and extract the EICs of its 13C isotopes. When the chromatographic peak shape starts to deteriorate, it means we are approaching the instrument detection limit (see Figure). Such approach can also be useful to determine other parameters in the feature detection such as the Group intensity threshold and Min highest intensity parameters in the ADAP chromatogram builder module. Olena Mokshyna (24.24%), SteffenHeu (10.61%), tdamiani (59.09%), Roman Bushuiev (4.55%), corinnabrungs (1.52%)","title":"Mass detection"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#mass-detection","text":"","title":"Mass detection"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#description","text":"Raw data methods \u2192 Mass detection \u2192 Mass detection The mass detection module generates a mass list ( i.e. list of m/z values and corresponding signal intensities) for each scan, in each raw data file. During the mass detection, profile raw data are centroided and a noise filtering is performed based on a user-defined threshold (see Setting the noise level ). The available algorithms are described here .","title":"Description"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#raw-data-files","text":"Select the input raw data files for the mass detection. All the imported data files can be processed in bulk ( i.e. All raw data files ), or a subset can be selected directly from the MS data files panel ( i.e. As selected in the main window ) or based on the filename ( i.e. File name pattern ) As an alternative, the files' directory can be also specified ( i.e. Specific raw data files ). Finally, if the Those created by previous batch step option is selected, MZmine takes the output of the last processing step as input. This option is only avaialble for batch processing .","title":"Raw data files"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#scans","text":"Select (or filter out) the MS scans to be processed. Several filters are available ( Select filters button). A scan number, RT and mobility range can be set ( i.e Scan number , Retention time and Mobility options); only the scans belonging to the defined range(s) will be processed. The Base Filtering Integer option allows to prcesses one every- N scans. The Scan definition field can be used to filter scans based on the scan's description normally included in the raw file's metadata ( e.g. FTMS). Scans can also be filtered by MS level ( i.e. 1, 2, ..., N ), polarity and spectrum type ( i.e. Centroided, Profile and Thresholded).","title":"Scans"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#scan-types-ims","text":"This parameter applies only to IM data and determines if mobility scans , frame scans or both ( i.e. All scan types ) are processed. For more details about mobility and frame scans , see here . Tip . Since frame scans are obtained by merging multiple mobility scans , the noise thresholds will likely be different. However, only one noise level can be set per processing step. Therefore, if one wants to run the mass detection for mobility and frame scans using different noise cutoffs, two module calls are required. As an alternative, mass detection can be performed only on the mobility scans by selecteing the appropriate noise level. Mobility scans can then be merged into frame scans with a dedicated module .","title":"Scan types (IMS)"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#mass-detector","text":"Select the algorithm to be used for the mass detection. Several mass detection algorithms are available and can be selected in the drop-down menu. The choice depends on the raw data characteristics (profile/centroided, mass resolution, etc.). The Centroid algorithm must be used for already-centroided data. A step-by-step guide to convert profile into centroided data is provided in the GNPS documentation Other algorithms are available for profile raw data and are described in more details here . The Exact mass algorithm is highly recommended for profile HRMS data. When Auto is selected, the Centroid and Exact mass algorithms are used by default for centroided and profile data, respectively.","title":"Mass detector"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#setting-the-noise-level","text":"All the mass detection algorithms allow to set a threshold for the noise filtering ( i.e. Noise level ) by hitting the Setup button next to the Mass detector field. A dialog box like the following will open up: The noise threshold can be entered either in standard or scientific notation. By checking the Show preview box, an interactive visualization panel will open to help the user to adjust the noise level (see also How do I determine the noise level in my data? ). The red dots denotes the mass signals retained in the mass list according to the set threshold. Different data files and scan numbers can be visualized using the corresponding drop-down menus.","title":"Setting the noise level"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#detect-isotope-signals-below-noise-level","text":"The Centroid and Exact mass algorithms provide the option to retain signals that are below the noise level (and would be otherwise discarded), but correspond to isotopes of the detected masses. Theoretical isotopic distributions are calculated for each mass detected in the mass list based on the speciefied chemical elements. If a signal below the noise threshold that matches a theoretical isotopic mass is found in the raw data, it will be included in the final mass list. Tip . In the case of LC-MS data processing, the low-intensity isotope signals included in the final mass list will undergo the whole feature detection workflow (see, for example, LC-MS data processing workflow . Due to the low intensity, these masses often produce LC peaks with poor peak shape during the chromatogram building step and might be discarded if they do not meet the user-defined parameters ( e.g. minimum number of data points and intensity, see ADAP chromatogram builder for more details). Therefore, it might be advisable not to use this option during the mass detection, but rather use the Isotope finder module (CREATE DOC) By ticking the corresponding checkbox and hitting the Setup button, the following dialog box opens up:","title":"Detect isotope signals below noise level"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#chemical-elements","text":"Elements considered when generating the isotopic distributions. Select the elements from the periodic table by hitting the Setup button.","title":"Chemical elements"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#mz-tolerance","text":"Maximum allowed difference between measured and theoretical isotope m/z . It is an intra-scan m/z tolerance . The tolerance can be set in m/z , ppm or both. Since mass deviations expressed in ppm are dependent on the m/z ( e.g. higher at low m/z and lower at high m/z ), MZmine automatically uses the largest tolerance.","title":"m/z tolerance"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#maximum-charge-of-isotope-mz","text":"Maximum allowed charge state of the isotope to be retained in the mass list. Default value is 1.","title":"Maximum charge of isotope m/z"},{"location":"module_docs/featdet_mass_detection/mass-detection.html#how-do-i-determine-the-noise-level-in-my-data","text":"The backgorund noise level largely depends on the mass spectrometer and detector type. For example, Orbitrap instruments normally provides higher signal intensities than TOF devices. To provide some numbers, while 1.0E2 - 1.0E3 could be an appropriate noise level for TOF analyzers, the same would be overly low for Orbitrap instruments (which normally require 1.0E4 - 1.0E5). The best way to determine the instrumental noise level is undoubtedly by looking at the raw data. The backgorund noise (often referred to as \"grass\" in technical jargon) is characterized by several signals having the same intensity and no clear pattern among them (see Figure). Since these signals are produced by electrical and/or mechanical noise, rather than actual ions being detected, they should be excluded from the mass detection and downstream data processing. The red dashed line in the figure corresponds to a hypothetical noise level (1.0E4 in this case) that would filter out most of the \"grass\"-type noise from the mass detection. Another way, more releant for the fearure detection, to determine the noise level consists of picking a mid-intensity LC peak and extract the EICs of its 13C isotopes. When the chromatographic peak shape starts to deteriorate, it means we are approaching the instrument detection limit (see Figure). Such approach can also be useful to determine other parameters in the feature detection such as the Group intensity threshold and Min highest intensity parameters in the ADAP chromatogram builder module. Olena Mokshyna (24.24%), SteffenHeu (10.61%), tdamiani (59.09%), Roman Bushuiev (4.55%), corinnabrungs (1.52%)","title":"How do I determine the noise level in my data?"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html","text":"Mobility scan merging \u00b6 Description \u00b6 Raw data methods \u2192 File merging \u2192 Mobility scan merging This module merges mobility scans in each single ion mobility data file at the same retention time to a summed frame spectrum. The merged frame spectrum is used if a *.mzML file is imported. The merged frame spectrum is required to gain access to MZmine's LC-MS functionality. This step uses the centroided and thresholded data produced by the mass detection step. This step is not required when importing native Bruker .tdf or .tsf data from .d folders. When importing native Bruker data, a merged spectrum for the frame is created automatically by the vendor library. Parameters \u00b6 Raw data files \u00b6 Raw data files the module will take as an input. Noise level \u00b6 Data points beyond the defined noise level threshold will be ignored. Merging type \u00b6 The way to calculate intensities. Intensities can be either averaged, summed, or the maximum value can be chosen. m/z weighing \u00b6 Chosen function is used to weigh m/z values by their intensities. The available options are: None, Linear, log10, log2, square root, or cube root. Scans \u00b6 Selects the scans that should be included. m/z tolerance \u00b6 Maximum allowed difference between two m/z values in order for them to be considered the same. Olena Mokshyna","title":"Mobility scan merging"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#mobility-scan-merging","text":"","title":"Mobility scan merging"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#description","text":"Raw data methods \u2192 File merging \u2192 Mobility scan merging This module merges mobility scans in each single ion mobility data file at the same retention time to a summed frame spectrum. The merged frame spectrum is used if a *.mzML file is imported. The merged frame spectrum is required to gain access to MZmine's LC-MS functionality. This step uses the centroided and thresholded data produced by the mass detection step. This step is not required when importing native Bruker .tdf or .tsf data from .d folders. When importing native Bruker data, a merged spectrum for the frame is created automatically by the vendor library.","title":"Description"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#raw-data-files","text":"Raw data files the module will take as an input.","title":"Raw data files"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#noise-level","text":"Data points beyond the defined noise level threshold will be ignored.","title":"Noise level"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#merging-type","text":"The way to calculate intensities. Intensities can be either averaged, summed, or the maximum value can be chosen.","title":"Merging type"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#mz-weighing","text":"Chosen function is used to weigh m/z values by their intensities. The available options are: None, Linear, log10, log2, square root, or cube root.","title":"m/z weighing"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#scans","text":"Selects the scans that should be included.","title":"Scans"},{"location":"module_docs/featdet_mobility_scan_merging/mobility-scan-merging.html#mz-tolerance","text":"Maximum allowed difference between two m/z values in order for them to be considered the same. Olena Mokshyna","title":"m/z tolerance"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html","text":"MS2 Scan Pairing \u00b6 Description \u00b6 Feature list methods \u2192 Processing \u2192 Assign MS2 to feature This module allows to pair MS2 scans with features. It assigns all MS2 scans within range to all features in chosen feature list. Parameters \u00b6 Retention time tolerance \u00b6 The maximum offset between the highest point of the chromatographic peak and the time the MS2 was acquired. MS1 to MS2 precursor tolerance (m/z) \u00b6 Describes the tolerance between the precursor ion in a MS1 scan and the precursor m/z assigned to the MS2 scan. Limit by RT edges \u00b6 Use the feature's edges (retention time) as a filter. Combine MS/MS spectra (TIMS) \u00b6 If checked, all MS/MS spectra assigned to a feature will be merged into a single spectrum. Lock to feature mobility range \u00b6 If checked, only mobility scans from the mobility range of the feature will be merged. This is usually not needed. However, if isomers/isobars elute at the same retention time and are close in mobility, the MS/MS window might be larger than the peak in mobility dimension and thus cause chimeric MS/MS spectra. Minimum merged intensity \u00b6 If an ion mobility spectrometry (IMS) feature is processed, this parameter can be used to filter low abundant peaks in the MS/MS spectrum, since multiple MS/MS mobility scans need to be merged together. Olena Mokshyna (60.0%), tdamiani (40.0%)","title":"MS2 scan pairing"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#ms2-scan-pairing","text":"","title":"MS2 Scan Pairing"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#description","text":"Feature list methods \u2192 Processing \u2192 Assign MS2 to feature This module allows to pair MS2 scans with features. It assigns all MS2 scans within range to all features in chosen feature list.","title":"Description"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#retention-time-tolerance","text":"The maximum offset between the highest point of the chromatographic peak and the time the MS2 was acquired.","title":"Retention time tolerance"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#ms1-to-ms2-precursor-tolerance-mz","text":"Describes the tolerance between the precursor ion in a MS1 scan and the precursor m/z assigned to the MS2 scan.","title":"MS1 to MS2 precursor tolerance (m/z)"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#limit-by-rt-edges","text":"Use the feature's edges (retention time) as a filter.","title":"Limit by RT edges"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#combine-msms-spectra-tims","text":"If checked, all MS/MS spectra assigned to a feature will be merged into a single spectrum.","title":"Combine MS/MS spectra (TIMS)"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#lock-to-feature-mobility-range","text":"If checked, only mobility scans from the mobility range of the feature will be merged. This is usually not needed. However, if isomers/isobars elute at the same retention time and are close in mobility, the MS/MS window might be larger than the peak in mobility dimension and thus cause chimeric MS/MS spectra.","title":"Lock to feature mobility range"},{"location":"module_docs/featdet_ms2_scan_pairing/ms2_scan_pairing.html#minimum-merged-intensity","text":"If an ion mobility spectrometry (IMS) feature is processed, this parameter can be used to filter low abundant peaks in the MS/MS spectrum, since multiple MS/MS mobility scans need to be merged together. Olena Mokshyna (60.0%), tdamiani (40.0%)","title":"Minimum merged intensity"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html","text":"Spectral deconvolution: Multivariate Curve Resolution \u00b6 This module is being updated, which might affect its functionality Description \u00b6 Feature list methods \u2192 Spectral deconvolution (GC) \u2192 Multivariate Curve Resolution This ADAP-based method performs Spectral Deconvolution of detected peaks. It finds components (compounds, analytes, etc.) and determines their model peaks and fragmentation mass spectra. The spectral deconvolution uses both constructed chromatograms and detected peaks. The feature list of constructed chromatograms is specified by selecting Specific peak lists for parameter Chromatograms, clicking on the ellipsis button, and choosing one or more lists with chromatograms in the popup window. The list of detected peaks is specified by selecting Specific peak lists for parameter Peaks, clicking on the ellipsis button, and choosing one or more lists with detected peaks in the popup window. The Spectral Deconvolution consists of two steps : Entire retention time interval is split into deconvolution windows so that Peaks produced by the same component or by coeluting components belong to the same deconvolution window, Number of peaks in deconvolution window is significantly smaller than the total number of peaks. The deconvolution windows are displayed in the top plot of the preview, where small dash lines denote peaks in the (retention time, m/z)-plane, and peaks belonging to one deconvolution window have the same color. The vertical sequences of peaks usually mark the presence of one or several compounds, so it is important that those peaks are assigned to the same deconvolution window, i.e. they have the same color on the plot. The deconvolution windows are controlled by the Deconvolution window width parameter. If deconvolution windows contain too many peaks, it will significantly slow down the spectral deconvolution computations, so the deconvolution windows should be as short (in the retention time domain) as possible. 2. The algorithm infers the number of components in each deconvolution window and construct their model peaks and fragmentation spectra. The inferred number of components is controlled by three parameters: Retention time tolerance (min) , Minimum Number of Peaks , and Adjust Apex Ret Times . References \u00b6 Pluskal, T., Castillo, S., Villar-Briones, A. & Oresic, M. MZmine 2: Modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data. BMC Bioinformatics (2010). DOI: 10.1186/1471-2105-11-395 Smirnov A, Jia W, Walker D, Jones D, Du X: ADAP-GC 3.2: Graphical Software Tool for Efficient Spectral Deconvolution of Gas Cromatography\u2014High-Resolution Mass Spectrometry Metabolomics Data. J. Proteome Res 2017, DOI: 10.1021/acs.jproteome.7b00633 Aleksandr Smirnov, Yunping Qiu, Wei Jia, Douglas I. Walker, Dean P. Jones, Xiuxia Du. ADAP-GC 4.0: Application of Clustering-Assisted Multivariate Curve Resolution to Spectral Deconvolution of Gas Chromatography\u2013Mass Spectrometry Metabolomics Data. Analytical Chemistry 2019, 91 (14) , 9069-9077. 10.1021/acs.analchem.9b01424 Parameters \u00b6 Deconvolution window width (min) \u00b6 The algorithm will produce deconvolution windows so that their width (in retention time domain) does not exceed the value of this parameter. Retention time tolerance (min) \u00b6 The smallest time-gap between any two components. Minimum Number of Peaks \u00b6 The smallest number of detected peaks to form a component. Adjust Apex Ret Times \u00b6 If false , then the retention time of each detected peak is determined by the retention time of its highest data point. If true , then the retention time of each detected peak is determined by fitting a parabola into the top half of that peak. Olena Mokshyna","title":"Multivariate curve resolution"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#spectral-deconvolution-multivariate-curve-resolution","text":"This module is being updated, which might affect its functionality","title":"Spectral deconvolution: Multivariate Curve Resolution"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#description","text":"Feature list methods \u2192 Spectral deconvolution (GC) \u2192 Multivariate Curve Resolution This ADAP-based method performs Spectral Deconvolution of detected peaks. It finds components (compounds, analytes, etc.) and determines their model peaks and fragmentation mass spectra. The spectral deconvolution uses both constructed chromatograms and detected peaks. The feature list of constructed chromatograms is specified by selecting Specific peak lists for parameter Chromatograms, clicking on the ellipsis button, and choosing one or more lists with chromatograms in the popup window. The list of detected peaks is specified by selecting Specific peak lists for parameter Peaks, clicking on the ellipsis button, and choosing one or more lists with detected peaks in the popup window. The Spectral Deconvolution consists of two steps : Entire retention time interval is split into deconvolution windows so that Peaks produced by the same component or by coeluting components belong to the same deconvolution window, Number of peaks in deconvolution window is significantly smaller than the total number of peaks. The deconvolution windows are displayed in the top plot of the preview, where small dash lines denote peaks in the (retention time, m/z)-plane, and peaks belonging to one deconvolution window have the same color. The vertical sequences of peaks usually mark the presence of one or several compounds, so it is important that those peaks are assigned to the same deconvolution window, i.e. they have the same color on the plot. The deconvolution windows are controlled by the Deconvolution window width parameter. If deconvolution windows contain too many peaks, it will significantly slow down the spectral deconvolution computations, so the deconvolution windows should be as short (in the retention time domain) as possible. 2. The algorithm infers the number of components in each deconvolution window and construct their model peaks and fragmentation spectra. The inferred number of components is controlled by three parameters: Retention time tolerance (min) , Minimum Number of Peaks , and Adjust Apex Ret Times .","title":"Description"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#references","text":"Pluskal, T., Castillo, S., Villar-Briones, A. & Oresic, M. MZmine 2: Modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data. BMC Bioinformatics (2010). DOI: 10.1186/1471-2105-11-395 Smirnov A, Jia W, Walker D, Jones D, Du X: ADAP-GC 3.2: Graphical Software Tool for Efficient Spectral Deconvolution of Gas Cromatography\u2014High-Resolution Mass Spectrometry Metabolomics Data. J. Proteome Res 2017, DOI: 10.1021/acs.jproteome.7b00633 Aleksandr Smirnov, Yunping Qiu, Wei Jia, Douglas I. Walker, Dean P. Jones, Xiuxia Du. ADAP-GC 4.0: Application of Clustering-Assisted Multivariate Curve Resolution to Spectral Deconvolution of Gas Chromatography\u2013Mass Spectrometry Metabolomics Data. Analytical Chemistry 2019, 91 (14) , 9069-9077. 10.1021/acs.analchem.9b01424","title":"References"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#deconvolution-window-width-min","text":"The algorithm will produce deconvolution windows so that their width (in retention time domain) does not exceed the value of this parameter.","title":"Deconvolution window width (min)"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#retention-time-tolerance-min","text":"The smallest time-gap between any two components.","title":"Retention time tolerance (min)"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#minimum-number-of-peaks","text":"The smallest number of detected peaks to form a component.","title":"Minimum Number of Peaks"},{"location":"module_docs/featdet_multivariate_curve_res/featdet_multivar_curve_res.html#adjust-apex-ret-times","text":"If false , then the retention time of each detected peak is determined by the retention time of its highest data point. If true , then the retention time of each detected peak is determined by fitting a parabola into the top half of that peak. Olena Mokshyna","title":"Adjust Apex Ret Times"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html","text":"ADAP resolver \u00b6 Description \u00b6 Feature detection \u2192 Chromatogram resolving \u2192 ADAP resolver ADAP detects EIC peaks by using the continuous wavelet transform (CWT) algorithm. Wavelet coefficients are first calculated as the inner product between the EIC and wavelets at different scales and locations. Subsequently, peak location and boundaries are determined through a ridgeline detection and simple local minima search. References \u00b6 Du, P., Kibbe W. A., and Lin S. M., Bioinformatics 2006, 22:2059-65. Wee A., Grayden D. B., Zhu Y., Petkovic-Duran K., and Smith D., Electrophoresis 2008, 29:4215-25. Ridgeline detection \u00b6 A real peak in an EIC should create a local maxima in the wavelet coefficients at multiple scales. The best scale would create the largest coefficient. In case of the wavelet, it is the scale, for which the wavelet most closely matches the shape of the peak. Scales close to the best scale should also have reasonably similar shapes to the peak and therefore create adjacent maxima between those scales. Ridgelines are the series of connected local maxima across scales, which are indicative of a real peak. The applied procedure for detecting the ridgelines is similar to that described by Du et al. [ 1 ] and Wee et al. [ 2 ] and is as follows: Begin with the coefficients corresponding to the largest wavelet scale. Find the largest coefficient at this scale and initialize a ridgeline. Remove all coefficients that are within half the estimated compact support of the Ricker wavelet (2.5 times the current scale). Find the next largest coefficient discounting all removed coefficients and initialize another ridgeline. Repeat steps (3)-(4) until there are no more coefficients remaining for this wavelet scale. Move to the next scale (decrease by one) and repeat (1)-(6). Add new coefficients to an existing ridgeline if they are close in RT. We define \"close\" to be a difference in their indices that is less than or equal to the current scale being investigated. 7. After all scales have been processed, ridgelines must have a length , i.e., the total number of scales represented in the ridgeline, greater than or equal to 7. Signal-to-Noise threshold estimation \u00b6 Intensity-based \u00b6 To calculate it, S is chosen to be the maximum intensity between the boundaries of the feature under investigation. Noise, N, is estimated using two different steps. The final estimate of N is the smaller value, which is then used to calculate S/N. Each estimation of the noise attempts to avoid overestimate from the accidental inclusion of other real features that may be close in RT. Step 1 : Set two windows, one on each side of the peak in the EIC. The windows begin at the left and right peak boundaries and end at the peak boundaries plus or minus 2 times peak width (PW) , respectively. PW is defined to be the number of scans between the two boundaries of a peak. Calculate the standard deviation of the intensities in the two combined windows and store it as one possible value of the noise. Expand both windows out from the peak by a single scan. The boundaries closest to the peak remain the same. After the first expansion, each window has a length of 2 times PW+1. Calculate and store the standard deviation of the intensities in the combined windows. Repeat steps (3)-(4) until each window has a length of 8 times PW. Incrementally shrink each window by one scan, calculating and storing the standard deviations of the combined windows. The windows are shrunk by moving the boundary closest to the peak toward the boundary furthest from it. Repeat step (6) until the window size is 2 times PW. The final noise estimate is taken to be the smallest stored standard deviation. Step 2 : Same as (1) in step 1. Same as (2) in step 1. Shift each entire window away from the feature by one scan; the window lengths do not change. Repeat steps (2)-(3) until each window's boundary furthest from the feature is 8 times PW from the closest boundary of that feature. The final noise is taken to be the smallest stored standard deviation. Wavelet coefficients-based \u00b6 The magnitude of the wavelet coefficient alone is not sufficient for determining if a feature is real due to its strong dependence on the intensities of the data points used in calculations. To ensure that low-intensity features can be reliably detected and that poorly shaped peaks can be reliably filtered out, the largest coefficient, \\(Cmax\\) , for a given feature is taken and divide it by the area, \\(A\\) , under the curve between the two boundaries of the peak. Then the area is calculated using a trapezoidal method so that \\(A\\) is exactly the area under the curve created by connecting adjacent data points with straight lines. The result is a measure for which large values correspond to the features similar in shape to the wavelet. One important property of \\(Cmax/A\\) , is that intermittent dips in the intensity can increase the value due to the reduced area. This is beneficial for finding messy low-intensity features but can also be problematic if the area is so small it results in the detection of a feature with a very bad shape. Parameters \u00b6 Suffix \u00b6 This string is added to feature list name as suffix Original feature list \u00b6 Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing \u00b6 Set MS/MS scan pairing parameters. For more details see MS2 scan pairing Dimension \u00b6 Select the dimension to be resolve - either retention time, or mobility. S/N threshold \u00b6 The signal (S) to noise (N) ratio, S/N. S/N estimator \u00b6 There two options for S/N estimator: Wavelet coefficient If this parameter is chosen the calculations follow the algorithm described here This uses two parameters: Peak width mult. determines window size abs(wavelet coeffs.) determines if the absolute values of coefficient are used Intensity window SN If this parameter is chosen the calculations follow the algorithm described here . Min feature height \u00b6 The smallest intensity a peak can have and be considered a real feature. Coefficient/area threshold \u00b6 The best coefficient (the largest inner product of wavelet with peak in ridgeline) divided by the area under the curve of the feature Peak duration range \u00b6 The acceptable range of peak widths. Features with widths outside this range will be rejected. RT wavelet range \u00b6 The range of wavelet scales used to build matrix of coefficients. Scales are expressed as RT values (minutes) and correspond to the range of wavelet scales that will be applied to the chromatogram. Choose a range that is similar to the range of feature widths expected to be found from the data. Olena Mokshyna","title":"ADAP resolver"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#adap-resolver","text":"","title":"ADAP resolver"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#description","text":"Feature detection \u2192 Chromatogram resolving \u2192 ADAP resolver ADAP detects EIC peaks by using the continuous wavelet transform (CWT) algorithm. Wavelet coefficients are first calculated as the inner product between the EIC and wavelets at different scales and locations. Subsequently, peak location and boundaries are determined through a ridgeline detection and simple local minima search.","title":"Description"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#references","text":"Du, P., Kibbe W. A., and Lin S. M., Bioinformatics 2006, 22:2059-65. Wee A., Grayden D. B., Zhu Y., Petkovic-Duran K., and Smith D., Electrophoresis 2008, 29:4215-25.","title":"References"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#ridgeline-detection","text":"A real peak in an EIC should create a local maxima in the wavelet coefficients at multiple scales. The best scale would create the largest coefficient. In case of the wavelet, it is the scale, for which the wavelet most closely matches the shape of the peak. Scales close to the best scale should also have reasonably similar shapes to the peak and therefore create adjacent maxima between those scales. Ridgelines are the series of connected local maxima across scales, which are indicative of a real peak. The applied procedure for detecting the ridgelines is similar to that described by Du et al. [ 1 ] and Wee et al. [ 2 ] and is as follows: Begin with the coefficients corresponding to the largest wavelet scale. Find the largest coefficient at this scale and initialize a ridgeline. Remove all coefficients that are within half the estimated compact support of the Ricker wavelet (2.5 times the current scale). Find the next largest coefficient discounting all removed coefficients and initialize another ridgeline. Repeat steps (3)-(4) until there are no more coefficients remaining for this wavelet scale. Move to the next scale (decrease by one) and repeat (1)-(6). Add new coefficients to an existing ridgeline if they are close in RT. We define \"close\" to be a difference in their indices that is less than or equal to the current scale being investigated. 7. After all scales have been processed, ridgelines must have a length , i.e., the total number of scales represented in the ridgeline, greater than or equal to 7.","title":"Ridgeline detection"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#signal-to-noise-threshold-estimation","text":"","title":"Signal-to-Noise threshold estimation"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#intensity-based","text":"To calculate it, S is chosen to be the maximum intensity between the boundaries of the feature under investigation. Noise, N, is estimated using two different steps. The final estimate of N is the smaller value, which is then used to calculate S/N. Each estimation of the noise attempts to avoid overestimate from the accidental inclusion of other real features that may be close in RT. Step 1 : Set two windows, one on each side of the peak in the EIC. The windows begin at the left and right peak boundaries and end at the peak boundaries plus or minus 2 times peak width (PW) , respectively. PW is defined to be the number of scans between the two boundaries of a peak. Calculate the standard deviation of the intensities in the two combined windows and store it as one possible value of the noise. Expand both windows out from the peak by a single scan. The boundaries closest to the peak remain the same. After the first expansion, each window has a length of 2 times PW+1. Calculate and store the standard deviation of the intensities in the combined windows. Repeat steps (3)-(4) until each window has a length of 8 times PW. Incrementally shrink each window by one scan, calculating and storing the standard deviations of the combined windows. The windows are shrunk by moving the boundary closest to the peak toward the boundary furthest from it. Repeat step (6) until the window size is 2 times PW. The final noise estimate is taken to be the smallest stored standard deviation. Step 2 : Same as (1) in step 1. Same as (2) in step 1. Shift each entire window away from the feature by one scan; the window lengths do not change. Repeat steps (2)-(3) until each window's boundary furthest from the feature is 8 times PW from the closest boundary of that feature. The final noise is taken to be the smallest stored standard deviation.","title":"Intensity-based"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#wavelet-coefficients-based","text":"The magnitude of the wavelet coefficient alone is not sufficient for determining if a feature is real due to its strong dependence on the intensities of the data points used in calculations. To ensure that low-intensity features can be reliably detected and that poorly shaped peaks can be reliably filtered out, the largest coefficient, \\(Cmax\\) , for a given feature is taken and divide it by the area, \\(A\\) , under the curve between the two boundaries of the peak. Then the area is calculated using a trapezoidal method so that \\(A\\) is exactly the area under the curve created by connecting adjacent data points with straight lines. The result is a measure for which large values correspond to the features similar in shape to the wavelet. One important property of \\(Cmax/A\\) , is that intermittent dips in the intensity can increase the value due to the reduced area. This is beneficial for finding messy low-intensity features but can also be problematic if the area is so small it results in the detection of a feature with a very bad shape.","title":"Wavelet coefficients-based"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#suffix","text":"This string is added to feature list name as suffix","title":"Suffix"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#original-feature-list","text":"Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution.","title":"Original feature list"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#msms-scan-pairing","text":"Set MS/MS scan pairing parameters. For more details see MS2 scan pairing","title":"MS/MS scan pairing"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#dimension","text":"Select the dimension to be resolve - either retention time, or mobility.","title":"Dimension"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#sn-threshold","text":"The signal (S) to noise (N) ratio, S/N.","title":"S/N threshold"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#sn-estimator","text":"There two options for S/N estimator: Wavelet coefficient If this parameter is chosen the calculations follow the algorithm described here This uses two parameters: Peak width mult. determines window size abs(wavelet coeffs.) determines if the absolute values of coefficient are used Intensity window SN If this parameter is chosen the calculations follow the algorithm described here .","title":"S/N estimator"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#min-feature-height","text":"The smallest intensity a peak can have and be considered a real feature.","title":"Min feature height"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#coefficientarea-threshold","text":"The best coefficient (the largest inner product of wavelet with peak in ridgeline) divided by the area under the curve of the feature","title":"Coefficient/area threshold"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#peak-duration-range","text":"The acceptable range of peak widths. Features with widths outside this range will be rejected.","title":"Peak duration range"},{"location":"module_docs/featdet_resolver_adap/adap-resolver.html#rt-wavelet-range","text":"The range of wavelet scales used to build matrix of coefficients. Scales are expressed as RT values (minutes) and correspond to the range of wavelet scales that will be applied to the chromatogram. Choose a range that is similar to the range of feature widths expected to be found from the data. Olena Mokshyna","title":"RT wavelet range"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html","text":"Baseline resolver \u00b6 Description \u00b6 Feature detection \u2192 Chromatogram resolving \u2192 Baseline resolver A very simple method that can be used to demonstrate the functionality of chromatogram resolving. First, the algorithm removes the lowest part of the chromatogram below a Baseline level specified by the user. Remaining peaks above the baseline level are recognized if they fulfill the height and duration requirements. Parameters \u00b6 Suffix \u00b6 This string is added to feature list name as suffix Original feature list \u00b6 Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing \u00b6 Set MS/MS scan pairing parameters. For more details see MS2 scan pairing Min peak height \u00b6 Minimum acceptable feature height (absolute intensity) Peak duration range \u00b6 Range of acceptable feature durations Baseline level \u00b6 Level below which all data points of the chromatogram are removed (absolute intensity) Min # of data points \u00b6 Minimum number of data points on a feature Olena Mokshyna","title":"Baseline resolver"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#baseline-resolver","text":"","title":"Baseline resolver"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#description","text":"Feature detection \u2192 Chromatogram resolving \u2192 Baseline resolver A very simple method that can be used to demonstrate the functionality of chromatogram resolving. First, the algorithm removes the lowest part of the chromatogram below a Baseline level specified by the user. Remaining peaks above the baseline level are recognized if they fulfill the height and duration requirements.","title":"Description"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#suffix","text":"This string is added to feature list name as suffix","title":"Suffix"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#original-feature-list","text":"Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution.","title":"Original feature list"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#msms-scan-pairing","text":"Set MS/MS scan pairing parameters. For more details see MS2 scan pairing","title":"MS/MS scan pairing"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#min-peak-height","text":"Minimum acceptable feature height (absolute intensity)","title":"Min peak height"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#peak-duration-range","text":"Range of acceptable feature durations","title":"Peak duration range"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#baseline-level","text":"Level below which all data points of the chromatogram are removed (absolute intensity)","title":"Baseline level"},{"location":"module_docs/featdet_resolver_baseline/baseline-resolver.html#min-of-data-points","text":"Minimum number of data points on a feature Olena Mokshyna","title":"Min # of data points"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html","text":"CentWave Resolver \u00b6 Description \u00b6 Feature detection \u2192 Chromatogram resolving \u2192 CentWave resolver This method uses wavelets (from xcms library ) to detect features within a chromatogram. A series of wavelets of different scales is convolved within the chromatogram. Local maxima in the convolution results determine the locations of possible peaks. When these candidate feature locations co-occur at multiple scales then the scale with the strongest response indicates peak width . Given the candidate feature locations and scales, features can then be reconstructed from the original chromatogram. Full details of the algorithm are published in Tautenhahn et al. [1] . Requirements \u00b6 The Wavelets detector employs Bioconductor's XCMS package for R [2] . Therefore, you must have R v2.15 or later installed. To install the XCMS package, run R and issue the following commands: source(\"http://bioconductor.org/biocLite.R\") biocLite(\"xcms\") To run R from MZmine the Rserve package [3] must be installed in R, so also run the following R command: install.packages(\"Rserve\") References \u00b6 Ralf Tautenhahn, Christoph B\u00f6ttcher, and Steffen Neumann \"Highly sensitive feature detection for high resolution LC/MS\" BMC Bioinformatics 2008, 9:504 Bioconductor XCMS \"LC/MS and GC/MS Data Analysis\" http://www.bioconductor.org/packages/release/bioc/html/xcms.html. Rserve \"A TCP/IP server which allows other programs to use facilities of R\" https://rforge.net/Rserve/. Parameters \u00b6 Suffix \u00b6 This string is added to feature list name as suffix Original feature list Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing \u00b6 Set MS/MS scan pairing parameters. For more details see MS2 scan pairing S/N Threshold \u00b6 Features with a signal-to-noise ratio less than the threshold will be rejected. The S:N ratio is defined as \\[(max - baseline) / sd\\] where max is the maximum feature intensity, baseline is the estimated baseline value, and sd is the standard deviation of local chromatographic noise. Peak duration range \u00b6 The acceptable range of feature widths. Features with widths outside this range will be rejected. Peak integration method \u00b6 Type of data used during feature reconstruction. When reconstructing a feature from the chromatogram, gradient descent is used. This can be performed on the raw peak data or a smoothed version of it. Smoothed data is obtained through mexican hat filtering. Using the unfiltered data is more accurate but can be susceptible to noise. The smooth data provide less exact results but are more robust in the presence of noise. R engine \u00b6 The R engine to be used for communicating with R. RServe might provide you with better performance. Min # of data points \u00b6 Minimum number of data points on a feature. Olena Mokshyna","title":"CentWave resolver"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#centwave-resolver","text":"","title":"CentWave Resolver"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#description","text":"Feature detection \u2192 Chromatogram resolving \u2192 CentWave resolver This method uses wavelets (from xcms library ) to detect features within a chromatogram. A series of wavelets of different scales is convolved within the chromatogram. Local maxima in the convolution results determine the locations of possible peaks. When these candidate feature locations co-occur at multiple scales then the scale with the strongest response indicates peak width . Given the candidate feature locations and scales, features can then be reconstructed from the original chromatogram. Full details of the algorithm are published in Tautenhahn et al. [1] .","title":"Description"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#requirements","text":"The Wavelets detector employs Bioconductor's XCMS package for R [2] . Therefore, you must have R v2.15 or later installed. To install the XCMS package, run R and issue the following commands: source(\"http://bioconductor.org/biocLite.R\") biocLite(\"xcms\") To run R from MZmine the Rserve package [3] must be installed in R, so also run the following R command: install.packages(\"Rserve\")","title":"Requirements"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#references","text":"Ralf Tautenhahn, Christoph B\u00f6ttcher, and Steffen Neumann \"Highly sensitive feature detection for high resolution LC/MS\" BMC Bioinformatics 2008, 9:504 Bioconductor XCMS \"LC/MS and GC/MS Data Analysis\" http://www.bioconductor.org/packages/release/bioc/html/xcms.html. Rserve \"A TCP/IP server which allows other programs to use facilities of R\" https://rforge.net/Rserve/.","title":"References"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#suffix","text":"This string is added to feature list name as suffix Original feature list Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution.","title":"Suffix"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#msms-scan-pairing","text":"Set MS/MS scan pairing parameters. For more details see MS2 scan pairing","title":"MS/MS scan pairing"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#sn-threshold","text":"Features with a signal-to-noise ratio less than the threshold will be rejected. The S:N ratio is defined as \\[(max - baseline) / sd\\] where max is the maximum feature intensity, baseline is the estimated baseline value, and sd is the standard deviation of local chromatographic noise.","title":"S/N Threshold"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#peak-duration-range","text":"The acceptable range of feature widths. Features with widths outside this range will be rejected.","title":"Peak duration range"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#peak-integration-method","text":"Type of data used during feature reconstruction. When reconstructing a feature from the chromatogram, gradient descent is used. This can be performed on the raw peak data or a smoothed version of it. Smoothed data is obtained through mexican hat filtering. Using the unfiltered data is more accurate but can be susceptible to noise. The smooth data provide less exact results but are more robust in the presence of noise.","title":"Peak integration method"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#r-engine","text":"The R engine to be used for communicating with R. RServe might provide you with better performance.","title":"R engine"},{"location":"module_docs/featdet_resolver_centwave/centwave-resolver.html#min-of-data-points","text":"Minimum number of data points on a feature. Olena Mokshyna","title":"Min # of data points"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html","text":"Local Minimum Resolver \u00b6 Description \u00b6 Feature detection \u2192 Chromatogram resolving \u2192 Local minimum resolver During the EICs building, overlapping and partially co-eluting features are retained as single features in the feature list (see, for example, ADAP chromatogram builder ). As a local minimum in the EIC trace might correspond to the valley between two adjacent, partially-resolved peaks, the Local minimum resolver (LMR) utilizes such minima to split \"shoulder\" LC peaks into individual features ( i.e. chromatographic resolving ). The algorithm examines all the data points in the EIC trace starting from the earliest RT. A scan window is set (see Minimum search range RT/Mobility parameter) and centered around the examined data point. A data point is considered a local minimum if it is the lowest intense point within the scan window. When a local minumum is found, a set of user-defined intensity and feature duration requirements is checked. If they are fulfilled, the original overlapping peaks are split into new, distinct features. The LMR is particularly suitable for LC-MS data with little noise and nice peak shapes. With the implementation of ion mobility (IM) support in MZmine 3, this module was expanded and can now be applied over both the RT and IM dimensions (see Resolving the ion mobility dimension ). Resolving the ion mobility dimension \u00b6 This same module can be used to resolve features co-eluting in the RT dimension, based on their ion mobility. The same concepts apply as in the resolution of the RT dimension. However, mobilograms are examined instead of EIC traces and the same settings used for the RT dimension might not be optimal when resolving IM data. In particular, the following aspects should be born in mind: While frame scans are examined over the RT dimension, mobility scans are considered over the IM dimension. As explained here , frame scans are essentially obtained by merging the mobility scans acquired over an IM accumulation. Therefore, it might be necessary to adjust parameters like Minimum absolute height or Min ratio of peak top/edge to account for the lower signal intensity of mobility scans . Mobilograms are recalculated from raw data, even though a smoothing step was previously applied. Non-smoothed mobiligrams tend to be more jagged than regular EIC traces (see Figure). Therefore, some parameters ( e.g. Min search range and Min ratio of peak top/edge ) should be adjusted accordingly. Mobilograms contain fewer scans ( e.g. \u2248400-1000 per frame , depending on instrument type and acquisition settings), compared to regular EICs ( e.g. \u22484500 scans for 15 minutes LC run and scan rate of 0.2 seconds). Therefore, a lower chromatographic threshold ( e.g. 80%) is recommended to avoid relevant data points in the mobilogram being discarded. On the other hand, a single feature in the IM dimension is normally made up of more data points than regular LC peaks, due to the different timescale the IM separation is performed on (see here for more details). Therefore, a higher Min # of data points can be set when resolving the ion mobility dimension to filter out noisy features. Different vendors use different units of mobility. For instance, TIMS express ions' mobility as Vs/cm 2 , whereas time dispersive IM devices (DTIMS and TWIMS) use the ions' drift time (expressed in milliseconds). TIMS values are numerically smaller than DTIMS or TWIMS; therefore, the minimum search range parameter should be adjusted accordingly. Parameters \u00b6 Suffix \u00b6 String added as suffix to when creating the new feature list(s). Original feature list \u00b6 Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing \u00b6 Pair MS/MS fragmentation spectra collected in DDA mode to the resolved features. This is optional at this stage as the same can be done later in the pipeline using a separate module . See MS2 scan pairing documentation for more details. Dimension \u00b6 Dimension to be resolved. Select Retention time or Mobility to run the module over the RT or IM dimension, respectively. Chromatographic threshold \u00b6 Percentage of data points in the EIC removed before local minima search. This represents an important filter for noisy chromatogram and significantly reduces the precessing time. The algorithm finds the intensity value (threshold) that leaves the specified percentage of data points in the EIC trace below the given value. All such data points are removed. For example, a Chromatographic threshold = 50% will discard the lowest-intense 50% data points in the EIC trace. It must be noted that the algorithm examines the EICs throughout the entire RT range ( i.e. also the zero data points are considered). Therefore, we recommend to set this value rather high ( e.g. 90-95%) and lower it only if needed. When resolving the ion mobility dimension , we recommend to lower this settings to no more than 80% since mobilograms contains less data points than regular LC traces. Minimum search range RT/Mobility (absolute) \u00b6 Size of the RT, or mobility, window examined for local minimum search. An overly narrow search range can cause peak edges to be cut off, whereas a too wide search ranges might lead to an incomplete resolution of narrowly eluting peaks (see example below). A shorter Minimum search range is generally needed when resolving the ion mobility dimension . Minimum relative height \u00b6 Minimum relative intensity (with respect to the highest data point in the EIC) a peak needs to reach to be retained as a feature. This parameter can be used in combination with the Minimum absolute height setting as to filter the resolved features to be retained. Many users prefer to rely only on the Minimum absolute height as it is more straightforward to set. To do so, set the Minimum relative height = 0 and the parameter will be ignored. Modern mass spectrometers provide linear dynamic ranges up to 5 orders of magnitude. If we take an Orbitrap device with a detector saturation around 1.0E10 intensity, a Minimum relative height = 0.001 would correspond to a 1.0E5 minimum intensity. Minimum absolute height \u00b6 Minimum absolute intensity a peak needs to reach to be retained as a feature. This parameter is very similar to the Min highest intensity settings in the ADAP chromatogram builder module and the same concepts apply. When resolving the RT dimension, the same value used as Min highest intensity in the EICs building can normally be used here. While frame scans are examined over the RT dimension, mobility scans are examined over the IM dimension. Therefore, this parameter might need to be adjested accordingly when resolving the ion mobility dimension . Min ratio of peak top/edge \u00b6 Minimum ratio between the intensity of the highest (apex) and side (left and right 'edges') points of a peak, to retain it as a feature. The peak edges have to be X times less intense than the peak apex for the feature to be retained. The purpose of this parameter is to reduce the detection of false local minima when the examined trace (EIC or mobilogram ) is not smooth. In general, this mainly affects low intensity and not-baseline-resolved signals This parameter can best be optimized using the Show preview option. We recommend values between 1.7 (not baseline separated) and 2 to start the optimisation. Peak duration range (min/mobility) \u00b6 Range of acceptable peak length expressed in minutes (RT dimension) or absolute units (mobility dimension). This parameter can be used to filter out noisy features based on their overly short (or long) duration. Min # of data points \u00b6 Minimum number of data points a resolved peak needs to have to be considered valid and retained as a feature. This parameter can be used along with the Peak duration range setting as peak duration constraint to filter out noisy features. This parameter is very similar to the Min group size in # of scans settings in the ADAP chromatogram builder module and the same value can normally be used here (usually, no less than 4-5). A feature in the IM dimension is normally made up of more data points than regular LC peaks. Therefore, a higher Min # of data points can be set when resolving the ion mobility dimension to filter out noisy features. Show preview \u00b6 By checking this box, an interactive visualization panel will open to help the user to adjust the algorithm parameters. Two EIC traces can be displayed simultaneously in two sub-panels to assess the impact of chosen settings on both \"good\" and \"noisy\" EIC traces. The feature list and EIC traces to display can be selected from the corresponding drop-down menus. A noisy EIC can generally be found by sorting the feature table by decreasing area, or by looking at the height/area ratio provided for each feature in the top sub-panel (noisy EIC tend to have low height/area ratios). We recommend optimising the parameters on good EICs and checking the results of these parameters with a noisy EIC. Olena Mokshyna (66.93%), SteffenHeu (14.17%), tdamiani (18.9%)","title":"Local minimum resolver"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#local-minimum-resolver","text":"","title":"Local Minimum Resolver"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#description","text":"Feature detection \u2192 Chromatogram resolving \u2192 Local minimum resolver During the EICs building, overlapping and partially co-eluting features are retained as single features in the feature list (see, for example, ADAP chromatogram builder ). As a local minimum in the EIC trace might correspond to the valley between two adjacent, partially-resolved peaks, the Local minimum resolver (LMR) utilizes such minima to split \"shoulder\" LC peaks into individual features ( i.e. chromatographic resolving ). The algorithm examines all the data points in the EIC trace starting from the earliest RT. A scan window is set (see Minimum search range RT/Mobility parameter) and centered around the examined data point. A data point is considered a local minimum if it is the lowest intense point within the scan window. When a local minumum is found, a set of user-defined intensity and feature duration requirements is checked. If they are fulfilled, the original overlapping peaks are split into new, distinct features. The LMR is particularly suitable for LC-MS data with little noise and nice peak shapes. With the implementation of ion mobility (IM) support in MZmine 3, this module was expanded and can now be applied over both the RT and IM dimensions (see Resolving the ion mobility dimension ).","title":"Description"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#resolving-the-ion-mobility-dimension","text":"This same module can be used to resolve features co-eluting in the RT dimension, based on their ion mobility. The same concepts apply as in the resolution of the RT dimension. However, mobilograms are examined instead of EIC traces and the same settings used for the RT dimension might not be optimal when resolving IM data. In particular, the following aspects should be born in mind: While frame scans are examined over the RT dimension, mobility scans are considered over the IM dimension. As explained here , frame scans are essentially obtained by merging the mobility scans acquired over an IM accumulation. Therefore, it might be necessary to adjust parameters like Minimum absolute height or Min ratio of peak top/edge to account for the lower signal intensity of mobility scans . Mobilograms are recalculated from raw data, even though a smoothing step was previously applied. Non-smoothed mobiligrams tend to be more jagged than regular EIC traces (see Figure). Therefore, some parameters ( e.g. Min search range and Min ratio of peak top/edge ) should be adjusted accordingly. Mobilograms contain fewer scans ( e.g. \u2248400-1000 per frame , depending on instrument type and acquisition settings), compared to regular EICs ( e.g. \u22484500 scans for 15 minutes LC run and scan rate of 0.2 seconds). Therefore, a lower chromatographic threshold ( e.g. 80%) is recommended to avoid relevant data points in the mobilogram being discarded. On the other hand, a single feature in the IM dimension is normally made up of more data points than regular LC peaks, due to the different timescale the IM separation is performed on (see here for more details). Therefore, a higher Min # of data points can be set when resolving the ion mobility dimension to filter out noisy features. Different vendors use different units of mobility. For instance, TIMS express ions' mobility as Vs/cm 2 , whereas time dispersive IM devices (DTIMS and TWIMS) use the ions' drift time (expressed in milliseconds). TIMS values are numerically smaller than DTIMS or TWIMS; therefore, the minimum search range parameter should be adjusted accordingly.","title":"Resolving the ion mobility dimension"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#suffix","text":"String added as suffix to when creating the new feature list(s).","title":"Suffix"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#original-feature-list","text":"Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution.","title":"Original feature list"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#msms-scan-pairing","text":"Pair MS/MS fragmentation spectra collected in DDA mode to the resolved features. This is optional at this stage as the same can be done later in the pipeline using a separate module . See MS2 scan pairing documentation for more details.","title":"MS/MS scan pairing"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#dimension","text":"Dimension to be resolved. Select Retention time or Mobility to run the module over the RT or IM dimension, respectively.","title":"Dimension"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#chromatographic-threshold","text":"Percentage of data points in the EIC removed before local minima search. This represents an important filter for noisy chromatogram and significantly reduces the precessing time. The algorithm finds the intensity value (threshold) that leaves the specified percentage of data points in the EIC trace below the given value. All such data points are removed. For example, a Chromatographic threshold = 50% will discard the lowest-intense 50% data points in the EIC trace. It must be noted that the algorithm examines the EICs throughout the entire RT range ( i.e. also the zero data points are considered). Therefore, we recommend to set this value rather high ( e.g. 90-95%) and lower it only if needed. When resolving the ion mobility dimension , we recommend to lower this settings to no more than 80% since mobilograms contains less data points than regular LC traces.","title":"Chromatographic threshold"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#minimum-search-range-rtmobility-absolute","text":"Size of the RT, or mobility, window examined for local minimum search. An overly narrow search range can cause peak edges to be cut off, whereas a too wide search ranges might lead to an incomplete resolution of narrowly eluting peaks (see example below). A shorter Minimum search range is generally needed when resolving the ion mobility dimension .","title":"Minimum search range RT/Mobility (absolute)"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#minimum-relative-height","text":"Minimum relative intensity (with respect to the highest data point in the EIC) a peak needs to reach to be retained as a feature. This parameter can be used in combination with the Minimum absolute height setting as to filter the resolved features to be retained. Many users prefer to rely only on the Minimum absolute height as it is more straightforward to set. To do so, set the Minimum relative height = 0 and the parameter will be ignored. Modern mass spectrometers provide linear dynamic ranges up to 5 orders of magnitude. If we take an Orbitrap device with a detector saturation around 1.0E10 intensity, a Minimum relative height = 0.001 would correspond to a 1.0E5 minimum intensity.","title":"Minimum relative height"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#minimum-absolute-height","text":"Minimum absolute intensity a peak needs to reach to be retained as a feature. This parameter is very similar to the Min highest intensity settings in the ADAP chromatogram builder module and the same concepts apply. When resolving the RT dimension, the same value used as Min highest intensity in the EICs building can normally be used here. While frame scans are examined over the RT dimension, mobility scans are examined over the IM dimension. Therefore, this parameter might need to be adjested accordingly when resolving the ion mobility dimension .","title":"Minimum absolute height"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#min-ratio-of-peak-topedge","text":"Minimum ratio between the intensity of the highest (apex) and side (left and right 'edges') points of a peak, to retain it as a feature. The peak edges have to be X times less intense than the peak apex for the feature to be retained. The purpose of this parameter is to reduce the detection of false local minima when the examined trace (EIC or mobilogram ) is not smooth. In general, this mainly affects low intensity and not-baseline-resolved signals This parameter can best be optimized using the Show preview option. We recommend values between 1.7 (not baseline separated) and 2 to start the optimisation.","title":"Min ratio of peak top/edge"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#peak-duration-range-minmobility","text":"Range of acceptable peak length expressed in minutes (RT dimension) or absolute units (mobility dimension). This parameter can be used to filter out noisy features based on their overly short (or long) duration.","title":"Peak duration range (min/mobility)"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#min-of-data-points","text":"Minimum number of data points a resolved peak needs to have to be considered valid and retained as a feature. This parameter can be used along with the Peak duration range setting as peak duration constraint to filter out noisy features. This parameter is very similar to the Min group size in # of scans settings in the ADAP chromatogram builder module and the same value can normally be used here (usually, no less than 4-5). A feature in the IM dimension is normally made up of more data points than regular LC peaks. Therefore, a higher Min # of data points can be set when resolving the ion mobility dimension to filter out noisy features.","title":"Min # of data points"},{"location":"module_docs/featdet_resolver_local_minimum/local-minimum-resolver.html#show-preview","text":"By checking this box, an interactive visualization panel will open to help the user to adjust the algorithm parameters. Two EIC traces can be displayed simultaneously in two sub-panels to assess the impact of chosen settings on both \"good\" and \"noisy\" EIC traces. The feature list and EIC traces to display can be selected from the corresponding drop-down menus. A noisy EIC can generally be found by sorting the feature table by decreasing area, or by looking at the height/area ratio provided for each feature in the top sub-panel (noisy EIC tend to have low height/area ratios). We recommend optimising the parameters on good EICs and checking the results of these parameters with a noisy EIC. Olena Mokshyna (66.93%), SteffenHeu (14.17%), tdamiani (18.9%)","title":"Show preview"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html","text":"Noise amplitude resolver \u00b6 Description \u00b6 Feature detection \u2192 Chromatogram resolving \u2192 Noise amplitude resolver This method is suitable for chromatograms with significant background noise of varying intensities. It works in a similar way to the Baseline cut-off method, but sets the baseline level individually for each chromatogram, depending on the amplitude of signal noise. The baseline level is calculated as follows: The intensity range of the chromatogram is divided into bins of the user-specified size (the Noise amplitude parameter) The bin with the highest number of data points is found. This bin represents the intensity level of the noise signal. The baseline level is set to the intensity of the bin with the most data points Parameters \u00b6 Suffix This string is added to feature list name as suffix Original feature list \u00b6 Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing \u00b6 Set MS/MS scan pairing parameters. For more details see MS2 scan pairing Min peak height \u00b6 Minimum acceptable height (intensity) for a feature Peak duration range \u00b6 Range of acceptable feature durations Amplitude of noise \u00b6 This value is the intensity amplitude of the signal in the noise region Min # of data points \u00b6 Minimum number of data points on a feature. Olena Mokshyna","title":"Noise amplitude resolver"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#noise-amplitude-resolver","text":"","title":"Noise amplitude resolver"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#description","text":"Feature detection \u2192 Chromatogram resolving \u2192 Noise amplitude resolver This method is suitable for chromatograms with significant background noise of varying intensities. It works in a similar way to the Baseline cut-off method, but sets the baseline level individually for each chromatogram, depending on the amplitude of signal noise. The baseline level is calculated as follows: The intensity range of the chromatogram is divided into bins of the user-specified size (the Noise amplitude parameter) The bin with the highest number of data points is found. This bin represents the intensity level of the noise signal. The baseline level is set to the intensity of the bin with the most data points","title":"Description"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#parameters","text":"Suffix This string is added to feature list name as suffix","title":"Parameters"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#original-feature-list","text":"Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution.","title":"Original feature list"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#msms-scan-pairing","text":"Set MS/MS scan pairing parameters. For more details see MS2 scan pairing","title":"MS/MS scan pairing"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#min-peak-height","text":"Minimum acceptable height (intensity) for a feature","title":"Min peak height"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#peak-duration-range","text":"Range of acceptable feature durations","title":"Peak duration range"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#amplitude-of-noise","text":"This value is the intensity amplitude of the signal in the noise region","title":"Amplitude of noise"},{"location":"module_docs/featdet_resolver_noise_ampl/noise-ampl-resolver.html#min-of-data-points","text":"Minimum number of data points on a feature. Olena Mokshyna","title":"Min # of data points"},{"location":"module_docs/featdet_resolver_savitzky-golay/savitzky-golay-resolver.html","text":"Savitzky-Golay resolver \u00b6 Description \u00b6 Feature detection \u2192 Chromatogram resolving \u2192 Savitzky Golay resolver This method uses the Savitzky-Golay polynomial [1] to calculate the smoothed second-derivative of the chromatogram's intensities. The following figure (left) presents the shape of a) a Gaussian peak, b) the first derivative, and c) the second derivative. The figure on the right side shows how the signal (blue line) may be divided into individual chromatographic peaks by observing the second derivative. References \u00b6 A. Savitzky and M. J. E. Golay, Anal. Chem., 36, 1627 (1964). DOI: 10.1021/ac60214a047 Parameters \u00b6 Suffix This string is added to feature list name as suffix Original feature list Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing Set MS/MS scan pairing parameters. For more details see MS2 scan pairing Min peak height Minimum acceptable feature height (absolute intensity) Peak duration range Range of acceptable feature durations Derivative threshold level Minimum acceptable intensity in the second derivative for feature recognition Min # of data points Minimum number of data points on a feature. Olena Mokshyna","title":"Savitzky-Golay resolver"},{"location":"module_docs/featdet_resolver_savitzky-golay/savitzky-golay-resolver.html#savitzky-golay-resolver","text":"","title":"Savitzky-Golay resolver"},{"location":"module_docs/featdet_resolver_savitzky-golay/savitzky-golay-resolver.html#description","text":"Feature detection \u2192 Chromatogram resolving \u2192 Savitzky Golay resolver This method uses the Savitzky-Golay polynomial [1] to calculate the smoothed second-derivative of the chromatogram's intensities. The following figure (left) presents the shape of a) a Gaussian peak, b) the first derivative, and c) the second derivative. The figure on the right side shows how the signal (blue line) may be divided into individual chromatographic peaks by observing the second derivative.","title":"Description"},{"location":"module_docs/featdet_resolver_savitzky-golay/savitzky-golay-resolver.html#references","text":"A. Savitzky and M. J. E. Golay, Anal. Chem., 36, 1627 (1964). DOI: 10.1021/ac60214a047","title":"References"},{"location":"module_docs/featdet_resolver_savitzky-golay/savitzky-golay-resolver.html#parameters","text":"Suffix This string is added to feature list name as suffix Original feature list Defines the processing. Standard is to KEEP the original feature list and create a new processed list. REMOVE saves memory. PROCESS IN PLACE is an advanced option to process directly in the feature list and reduce memory consumption more - this might come with side effects, apply with caution. MS/MS scan pairing Set MS/MS scan pairing parameters. For more details see MS2 scan pairing Min peak height Minimum acceptable feature height (absolute intensity) Peak duration range Range of acceptable feature durations Derivative threshold level Minimum acceptable intensity in the second derivative for feature recognition Min # of data points Minimum number of data points on a feature. Olena Mokshyna","title":"Parameters"},{"location":"module_docs/featdet_smoothing/smoothing.html","text":"Smoothing \u00b6 Description \u00b6 This module should be used after feature detection step is performed. Feature detection \u2192 Smoothing Smoothing is an optional feature that is used depending on the noisiness of the data. Smoothing allows to approximate a peak shape to the \"ideal\" shape defined by the target function of the used algorithm. In MZmine 3, two algorithms can be used for smoothing: Savitzky-Golay, and Loess smoothing. Savitzky-Golay smoothing \u00b6 This smoothing method is also implemented in Raw data methods \u2192 Raw data filtering \u2192 Scan by scan filtering . Its brief description is available in that section . For more details see [ 1 ]. The benefit of Savitzky\u2013Golay is its efficiency. Due to a fixed user-defined window size and equal spacing, the weights are also fixed. As a result, the local fit need be solved only once. Loess smoothing \u00b6 LOESS (locally weighted smoothing) or LOWESS (Locally Weighted Scatterplot Smoothing) is a non-parametric method that relies only on a smoothing parameter value and the degree of polynomial without a predefined function. Each polynomial is fitted locally depending on the defined bandwidth. More details on LOESS smoothing can be found in [ 2 ]. Can be slightly slower than the Savitzky-Golay algorithm (due to the repeated local fitting) but also a bit more precise. References \u00b6 A. Savitzky and M. J. E. Golay, Anal. Chem., 36, 1627 (1964). DOI: 10.1021/ac60214a047 William S. Cleveland & Susan J. Devlin (1988) Locally Weighted Regression: An Approach to Regression Analysis by Local Fitting, Journal of the American Statistical Association, 83:403, 596-610, DOI: 10.1080/01621459.1988.10478639 Parameters \u00b6 Feature lists \u00b6 Feature lists that the module will take as an input. Smoothing algorithm \u00b6 Choose if Savitzky-Golay or LOESS smoothing will be used. Savitzky-Golay additional parameters \u00b6 Retention time smoothing Number of data point to smooth in retention time dimension. Defines window size and coefficients used in smoothing. Mobility smoothing Number of data point to smooth in mobility dimension. LOESS additional parameters \u00b6 Retention time width (scans) Number of scans to smooth in retention time dimension. Used to calculate a fraction of source points, which is subsequently used to calculate LOESS \"bandwidth\". \"Bandwidth or \"smoothing parameter\" determines how much of the data is used to fit each local polynomial. Higher values of smoothing parameter lead to the smoother output but simultaneously to a larger loss of information. Mobility width (scans) Number of data point to smooth in mobility dimension. The points about previous parameter apply here as well. Optimizing smoothing parameters using the preview \u00b6 Retention time dimension \u00b6 Smoothing chromatograms is optional. The necessity of smoothing in RT dimension is determined by the noisiness of chromatographic peaks. These can be influenced by the overall spray stability, instrument accumulation times, transfer efficiency and many more. The number of data points to be smoothed in rt dimension can be set at [1] (see image below). Note that the correct preview dimension is selected at [2] (see image below). For large batch modes, the Remove original feature list parameter should be selected. While parameters are being optimised, this is not recommended, because removing a feature list cannot be undone. Mobility dimension \u00b6 After resolving a feature in RT dimension, the mobilograms will be recalculated from the raw data (the resolved ion mobility trace). Therefore, a smoothing step is necessary if the data requires it. The smoothing dialog is opened via Feature detection \u2192 Smoothing Select to smooth the mobility dimension [1] and select it as preview dimension [2]. The filter with depends on the number of spectra acquired in the observed mobility range. Usually, a value between 5 and 15 should be appropriate. Olena Mokshyna (88.04%), SteffenHeu (11.96%)","title":"Smoothing"},{"location":"module_docs/featdet_smoothing/smoothing.html#smoothing","text":"","title":"Smoothing"},{"location":"module_docs/featdet_smoothing/smoothing.html#description","text":"This module should be used after feature detection step is performed. Feature detection \u2192 Smoothing Smoothing is an optional feature that is used depending on the noisiness of the data. Smoothing allows to approximate a peak shape to the \"ideal\" shape defined by the target function of the used algorithm. In MZmine 3, two algorithms can be used for smoothing: Savitzky-Golay, and Loess smoothing.","title":"Description"},{"location":"module_docs/featdet_smoothing/smoothing.html#savitzky-golay-smoothing","text":"This smoothing method is also implemented in Raw data methods \u2192 Raw data filtering \u2192 Scan by scan filtering . Its brief description is available in that section . For more details see [ 1 ]. The benefit of Savitzky\u2013Golay is its efficiency. Due to a fixed user-defined window size and equal spacing, the weights are also fixed. As a result, the local fit need be solved only once.","title":"Savitzky-Golay smoothing"},{"location":"module_docs/featdet_smoothing/smoothing.html#loess-smoothing","text":"LOESS (locally weighted smoothing) or LOWESS (Locally Weighted Scatterplot Smoothing) is a non-parametric method that relies only on a smoothing parameter value and the degree of polynomial without a predefined function. Each polynomial is fitted locally depending on the defined bandwidth. More details on LOESS smoothing can be found in [ 2 ]. Can be slightly slower than the Savitzky-Golay algorithm (due to the repeated local fitting) but also a bit more precise.","title":"Loess smoothing"},{"location":"module_docs/featdet_smoothing/smoothing.html#references","text":"A. Savitzky and M. J. E. Golay, Anal. Chem., 36, 1627 (1964). DOI: 10.1021/ac60214a047 William S. Cleveland & Susan J. Devlin (1988) Locally Weighted Regression: An Approach to Regression Analysis by Local Fitting, Journal of the American Statistical Association, 83:403, 596-610, DOI: 10.1080/01621459.1988.10478639","title":"References"},{"location":"module_docs/featdet_smoothing/smoothing.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/featdet_smoothing/smoothing.html#feature-lists","text":"Feature lists that the module will take as an input.","title":"Feature lists"},{"location":"module_docs/featdet_smoothing/smoothing.html#smoothing-algorithm","text":"Choose if Savitzky-Golay or LOESS smoothing will be used.","title":"Smoothing algorithm"},{"location":"module_docs/featdet_smoothing/smoothing.html#savitzky-golay-additional-parameters","text":"Retention time smoothing Number of data point to smooth in retention time dimension. Defines window size and coefficients used in smoothing. Mobility smoothing Number of data point to smooth in mobility dimension.","title":"Savitzky-Golay additional parameters"},{"location":"module_docs/featdet_smoothing/smoothing.html#loess-additional-parameters","text":"Retention time width (scans) Number of scans to smooth in retention time dimension. Used to calculate a fraction of source points, which is subsequently used to calculate LOESS \"bandwidth\". \"Bandwidth or \"smoothing parameter\" determines how much of the data is used to fit each local polynomial. Higher values of smoothing parameter lead to the smoother output but simultaneously to a larger loss of information. Mobility width (scans) Number of data point to smooth in mobility dimension. The points about previous parameter apply here as well.","title":"LOESS additional parameters"},{"location":"module_docs/featdet_smoothing/smoothing.html#optimizing-smoothing-parameters-using-the-preview","text":"","title":"Optimizing smoothing parameters using the preview"},{"location":"module_docs/featdet_smoothing/smoothing.html#retention-time-dimension","text":"Smoothing chromatograms is optional. The necessity of smoothing in RT dimension is determined by the noisiness of chromatographic peaks. These can be influenced by the overall spray stability, instrument accumulation times, transfer efficiency and many more. The number of data points to be smoothed in rt dimension can be set at [1] (see image below). Note that the correct preview dimension is selected at [2] (see image below). For large batch modes, the Remove original feature list parameter should be selected. While parameters are being optimised, this is not recommended, because removing a feature list cannot be undone.","title":"Retention time dimension"},{"location":"module_docs/featdet_smoothing/smoothing.html#mobility-dimension","text":"After resolving a feature in RT dimension, the mobilograms will be recalculated from the raw data (the resolved ion mobility trace). Therefore, a smoothing step is necessary if the data requires it. The smoothing dialog is opened via Feature detection \u2192 Smoothing Select to smooth the mobility dimension [1] and select it as preview dimension [2]. The filter with depends on the number of spectra acquired in the observed mobility range. Usually, a value between 5 and 15 should be appropriate. Olena Mokshyna (88.04%), SteffenHeu (11.96%)","title":"Mobility dimension"},{"location":"module_docs/feature_filter/feature_filter.html","text":"Feature filter \u00b6 Description \u00b6 Feature list methods \u2192 Feature list filtering \u2192 Feature filter This module deletes features in a selected feature list that do not meet the requirements defined by the user. The filter is performed separately on each raw data file in the peak list. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to feature list name. Duration \u00b6 Peaks with a duration outside the entered range will be removed. Area \u00b6 Peaks with an area outside the entered range will be removed. Height \u00b6 Peaks with a height outside the entered range will be removed. # data points \u00b6 Peaks with fewer data points than the entered range will be removed. FWHM \u00b6 Peaks with a FWHM outside the entered range will be removed. Tailing factor \u00b6 Peaks with a tailing factor outside the entered range will be removed. Asymmetry factor \u00b6 Peaks with an asymmetry factor outside the entered range will be removed. Keep only features with MS/MS scans \u00b6 Peaks without any MS/MS scans will be removed. Remove source feature list after filtering \u00b6 If the checkbox is selected, the source feature list will be removed, and the filtered version will remain. Olena Mokshyna","title":"Feature filter"},{"location":"module_docs/feature_filter/feature_filter.html#feature-filter","text":"","title":"Feature filter"},{"location":"module_docs/feature_filter/feature_filter.html#description","text":"Feature list methods \u2192 Feature list filtering \u2192 Feature filter This module deletes features in a selected feature list that do not meet the requirements defined by the user. The filter is performed separately on each raw data file in the peak list.","title":"Description"},{"location":"module_docs/feature_filter/feature_filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/feature_filter/feature_filter.html#name-suffix","text":"Suffix to be added to feature list name.","title":"Name suffix"},{"location":"module_docs/feature_filter/feature_filter.html#duration","text":"Peaks with a duration outside the entered range will be removed.","title":"Duration"},{"location":"module_docs/feature_filter/feature_filter.html#area","text":"Peaks with an area outside the entered range will be removed.","title":"Area"},{"location":"module_docs/feature_filter/feature_filter.html#height","text":"Peaks with a height outside the entered range will be removed.","title":"Height"},{"location":"module_docs/feature_filter/feature_filter.html#data-points","text":"Peaks with fewer data points than the entered range will be removed.","title":"# data points"},{"location":"module_docs/feature_filter/feature_filter.html#fwhm","text":"Peaks with a FWHM outside the entered range will be removed.","title":"FWHM"},{"location":"module_docs/feature_filter/feature_filter.html#tailing-factor","text":"Peaks with a tailing factor outside the entered range will be removed.","title":"Tailing factor"},{"location":"module_docs/feature_filter/feature_filter.html#asymmetry-factor","text":"Peaks with an asymmetry factor outside the entered range will be removed.","title":"Asymmetry factor"},{"location":"module_docs/feature_filter/feature_filter.html#keep-only-features-with-msms-scans","text":"Peaks without any MS/MS scans will be removed.","title":"Keep only features with MS/MS scans"},{"location":"module_docs/feature_filter/feature_filter.html#remove-source-feature-list-after-filtering","text":"If the checkbox is selected, the source feature list will be removed, and the filtered version will remain. Olena Mokshyna","title":"Remove source feature list after filtering"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html","text":"Feature list rows filter \u00b6 Description \u00b6 Feature list methods \u2192 Feature list filtering \u2192 Feature list rows filter This filter deletes all rows in a selected peak list that do not meet requirements defined by the user. A range of different requirements can be set, such as the minimum number of features in the row, the minimum number of features in an isotope pattern, peak duration etc. When an aligned peak list, i.e. multiple peaks per row, is filtered then the average of each row's peak duration, m/z and retention time values are used to filter the row. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to feature list name. Minimum features in a row (abs or %) \u00b6 Minimum number of features detected in a row required to not remove it. Values < 1 will be interpreted as %. Minimum features in an isotope pattern \u00b6 Minimum number of features in a row's isotope pattern required to not remove it. Validate 13C isotope pattern \u00b6 If ticked, searches for a +1 13C signal (considering possible charge states) within estimated range of carbon atoms. Uses 13C isotope filter . m/z \u00b6 Range of acceptable (average) m/z values in a row required to not remove it. Retention time \u00b6 Range of acceptable (average) retention times in minutes. Features duration range \u00b6 Range of acceptable (average) feature durations in a row required not to remove it. Chromatographic FWHM \u00b6 Range of permissible FWHM in a row required not to remove it. Charge \u00b6 Range of Charge in a row required not to remove it. Please, run isotopic peaks grouper prior to using this. Kendrick mass defect \u00b6 Filter features in a Kendrick mass defect (KMD) range. For more details see Kendrick mass defect . If KMD is used, following parameters can be changed in the setup. Kendrick mass defect Permissible range of a Kendrick mass defect per row Kendrick mass base Enter a sum formula for a Kendrick mass base, e.g. \"CH2\" Shift Enter a shift for shift dependent KMD filtering Charge Enter a charge for charge dependent KMD filtering Divisor Enter a divisor for fractional base unit dependent KMD filtering Use Remainder of Kendrick mass Use Remainder of Kendrick mass (RKM) instead of Kendrick mass defect (KMD) Parameter \u00b6 Paremeter defining the group of each sample. Only identified? \u00b6 If the checkbox is selected, only identified compounds will be retained. Text in identity \u00b6 Only rows that contain this text in their peak identity field will be retained. Text in comment \u00b6 Only rows that contain this text in their comment field will be retained. Keep or remove rows \u00b6 User can select to either keep or remove the rows that match the defined criteria. Feature with MS2 scan \u00b6 If checked, only features that have MS2 scan will be kept. Never remove feature with MS2 \u00b6 If checked, all rows with MS2 are retained without applying any further filters on them. Reset the feature number ID \u00b6 If checked, row IDs will be reset. Mass defect \u00b6 Mass defect as a feature filter can be used for selective detection of compounds of interest, and the values accepted are 0.314-0.5 or 0.90-0.15. Original feature list \u00b6 It can be either processed in place, kept or removed. Olena Mokshyna (63.83%), lalalana5 (36.17%)","title":"Feature list rows filter"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#feature-list-rows-filter","text":"","title":"Feature list rows filter"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#description","text":"Feature list methods \u2192 Feature list filtering \u2192 Feature list rows filter This filter deletes all rows in a selected peak list that do not meet requirements defined by the user. A range of different requirements can be set, such as the minimum number of features in the row, the minimum number of features in an isotope pattern, peak duration etc. When an aligned peak list, i.e. multiple peaks per row, is filtered then the average of each row's peak duration, m/z and retention time values are used to filter the row.","title":"Description"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#name-suffix","text":"Suffix to be added to feature list name.","title":"Name suffix"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#minimum-features-in-a-row-abs-or","text":"Minimum number of features detected in a row required to not remove it. Values < 1 will be interpreted as %.","title":"Minimum features in a row (abs or %)"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#minimum-features-in-an-isotope-pattern","text":"Minimum number of features in a row's isotope pattern required to not remove it.","title":"Minimum features in an isotope pattern"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#validate-13c-isotope-pattern","text":"If ticked, searches for a +1 13C signal (considering possible charge states) within estimated range of carbon atoms. Uses 13C isotope filter .","title":"Validate 13C isotope pattern"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#mz","text":"Range of acceptable (average) m/z values in a row required to not remove it.","title":"m/z"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#retention-time","text":"Range of acceptable (average) retention times in minutes.","title":"Retention time"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#features-duration-range","text":"Range of acceptable (average) feature durations in a row required not to remove it.","title":"Features duration range"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#chromatographic-fwhm","text":"Range of permissible FWHM in a row required not to remove it.","title":"Chromatographic FWHM"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#charge","text":"Range of Charge in a row required not to remove it. Please, run isotopic peaks grouper prior to using this.","title":"Charge"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#kendrick-mass-defect","text":"Filter features in a Kendrick mass defect (KMD) range. For more details see Kendrick mass defect . If KMD is used, following parameters can be changed in the setup. Kendrick mass defect Permissible range of a Kendrick mass defect per row Kendrick mass base Enter a sum formula for a Kendrick mass base, e.g. \"CH2\" Shift Enter a shift for shift dependent KMD filtering Charge Enter a charge for charge dependent KMD filtering Divisor Enter a divisor for fractional base unit dependent KMD filtering Use Remainder of Kendrick mass Use Remainder of Kendrick mass (RKM) instead of Kendrick mass defect (KMD)","title":"Kendrick mass defect"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#parameter","text":"Paremeter defining the group of each sample.","title":"Parameter"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#only-identified","text":"If the checkbox is selected, only identified compounds will be retained.","title":"Only identified?"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#text-in-identity","text":"Only rows that contain this text in their peak identity field will be retained.","title":"Text in identity"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#text-in-comment","text":"Only rows that contain this text in their comment field will be retained.","title":"Text in comment"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#keep-or-remove-rows","text":"User can select to either keep or remove the rows that match the defined criteria.","title":"Keep or remove rows"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#feature-with-ms2-scan","text":"If checked, only features that have MS2 scan will be kept.","title":"Feature with MS2 scan"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#never-remove-feature-with-ms2","text":"If checked, all rows with MS2 are retained without applying any further filters on them.","title":"Never remove feature with MS2"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#reset-the-feature-number-id","text":"If checked, row IDs will be reset.","title":"Reset the feature number ID"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#mass-defect","text":"Mass defect as a feature filter can be used for selective detection of compounds of interest, and the values accepted are 0.314-0.5 or 0.90-0.15.","title":"Mass defect"},{"location":"module_docs/feature_list_row_filter/feature_list_rows_filter.html#original-feature-list","text":"It can be either processed in place, kept or removed. Olena Mokshyna (63.83%), lalalana5 (36.17%)","title":"Original feature list"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html","text":"Kendrick mass defect \u00b6 Difference between the exact Kendrick mass and the nominal Kendrick mass is called Kendrick mass defect . More information on Kendrick mass can be found here . Parameters \u00b6 Kendrick mass defect \u00b6 Set permissible range of Kendrick mass defect per row. Kendrick mass base \u00b6 Enter molecular formula of the repeating unit used as Kendrick mass base (e.g. CH2) Shift \u00b6 Set shift value Charge \u00b6 Set charge value Divisor \u00b6 Set divisor value Use remainder of Kendrick mass \u00b6 Select check box to use RKM instead of KMD Olena Mokshyna (9.09%), lalalana5 (90.91%)","title":"Kendrick mass defect"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#kendrick-mass-defect","text":"Difference between the exact Kendrick mass and the nominal Kendrick mass is called Kendrick mass defect . More information on Kendrick mass can be found here .","title":"Kendrick mass defect"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#kendrick-mass-defect_1","text":"Set permissible range of Kendrick mass defect per row.","title":"Kendrick mass defect"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#kendrick-mass-base","text":"Enter molecular formula of the repeating unit used as Kendrick mass base (e.g. CH2)","title":"Kendrick mass base"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#shift","text":"Set shift value","title":"Shift"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#charge","text":"Set charge value","title":"Charge"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#divisor","text":"Set divisor value","title":"Divisor"},{"location":"module_docs/feature_list_row_filter/kendrick_mass_defect.html#use-remainder-of-kendrick-mass","text":"Select check box to use RKM instead of KMD Olena Mokshyna (9.09%), lalalana5 (90.91%)","title":"Use remainder of Kendrick mass"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html","text":"Feature list blank subtraction \u00b6 Description \u00b6 This module needs aligned feature lists as an input. This aligned feature list should contain features from blank/control. Feature list methods \u2192 Feature list filtering \u2192 Feature list blank subtraction Subtracts the features appearing in (procedural) blank measurements feature list from an aligned feature list. Parameters \u00b6 Minimum # of detection in blanks \u00b6 Specifies in how many of the blank files a peak has to be detected. Fold change increase \u00b6 Specifies a percentage of increase of the intensity of a feature. If the intensity in the list to be filtered increases more than the given percentage to the blank, it will not be deleted from the feature list. Suffix \u00b6 The suffix for the new feature list. Olena Mokshyna","title":"Feature list blank subtraction"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html#feature-list-blank-subtraction","text":"","title":"Feature list blank subtraction"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html#description","text":"This module needs aligned feature lists as an input. This aligned feature list should contain features from blank/control. Feature list methods \u2192 Feature list filtering \u2192 Feature list blank subtraction Subtracts the features appearing in (procedural) blank measurements feature list from an aligned feature list.","title":"Description"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html#minimum-of-detection-in-blanks","text":"Specifies in how many of the blank files a peak has to be detected.","title":"Minimum # of detection in blanks"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html#fold-change-increase","text":"Specifies a percentage of increase of the intensity of a feature. If the intensity in the list to be filtered increases more than the given percentage to the blank, it will not be deleted from the feature list.","title":"Fold change increase"},{"location":"module_docs/filter_blanksubtraction/filter_blanksubtraction.html#suffix","text":"The suffix for the new feature list. Olena Mokshyna","title":"Suffix"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html","text":"Duplicate feature filter \u00b6 Description \u00b6 Feature list method \u2192 Feature list filtering \u2192 Duplicate feature filter . This filter can help eliminate misaligned feature list rows after the gap-filling process. It has three different modes : Old average (the old filter) : Keeps only the feature list row with the maximum average area. Compares rows with the average m/z and RT. New average : Compares rows with the average m/z and RT and creates a consensus row.Two peaks are considered duplicates when their average m/z and retention time differences are lower than the tolerances set by the user. When two (or more) duplicates are found, a consensus row is created with the lowest row ID of all duplicates. For this consensus row, all DETECTED features are favored over ESTIMATED (gap-filled) and ESTIMATED are favored over UNKNOWN. Furthermore, if there are only ESTIMATED features in a raw data file, the highest is chosen. Single feature : Compares rows on a raw data file basis. Marks rows as duplicates if they share one feature within the RT and m/z tolerance in the same raw data file. Creates a consensus row. Parameters \u00b6 Name suffix \u00b6 This is the suffix to identify the new aligned peak list. Filter mode \u00b6 User can choose one of three modes: old average, new average, and single feature. m/z tolerance \u00b6 Maximum m/z difference between duplicate peaks. RT tolerance \u00b6 Maximum retention time difference between duplicate peaks. Require same identification \u00b6 If the checkbox is selected duplicate peaks must have the same identification. Original feature list \u00b6 Can be either processed in place of, kept or replaced. Olena Mokshyna (62.22%), lalalana5 (37.78%)","title":"Duplicate feature filter"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#duplicate-feature-filter","text":"","title":"Duplicate feature filter"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#description","text":"Feature list method \u2192 Feature list filtering \u2192 Duplicate feature filter . This filter can help eliminate misaligned feature list rows after the gap-filling process. It has three different modes : Old average (the old filter) : Keeps only the feature list row with the maximum average area. Compares rows with the average m/z and RT. New average : Compares rows with the average m/z and RT and creates a consensus row.Two peaks are considered duplicates when their average m/z and retention time differences are lower than the tolerances set by the user. When two (or more) duplicates are found, a consensus row is created with the lowest row ID of all duplicates. For this consensus row, all DETECTED features are favored over ESTIMATED (gap-filled) and ESTIMATED are favored over UNKNOWN. Furthermore, if there are only ESTIMATED features in a raw data file, the highest is chosen. Single feature : Compares rows on a raw data file basis. Marks rows as duplicates if they share one feature within the RT and m/z tolerance in the same raw data file. Creates a consensus row.","title":"Description"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#name-suffix","text":"This is the suffix to identify the new aligned peak list.","title":"Name suffix"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#filter-mode","text":"User can choose one of three modes: old average, new average, and single feature.","title":"Filter mode"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#mz-tolerance","text":"Maximum m/z difference between duplicate peaks.","title":"m/z tolerance"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#rt-tolerance","text":"Maximum retention time difference between duplicate peaks.","title":"RT tolerance"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#require-same-identification","text":"If the checkbox is selected duplicate peaks must have the same identification.","title":"Require same identification"},{"location":"module_docs/filter_duplicate_features/duplicate_feature_filter.html#original-feature-list","text":"Can be either processed in place of, kept or replaced. Olena Mokshyna (62.22%), lalalana5 (37.78%)","title":"Original feature list"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html","text":"13 C isotope filter \u00b6 Description \u00b6 Feature list methods \u2192 Isotopes \u2192 13C isotope filter (formerly: isotope grouper) MZmine carries out the feature detection steps of chromatogram building and subsequent resolving considering all the signals stored in the mass lists . As a consequence, signals generated by isotopologues of the same chemical entity (see isotopic pattern ) are detected as distinct features and included in the feature lists , representing redundant information for the downstream data analysis. This issue ordinarily occurs for C-containing molecules, where the 13 C isotope signals can be easily detected ( 13 C/ 12 C \u2248 1.1%). The 13C isotope filter module (formerly called Isotope grouper ) aims at filtering out the features corresponding to the 13 C isotopes of the same analyte. The algorithm consider each feature individually and checks for the presence of potential 13 C-related peak(s) in the feature lists . When an isotope pattern meeting the user-defined tolerances ( e.g. m/z , RT) and requirements ( e.g. monotonic shape ) is found, the information is saved, and only the feature corresponding to the e.g. most intense isotope is retained in the feature list . It must be noted that 13 C peaks are searched within the feature list , and not in the raw data. Parameters \u00b6 Name suffix \u00b6 String added as suffix when creating the new feature list(s). m/z tolerance \u00b6 Maximum allowed difference between the measured and the predicted m/z of the (potential) 13 C isotope to be grouped as isotopologues. The tolerance can be specified as absolute tolerance (in m/z ), relative tolerance (in ppm), or both. When both are specified, the tolerance range is calculated using the maximum between the absolute and relative tolerances. We recommend to set a failry strict m/z tolerance to reduce the risk of discarding false 13 C isotopes. Retention time tolerance \u00b6 Maximum allowed RT difference between the feature and its (potential) 13 C isotope to be grouped as isotopologues. Isotopologues should exhibit identical chromatographic behaviour and thus produce overlapping LC peak shapes. Therefore, a strict RT tolerance can be used to reduce the risk of discarding false 13 C isotopes. Mobility tolerance \u00b6 If enabled and the mobility dimension was recorded, potential 13 C isotopes will be grouped as isotopologues only if their mobility difference is within the defined tolerance. The same principle seen for the RT tolerance apply to the IM dimension. Isotopologues should exhibit identical IM separation; therefore, a strict mobility tolerance can be used to reduce the risk of discarding false 13 C isotopes. Monotonic shape \u00b6 If true, a monotonically decreasing trend of the isotope pattern (typical of the 13 C isotope pattern of small molecules) is required for the filtering. Maximum charge \u00b6 Maximum charge state considered to predict the 13 C isotopes' m/z . If a value > 1 is set, all the cahrge states are evaluated and the one providing the most isotope features detected is used for the filtering. Never remove feature with MS2 \u00b6 If checked, potential 13 C-related features will not be discarded if associated to a MS2 spectrum . Original feature lists \u00b6 Keep or remove the input feature list(s). The PROCESS IN PLACE option directly filter the input feature list and performs better in terms of memory usage; therefore, it is recommended over REMOVE , when available. Olena Mokshyna (24.44%), tdamiani (51.11%), lalalana5 (24.44%)","title":"13C isotope filter (isotope grouper)"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#13c-isotope-filter","text":"","title":"13C isotope filter"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#description","text":"Feature list methods \u2192 Isotopes \u2192 13C isotope filter (formerly: isotope grouper) MZmine carries out the feature detection steps of chromatogram building and subsequent resolving considering all the signals stored in the mass lists . As a consequence, signals generated by isotopologues of the same chemical entity (see isotopic pattern ) are detected as distinct features and included in the feature lists , representing redundant information for the downstream data analysis. This issue ordinarily occurs for C-containing molecules, where the 13 C isotope signals can be easily detected ( 13 C/ 12 C \u2248 1.1%). The 13C isotope filter module (formerly called Isotope grouper ) aims at filtering out the features corresponding to the 13 C isotopes of the same analyte. The algorithm consider each feature individually and checks for the presence of potential 13 C-related peak(s) in the feature lists . When an isotope pattern meeting the user-defined tolerances ( e.g. m/z , RT) and requirements ( e.g. monotonic shape ) is found, the information is saved, and only the feature corresponding to the e.g. most intense isotope is retained in the feature list . It must be noted that 13 C peaks are searched within the feature list , and not in the raw data.","title":"Description"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#name-suffix","text":"String added as suffix when creating the new feature list(s).","title":"Name suffix"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#mz-tolerance","text":"Maximum allowed difference between the measured and the predicted m/z of the (potential) 13 C isotope to be grouped as isotopologues. The tolerance can be specified as absolute tolerance (in m/z ), relative tolerance (in ppm), or both. When both are specified, the tolerance range is calculated using the maximum between the absolute and relative tolerances. We recommend to set a failry strict m/z tolerance to reduce the risk of discarding false 13 C isotopes.","title":"m/z tolerance"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#retention-time-tolerance","text":"Maximum allowed RT difference between the feature and its (potential) 13 C isotope to be grouped as isotopologues. Isotopologues should exhibit identical chromatographic behaviour and thus produce overlapping LC peak shapes. Therefore, a strict RT tolerance can be used to reduce the risk of discarding false 13 C isotopes.","title":"Retention time tolerance"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#mobility-tolerance","text":"If enabled and the mobility dimension was recorded, potential 13 C isotopes will be grouped as isotopologues only if their mobility difference is within the defined tolerance. The same principle seen for the RT tolerance apply to the IM dimension. Isotopologues should exhibit identical IM separation; therefore, a strict mobility tolerance can be used to reduce the risk of discarding false 13 C isotopes.","title":"Mobility tolerance"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#monotonic-shape","text":"If true, a monotonically decreasing trend of the isotope pattern (typical of the 13 C isotope pattern of small molecules) is required for the filtering.","title":"Monotonic shape"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#maximum-charge","text":"Maximum charge state considered to predict the 13 C isotopes' m/z . If a value > 1 is set, all the cahrge states are evaluated and the one providing the most isotope features detected is used for the filtering.","title":"Maximum charge"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#never-remove-feature-with-ms2","text":"If checked, potential 13 C-related features will not be discarded if associated to a MS2 spectrum .","title":"Never remove feature with MS2"},{"location":"module_docs/filter_isotope_filter/isotope_filter.html#original-feature-lists","text":"Keep or remove the input feature list(s). The PROCESS IN PLACE option directly filter the input feature list and performs better in terms of memory usage; therefore, it is recommended over REMOVE , when available. Olena Mokshyna (24.44%), tdamiani (51.11%), lalalana5 (24.44%)","title":"Original feature lists"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html","text":"Isotope pattern finder \u00b6 Description \u00b6 Feature list methods \u2192 Isotopes \u2192 Isotope pattern finder. The module searches isotope patterns for each feature in selected feature lists by going back to the mass spectra. Starting from the feature m/z the algorithm will first backtrack any possible preceding isotope signals using a list of delta masses created from elements, their stable isotopes, and an m/z tolerance. For example, a -2 signal might be detected when searching for Br isotopes. In a second step, all picked potential isotope m/z values are used to search next isotope (with higher m/z). This is done for each charge state. Parameters \u00b6 Chemical elements \u00b6 All stable isotopes of the chosen elements are used to create a list of mass differences to search. Signals with this mass difference (m/z difference with different charge states) are then considered as potential isotope signals. m/z tolerance \u00b6 Maximum allowed difference between two features' m/z values in order for them to be considered the same. The value is specified both as absolute tolerance (in m/z) and relative tolerance (in ppm). The tolerance range is calculated using maximum of the absolute and relative tolerances. Maximum charge of isotope m/z \u00b6 Maximum possible charge of isotope m/z distributions. All present m/z values obtained by dividing isotope masses with 1,2 ...,maxCharge values will be considered. The default value is 1, but insert an integer greater than 1 if you want to consider ions of higher charge states. Search in scans \u00b6 Currently, the supported option is \"Single most intense\", which means the search for isotopes will happen in the single most intense MS scan of each feature. Olena Mokshyna (19.35%), Robin Schmid (25.81%), lalalana5 (51.61%), NotReallyContributing (3.23%)","title":"Isotope pattern finder"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#isotope-pattern-finder","text":"","title":"Isotope pattern finder"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#description","text":"Feature list methods \u2192 Isotopes \u2192 Isotope pattern finder. The module searches isotope patterns for each feature in selected feature lists by going back to the mass spectra. Starting from the feature m/z the algorithm will first backtrack any possible preceding isotope signals using a list of delta masses created from elements, their stable isotopes, and an m/z tolerance. For example, a -2 signal might be detected when searching for Br isotopes. In a second step, all picked potential isotope m/z values are used to search next isotope (with higher m/z). This is done for each charge state.","title":"Description"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#chemical-elements","text":"All stable isotopes of the chosen elements are used to create a list of mass differences to search. Signals with this mass difference (m/z difference with different charge states) are then considered as potential isotope signals.","title":"Chemical elements"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#mz-tolerance","text":"Maximum allowed difference between two features' m/z values in order for them to be considered the same. The value is specified both as absolute tolerance (in m/z) and relative tolerance (in ppm). The tolerance range is calculated using maximum of the absolute and relative tolerances.","title":"m/z tolerance"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#maximum-charge-of-isotope-mz","text":"Maximum possible charge of isotope m/z distributions. All present m/z values obtained by dividing isotope masses with 1,2 ...,maxCharge values will be considered. The default value is 1, but insert an integer greater than 1 if you want to consider ions of higher charge states.","title":"Maximum charge of isotope m/z"},{"location":"module_docs/filter_isotope_finder/isotope_finder.html#search-in-scans","text":"Currently, the supported option is \"Single most intense\", which means the search for isotopes will happen in the single most intense MS scan of each feature. Olena Mokshyna (19.35%), Robin Schmid (25.81%), lalalana5 (51.61%), NotReallyContributing (3.23%)","title":"Search in scans"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html","text":"Isotope peak scanner \u00b6 Description \u00b6 Feature list methods \u2192 Isotopes \u2192 Isotope peak scanner This module can scan acquired MS-Data for an isotope pattern of a specified element combination . The element combination is given as a string parameter (e.g. \"Cl3\"). The isotope pattern of this element combination will be calculated and compared to your MS-Data. The result is a new feature list containing just the isotope features. The features will have an isotope rating , comparing the found features to the calculated isotope pattern giving the user the option to manually evaluate the results. Additionally, the features will also be assigned to an isotope combination. Furthermore, the isotope features will be registered as an isotope pattern in MZmine so modules like Sum formula prediction can use the results to compare them to the calculated isotope pattern of predicted sum formulas. In the resulting feature table, the monoisotopic mass (lowest) will be referred to as \"Parent\". Isotope rating \u00b6 Rating is calculated using the following formulas: \\[R_m/z,k=\\frac{m/z_{child}}{m/z_{parent}+\\Delta{M_k}}\\] \\[\\frac{I_{parent}}{A_{parent}}=\\frac{I_k}{A_k}\\] \\[I_{exp.,l}=\\frac{I_{parent}}{A_{parent}}\\cdot{A_K}\\] \\[R_{I,k}=\\frac{I_{exp.,k}}{I_k}=\\frac{I_{parent}}{A_{parent}}\\cdot\\frac{A_k}{I_k}\\] where R is the rating, k - the number of an isotope peak, exp. - the calculated intensities, parent - the isotope peak with the lowest mass, child describes all other isotope peaks. If any rating is bigger than 1, for example if m/z_(parent) + \u0394M is smaller than m/z_(child), then it will be adjusted by 1/R to be comparable. If intensity shall be checked as well, m/z and intensity rating will be multiplied resulting in the final rating. Parameters \u00b6 Feature lists The feature list(s) that shall be analyzed. m/z tolerance \u00b6 m/z window around the expected isotope features to scan for isotope peaks. Check RT \u00b6 If chosen, compares RT of feature to that of a parent. Based on the following parameter of Retention time tolerance feature is either filtered out or preserved. Invoking this parameter might not make sense for imaging or direct infusion, but is critical for chromatographic data. Retention time tolerance \u00b6 Maximum allowed difference between two retention time values Chemical formula \u00b6 Element (combination) whose isotope pattern to be searched for. Please enter the two letter Symbol of the elements. (e.g. \\\"Gd\\\", \\\"Cl2Br\\\") Auto carbon \u00b6 If activated, Isotope peak scanner will calculate isotope patterns with variable numbers of carbon specified in Setup. The pattern with the best fitting number of carbon atoms will be chosen for every detected pattern. This will greatly increase computation time but helps with unknown-compound-identification. Please note that 13C isotope peaks might overlap with hetero atom isotope peaks depending on the resolution of your MS. This influences intensity ratios and will yield wrong results , since this prediction is based on intensity ratios of isotope peaks. This option yeilds no exact results, but might give a good hint about data. Charge \u00b6 Amount and polarity(e.g.: [M]+=+1 / [M]-=-1). This is important for multiply charged molecules because the m/z offset between isotope peaks will halve for molecules with a charge of two. Min. pattern intensity \u00b6 The minimum normalized intensity of a peak in the final calculated isotope pattern. Depends on the sensitivity of your MS. This differs from minimum abundance. Min = 0.0, Max = 0.99999. Merge width(m/z) \u00b6 This will be used to merge peaks in the calculated isotope pattern if they overlap in the spectrum. Specify in m/z, this depends on the resolution of your mass spectrometer. Minimum height \u00b6 Minimum peak height to be considered as an isotope peak. Setting this parameter is crucial if you use the Calculate accurate average parameter. (see below) Check intensity ratios \u00b6 Compare intensity of peaks to the calculated abundance of the isotope pattern. It's recommended to check this parameter for more accurate results. However, when processing fragment data, and it's unknown how much of an isotope pattern remains charged it might be reasonable to uncheck this. (e.g.: Fragmenting a Cl8-isotope-pattern-molecule -> If \"Element pattern\" = Cl4 this module will recognize everything with Cl4 or more Cl. However, this will lead to a messy result feature list) Minimum rating \u00b6 Minimum rating to be considered as an isotope peak. min = 0.0, max = 1.0 Rating type \u00b6 Method to calculate the rating with. Highest Intensity is the standard method and faster. Temporary average is slower method but could be more accurate for more intense peaks. Calculate accurate average \u00b6 This method will use averaged intensities over all mass lists in which ALL relevant masses were detected in. This will only be done for features that match the defined rating-calculation with the given rating. This will scan all mass lists for the peak closest to the identified isotope peak in the feature list and average the intensity. If there are no scans that match all criteria avg rating will be -1.0. Make sure the mass list is contained in the feature list. Name suffix \u00b6 Suffix to be added to feature list name. If \"auto\" then the module will itself create a suffix. Results \u00b6 This figure shows an example of the result peak list produced by Isotope peak scanner. It features the detected isotope peaks, a detected m/z ppm-offset, expected (@monoisotopic mass) and detected intensity ratios, the isotope composition, the rating, and (if specified) the average rating. Troubleshooting \u00b6 Error : I'm using \"Calculate accurate average\" but the average rating is always -1.0! Solution : All isotope features have been detected in the peak list. But they are not in the same mass lists at the same time which makes them incomparable since isotope features should be detected simultaneously, or they might me less intense than the specified \"Minimum height\". Error : I'm not getting any results, although I'm sure a specific element is in the scan! Solution 1 : Are you sure every isotope has been detected? How sensitive is you MS? Try to increase values for minimum abundance or minimum pattern intensity. You might need low minimum abundance but high minimum intensity, because a peak of a specific isotope composition might not been detected due to low relative intensity in the pattern. Check our preview function! Solution 2 : Another solution might be changing the merge width. Check how good the resolution of your MS data is and adjust the merge width to that. If (several) isotope compositions overlap, the intensities have to be merged. You can see a preview in the preview window! Olena Mokshyna","title":"Isotope peak scanner"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#isotope-peak-scanner","text":"","title":"Isotope peak scanner"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#description","text":"Feature list methods \u2192 Isotopes \u2192 Isotope peak scanner This module can scan acquired MS-Data for an isotope pattern of a specified element combination . The element combination is given as a string parameter (e.g. \"Cl3\"). The isotope pattern of this element combination will be calculated and compared to your MS-Data. The result is a new feature list containing just the isotope features. The features will have an isotope rating , comparing the found features to the calculated isotope pattern giving the user the option to manually evaluate the results. Additionally, the features will also be assigned to an isotope combination. Furthermore, the isotope features will be registered as an isotope pattern in MZmine so modules like Sum formula prediction can use the results to compare them to the calculated isotope pattern of predicted sum formulas. In the resulting feature table, the monoisotopic mass (lowest) will be referred to as \"Parent\".","title":"Description"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#isotope-rating","text":"Rating is calculated using the following formulas: \\[R_m/z,k=\\frac{m/z_{child}}{m/z_{parent}+\\Delta{M_k}}\\] \\[\\frac{I_{parent}}{A_{parent}}=\\frac{I_k}{A_k}\\] \\[I_{exp.,l}=\\frac{I_{parent}}{A_{parent}}\\cdot{A_K}\\] \\[R_{I,k}=\\frac{I_{exp.,k}}{I_k}=\\frac{I_{parent}}{A_{parent}}\\cdot\\frac{A_k}{I_k}\\] where R is the rating, k - the number of an isotope peak, exp. - the calculated intensities, parent - the isotope peak with the lowest mass, child describes all other isotope peaks. If any rating is bigger than 1, for example if m/z_(parent) + \u0394M is smaller than m/z_(child), then it will be adjusted by 1/R to be comparable. If intensity shall be checked as well, m/z and intensity rating will be multiplied resulting in the final rating.","title":"Isotope rating"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#parameters","text":"Feature lists The feature list(s) that shall be analyzed.","title":"Parameters"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#mz-tolerance","text":"m/z window around the expected isotope features to scan for isotope peaks.","title":"m/z tolerance"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#check-rt","text":"If chosen, compares RT of feature to that of a parent. Based on the following parameter of Retention time tolerance feature is either filtered out or preserved. Invoking this parameter might not make sense for imaging or direct infusion, but is critical for chromatographic data.","title":"Check RT"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#retention-time-tolerance","text":"Maximum allowed difference between two retention time values","title":"Retention time tolerance"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#chemical-formula","text":"Element (combination) whose isotope pattern to be searched for. Please enter the two letter Symbol of the elements. (e.g. \\\"Gd\\\", \\\"Cl2Br\\\")","title":"Chemical formula"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#auto-carbon","text":"If activated, Isotope peak scanner will calculate isotope patterns with variable numbers of carbon specified in Setup. The pattern with the best fitting number of carbon atoms will be chosen for every detected pattern. This will greatly increase computation time but helps with unknown-compound-identification. Please note that 13C isotope peaks might overlap with hetero atom isotope peaks depending on the resolution of your MS. This influences intensity ratios and will yield wrong results , since this prediction is based on intensity ratios of isotope peaks. This option yeilds no exact results, but might give a good hint about data.","title":"Auto carbon"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#charge","text":"Amount and polarity(e.g.: [M]+=+1 / [M]-=-1). This is important for multiply charged molecules because the m/z offset between isotope peaks will halve for molecules with a charge of two.","title":"Charge"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#min-pattern-intensity","text":"The minimum normalized intensity of a peak in the final calculated isotope pattern. Depends on the sensitivity of your MS. This differs from minimum abundance. Min = 0.0, Max = 0.99999.","title":"Min. pattern intensity"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#merge-widthmz","text":"This will be used to merge peaks in the calculated isotope pattern if they overlap in the spectrum. Specify in m/z, this depends on the resolution of your mass spectrometer.","title":"Merge width(m/z)"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#minimum-height","text":"Minimum peak height to be considered as an isotope peak. Setting this parameter is crucial if you use the Calculate accurate average parameter. (see below)","title":"Minimum height"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#check-intensity-ratios","text":"Compare intensity of peaks to the calculated abundance of the isotope pattern. It's recommended to check this parameter for more accurate results. However, when processing fragment data, and it's unknown how much of an isotope pattern remains charged it might be reasonable to uncheck this. (e.g.: Fragmenting a Cl8-isotope-pattern-molecule -> If \"Element pattern\" = Cl4 this module will recognize everything with Cl4 or more Cl. However, this will lead to a messy result feature list)","title":"Check intensity ratios"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#minimum-rating","text":"Minimum rating to be considered as an isotope peak. min = 0.0, max = 1.0","title":"Minimum rating"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#rating-type","text":"Method to calculate the rating with. Highest Intensity is the standard method and faster. Temporary average is slower method but could be more accurate for more intense peaks.","title":"Rating type"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#calculate-accurate-average","text":"This method will use averaged intensities over all mass lists in which ALL relevant masses were detected in. This will only be done for features that match the defined rating-calculation with the given rating. This will scan all mass lists for the peak closest to the identified isotope peak in the feature list and average the intensity. If there are no scans that match all criteria avg rating will be -1.0. Make sure the mass list is contained in the feature list.","title":"Calculate accurate average"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#name-suffix","text":"Suffix to be added to feature list name. If \"auto\" then the module will itself create a suffix.","title":"Name suffix"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#results","text":"This figure shows an example of the result peak list produced by Isotope peak scanner. It features the detected isotope peaks, a detected m/z ppm-offset, expected (@monoisotopic mass) and detected intensity ratios, the isotope composition, the rating, and (if specified) the average rating.","title":"Results"},{"location":"module_docs/filter_isotope_peak_scanner/isotope_peak_scanner.html#troubleshooting","text":"Error : I'm using \"Calculate accurate average\" but the average rating is always -1.0! Solution : All isotope features have been detected in the peak list. But they are not in the same mass lists at the same time which makes them incomparable since isotope features should be detected simultaneously, or they might me less intense than the specified \"Minimum height\". Error : I'm not getting any results, although I'm sure a specific element is in the scan! Solution 1 : Are you sure every isotope has been detected? How sensitive is you MS? Try to increase values for minimum abundance or minimum pattern intensity. You might need low minimum abundance but high minimum intensity, because a peak of a specific isotope composition might not been detected due to low relative intensity in the pattern. Check our preview function! Solution 2 : Another solution might be changing the merge width. Check how good the resolution of your MS data is and adjust the merge width to that. If (several) isotope compositions overlap, the intensities have to be merged. You can see a preview in the preview window! Olena Mokshyna","title":"Troubleshooting"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html","text":"m/z mobility region extraction \u00b6 Description \u00b6 Feature list methods \u2192 Feature list filtering \u2192 mobility-m/z region filtering Extracts subregions of interest from m/z-mobility regions. Parameters \u00b6 Region \u00b6 Regions to extract. Mobility/CCS \u00b6 Defines if mobility or mz shall be used for extraction. Suffix \u00b6 The suffix of newly created feature lists. Olena Mokshyna","title":"m/z mobility region extraction"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html#mz-mobility-region-extraction","text":"","title":"m/z mobility region extraction"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html#description","text":"Feature list methods \u2192 Feature list filtering \u2192 mobility-m/z region filtering Extracts subregions of interest from m/z-mobility regions.","title":"Description"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html#region","text":"Regions to extract.","title":"Region"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html#mobilityccs","text":"Defines if mobility or mz shall be used for extraction.","title":"Mobility/CCS"},{"location":"module_docs/filter_mobilitymzregionextraction/filter_mobilitymzregionextraction.html#suffix","text":"The suffix of newly created feature lists. Olena Mokshyna","title":"Suffix"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html","text":"Neutral loss filter \u00b6 Description \u00b6 Feature list methods \u2192 Feature list filtering \u2192 Neutral loss filter This module can scan acquired MS data for neutral losses. The result is a new feature list containing only features and their neutral-loss equivalents. The results will be displayed in the following manner: The feature with higher mass without the neutral loss will be named \"Parent\" . The description will contain the ID of the corresponding feature with the neutral loss. The feature with lower mass will be named \"Child\" . The description of the child feature will contain the ID of the parent feature and a ppm-shift relative to the calculated mass. Parameters \u00b6 m/z tolerance \u00b6 m/z window size around the expected features. Check RT \u00b6 Specify whether the algorithm should compare RT to those of a parent in found peaks or not. We recommend to not use it for direct infusion. If evaluating chromatographic data we recommend to use this parameter. Retention time tolerance \u00b6 Tolerance range of the retention time. Minimum height \u00b6 Minimium height of a feature to be considered a parent or child. Neutral loss (m/z) \u00b6 m/z ratio of the neutral loss to be detected. If the text box of \"Molecule\" is not left blank, this parameter will be ignored. Molecule \u00b6 Element combination/Molecule of the neutral loss (e.g. HI) This module will calculate the mass of the given molecule and ignore the input in the \"Neutral loss\" text box. Olena Mokshyna","title":"Neutral loss filter"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#neutral-loss-filter","text":"","title":"Neutral loss filter"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#description","text":"Feature list methods \u2192 Feature list filtering \u2192 Neutral loss filter This module can scan acquired MS data for neutral losses. The result is a new feature list containing only features and their neutral-loss equivalents. The results will be displayed in the following manner: The feature with higher mass without the neutral loss will be named \"Parent\" . The description will contain the ID of the corresponding feature with the neutral loss. The feature with lower mass will be named \"Child\" . The description of the child feature will contain the ID of the parent feature and a ppm-shift relative to the calculated mass.","title":"Description"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#mz-tolerance","text":"m/z window size around the expected features.","title":"m/z tolerance"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#check-rt","text":"Specify whether the algorithm should compare RT to those of a parent in found peaks or not. We recommend to not use it for direct infusion. If evaluating chromatographic data we recommend to use this parameter.","title":"Check RT"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#retention-time-tolerance","text":"Tolerance range of the retention time.","title":"Retention time tolerance"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#minimum-height","text":"Minimium height of a feature to be considered a parent or child.","title":"Minimum height"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#neutral-loss-mz","text":"m/z ratio of the neutral loss to be detected. If the text box of \"Molecule\" is not left blank, this parameter will be ignored.","title":"Neutral loss (m/z)"},{"location":"module_docs/filter_neutral_loss/filter_neutral_loss.html#molecule","text":"Element combination/Molecule of the neutral loss (e.g. HI) This module will calculate the mass of the given molecule and ignore the input in the \"Neutral loss\" text box. Olena Mokshyna","title":"Molecule"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html","text":"Peak comparison rows filter \u00b6 Description \u00b6 Feature list methods \u2192 Feature list filtering \u2192 Peak comparison rows filter This method removes certain rows from an aligned feature list based on peak comparisons in two columns. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to feature list name. 1st peak column to compare (zero indexed) \u00b6 Index of second column for comparison, e.g. \"0\". 2nd peak column to compare (zero indexed) \u00b6 Index of second column for comparison,e.g. \"1\". Fold change range : log2(peak1/peak2) \u00b6 Return peaks with a fold change within this range. m/z difference range : peak1 to peak2 (ppm) \u00b6 Return peaks with a m/z difference within this range. RT difference range : peak1 to peak2 (min) \u00b6 Return peaks with an RT difference within this range. Remove source feature list after filtering \u00b6 If checked, the original feature list will be removed leaving only the filtered version. Olena Mokshyna","title":"Peak comparison rows filter"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#peak-comparison-rows-filter","text":"","title":"Peak comparison rows filter"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#description","text":"Feature list methods \u2192 Feature list filtering \u2192 Peak comparison rows filter This method removes certain rows from an aligned feature list based on peak comparisons in two columns.","title":"Description"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#name-suffix","text":"Suffix to be added to feature list name.","title":"Name suffix"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#1st-peak-column-to-compare-zero-indexed","text":"Index of second column for comparison, e.g. \"0\".","title":"1st peak column to compare (zero indexed)"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#2nd-peak-column-to-compare-zero-indexed","text":"Index of second column for comparison,e.g. \"1\".","title":"2nd peak column to compare (zero indexed)"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#fold-change-range-log2peak1peak2","text":"Return peaks with a fold change within this range.","title":"Fold change range : log2(peak1/peak2)"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#mz-difference-range-peak1-to-peak2-ppm","text":"Return peaks with a m/z difference within this range.","title":"m/z difference range : peak1 to peak2 (ppm)"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#rt-difference-range-peak1-to-peak2-min","text":"Return peaks with an RT difference within this range.","title":"RT difference range : peak1 to peak2 (min)"},{"location":"module_docs/filter_peakcomparison_row_filter/filter_peakcomparison_row_filter.html#remove-source-feature-list-after-filtering","text":"If checked, the original feature list will be removed leaving only the filtered version. Olena Mokshyna","title":"Remove source feature list after filtering"},{"location":"module_docs/filter_raw_data/align-scans.html","text":"Align scans (MS1) \u00b6 Description \u00b6 Raw data methods \u2192 Raw data filtering \u2192 Align scans (MS1) This module aligns scans for small fluctuations correlating consecutive scans. Parameters \u00b6 Suffix \u00b6 This string is added to filename as suffix. Horizontal scans \u00b6 Number of scans to be considered in the correlation (to the left and to the right of the scan being aligned). Max Vertical Alignment \u00b6 Maximum number of shifts to be compared. This depends on equipment, normally this should be 1. Minimum height \u00b6 Minimum intensity to be considered for align correlation. If chromatogram height is below this level, it is not used in the correlation calculation. Correlation in log \u00b6 Transform intensities to log scale before comparing correlation. Remove previous files \u00b6 Remove processed files to save memory. Olena Mokshyna","title":"Align scans"},{"location":"module_docs/filter_raw_data/align-scans.html#align-scans-ms1","text":"","title":"Align scans (MS1)"},{"location":"module_docs/filter_raw_data/align-scans.html#description","text":"Raw data methods \u2192 Raw data filtering \u2192 Align scans (MS1) This module aligns scans for small fluctuations correlating consecutive scans.","title":"Description"},{"location":"module_docs/filter_raw_data/align-scans.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/align-scans.html#suffix","text":"This string is added to filename as suffix.","title":"Suffix"},{"location":"module_docs/filter_raw_data/align-scans.html#horizontal-scans","text":"Number of scans to be considered in the correlation (to the left and to the right of the scan being aligned).","title":"Horizontal scans"},{"location":"module_docs/filter_raw_data/align-scans.html#max-vertical-alignment","text":"Maximum number of shifts to be compared. This depends on equipment, normally this should be 1.","title":"Max Vertical Alignment"},{"location":"module_docs/filter_raw_data/align-scans.html#minimum-height","text":"Minimum intensity to be considered for align correlation. If chromatogram height is below this level, it is not used in the correlation calculation.","title":"Minimum height"},{"location":"module_docs/filter_raw_data/align-scans.html#correlation-in-log","text":"Transform intensities to log scale before comparing correlation.","title":"Correlation in log"},{"location":"module_docs/filter_raw_data/align-scans.html#remove-previous-files","text":"Remove processed files to save memory. Olena Mokshyna","title":"Remove previous files"},{"location":"module_docs/filter_raw_data/baseline-corrections.html","text":"Baseline correction \u00b6 Description \u00b6 Raw data methods \u2192 Raw data filtering \u2192 Baseline correction This module performs baseline correction on raw data files. It is designed to compensate for gradual shifts in the chromatographic baseline by detecting the baseline and then subtracting it from the raw data intensity values. The module proceeds as follows for each raw data file passed to it: The full range of m/z values present in the raw data is divided into a series of bins of a specified width (see m/z bin width). For each bin a chromatogram is constructed from the raw data points whose m/z values fall within the bin. This chromatogram may be either the base peak chromatogram or total ion count (TIC) chromatogram . The raw intensity values of each data point in a bin are corrected by subtracting the bin's baseline. Subtraction of baseline intensity values proceeds according to the type of chromatogram used to determine the baseline. If the base peak chromatogram was used then the corrected intensity values are calculated as follows: \\[I_{corr}=max(0,I_{orig}-I_{base})\\] If the TIC chromatogram was used then the corrected intensity values are calculated as follows: \\[I_{corr}=max(0,I_{orig}*(1-I_{base}/I_{max}))\\] where \\(I_{orig}\\) , \\(I_{base}\\) , \\(I_{max}\\) , and \\(I_{corr}\\) are the original, baseline, maximum and corrected intensity values, respectively, for a given scan and m/z bin. If \\(I_{base}\\) is less or equal to zero then no correction is performed, i.e. \\(I_{corr}=I_{orig}\\) . A new raw data file is generated from the corrected intensity values. Parameters \u00b6 Filename suffix \u00b6 The text to append to the name of the baseline corrected raw data file. Chromatogram type \u00b6 TIC: total ion count, i.e. summed intensities per scan, or Base peak intensity: maximum intensity per scan. MS-level \u00b6 MS level to which to apply correction. Select \"0\" for all levels. Use m/z bins \u00b6 Baselines can be calculated and data points corrected per m/z bin or to the entire raw data file. If no binning is performed then a single chromatogram is calculated for the entire raw data file and its baseline used to correct the full data file. No binning is very quick but much less accurate and so is only suitable for fine-tuning the smoothing and asymmetry parameters. m/z bin width \u00b6 The width of the m/z bins if binning is performed (see use m/z bins). Smaller bin widths result in longer processing times and greater memory requirements. Avoid values below 0.01. Correction method \u00b6 The width of the m/z bins if binning is performed (see use m/z bins). Smaller bin widths result in longer processing times and greater memory requirements. Avoid values below 0.01. R engine \u00b6 This option allows you to choose between two Java libraries to communicate with R - RServe or RCaller. Remove source file after baseline correction \u00b6 Whether to remove the original raw data file once baseline correction is complete. Correction methods \u00b6 More information on correction methods is available in CRAN decription of baseline package Asymmetric Baseline Corrector \u00b6 This corrector estimates a baseline using asymmetric least squares and subtracts it from the data. Additional parameters \u00b6 Smoothing The smoothing factor (>=0), generally ranges from 1E5 to 1E8. The larger this factor is, the smoother the baseline. Asymmetry Default value is 1E-3. The weight (0 <= p <= 1) for points above the trend line, whereas 1-p is the weight for points below it. Naturally, p should be small for estimating baselines. Rolling Ball Corrector \u00b6 The corrector estimates a trend based on the Rolling Ball algorithm , and subtracts it from the raw data intensity values. (Ideas from Rolling Ball algorithm for X-ray spectra by M.A.Kneen and H.J. Annegarn . Variable window width has been left out). Additional parameters \u00b6 wm (number of scans) Width of local window for minimization/maximization (in number of scans). ws (number of scans) Width of local window for smoothing (in number of scans). Peak Detection Baseline Corrector \u00b6 The corrector estimates a trend based on the Peak Detection algorithm, and subtracts it from the raw data intensity values. Peak detection is done in several steps sorting out real peaks through different criteria. Peaks are removed from spectra and minimums and medians are used to smooth the remaining parts of the spectra. (A translation from Kevin R. Coombes et al.'s MATLAB code for detecting peaks and removing baselines). Additional parameters \u00b6 left (number of scans) Smallest window size for peak widths (in number of scans). right (number of scans) Largest window size for peak widths (in number of scans). lwin (number of scans) Smallest window size for minimums and medians in peak removed spectra (in number of scans). rwin (number of scans) Largest window size for minimums and medians in peak removed spectra (in number of scans). snminimum Minimum signal to noise ratio for accepting peaks. mono Monotonically decreasing baseline if \u2018mono\u2019 > 0. multiplier Internal window size multiplier. Rubber Band Corrector \u00b6 The corrector estimates a trend based on the Rubber Band algorithm (which determines a convex envelope for the spectra - underneath side), and subtracts it from the raw data intensity values. Additional parameters \u00b6 noise Ignored if \"auto noise\" is checked. Noise level to be taken into account. auto noise Determine noise level automatically (from lower intensity scan). df Degree of freedom. spline Logical indicating whether the baseline should be an interpolating spline through the support points or piecewise linear. bend factor Does nothing if equals to zero. Helps fitting better with low \"df\" . Try starting with value around 5E4. Local Minima + LOESS Corrector \u00b6 The corrector estimates a trend based on Local Minima + LOESS (smoothed low-percentile intensity), and subtracts it from the raw data intensity values. Additional parameters \u00b6 method \" loess \" (smoothed low-percentile intensity) or \" approx \" (linear interpolation). bw The bandwidth to be passed to loess. breaks Number of breaks set to m/z values for finding the local minima or points below a certain quantile of intensities; breaks -1 equally spaced intervals on the log(m/z) scale. break width (number of scans) Width of a single break. Usually the maximum width (in number of scans) of the largest peak. Overrides \"breaks\" value. qntl If 0, find local minima; if >0 find intensities < qntl*100th quantile locally. Requirements \u00b6 This module relies on the local installation of R statistical computing software and several R packages. Quick install The whole thing can be setup as follows by running the following code in R: install.packages(c(\"Rserve\", \"ptw\", \"baseline\", \"hyperSpec\")) source(\"http://bioconductor.org/biocLite.R\") biocLite(\"PROcess\") Details Rserve (All correctors): provides an interface between MZmine and R. To install Rserve from CRAN packages run R and enter: install.packages(\"Rserve\") ptw (Asymmetric corrector): parametric time-warping provides the asymmetric least-squares implementation. To install ptw run R and enter: install.packages(\"ptw\") baseline (RollingBall and PeakDetection correctors): provides a trend based on \"Rolling Ball\" and \"Peak Detection\" algorithms implementation. To install baseline run R and enter: install.packages(\"baseline\") hyperSpec (RubberBand corrector): provides a trend based on \"Rubber Band\" algorithm (which determines a convex envelope for the spectra) implementation. To install hyperSpec run R and enter: install.packages(\"hyperSpec\") PROcess (Local Minima + LOESS corrector): provides the local minima search + LOESS (smoothed low-percentile intensity) implementation. To install PROcess run R and enter: source(\"http://bioconductor.org/biocLite.R\") biocLite(\"PROcess\") References \u00b6 [1] Boelens, H.F.M., Eilers, P.H.C., Hankemeier, T. (2005) \"Sign constraints improve the detection of differences between complex spectral data sets: LC-IR as an example\", Analytical Chemistry, 77, 7998 \u2013 8007. [2] Rserve \"A TCP/IP server which allows other programs to use facilities of R\" https://rforge.net/Rserve . Olena Mokshyna","title":"Baseline corrections"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#baseline-correction","text":"","title":"Baseline correction"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#description","text":"Raw data methods \u2192 Raw data filtering \u2192 Baseline correction This module performs baseline correction on raw data files. It is designed to compensate for gradual shifts in the chromatographic baseline by detecting the baseline and then subtracting it from the raw data intensity values. The module proceeds as follows for each raw data file passed to it: The full range of m/z values present in the raw data is divided into a series of bins of a specified width (see m/z bin width). For each bin a chromatogram is constructed from the raw data points whose m/z values fall within the bin. This chromatogram may be either the base peak chromatogram or total ion count (TIC) chromatogram . The raw intensity values of each data point in a bin are corrected by subtracting the bin's baseline. Subtraction of baseline intensity values proceeds according to the type of chromatogram used to determine the baseline. If the base peak chromatogram was used then the corrected intensity values are calculated as follows: \\[I_{corr}=max(0,I_{orig}-I_{base})\\] If the TIC chromatogram was used then the corrected intensity values are calculated as follows: \\[I_{corr}=max(0,I_{orig}*(1-I_{base}/I_{max}))\\] where \\(I_{orig}\\) , \\(I_{base}\\) , \\(I_{max}\\) , and \\(I_{corr}\\) are the original, baseline, maximum and corrected intensity values, respectively, for a given scan and m/z bin. If \\(I_{base}\\) is less or equal to zero then no correction is performed, i.e. \\(I_{corr}=I_{orig}\\) . A new raw data file is generated from the corrected intensity values.","title":"Description"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#filename-suffix","text":"The text to append to the name of the baseline corrected raw data file.","title":"Filename suffix"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#chromatogram-type","text":"TIC: total ion count, i.e. summed intensities per scan, or Base peak intensity: maximum intensity per scan.","title":"Chromatogram type"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#ms-level","text":"MS level to which to apply correction. Select \"0\" for all levels.","title":"MS-level"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#use-mz-bins","text":"Baselines can be calculated and data points corrected per m/z bin or to the entire raw data file. If no binning is performed then a single chromatogram is calculated for the entire raw data file and its baseline used to correct the full data file. No binning is very quick but much less accurate and so is only suitable for fine-tuning the smoothing and asymmetry parameters.","title":"Use m/z bins"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#mz-bin-width","text":"The width of the m/z bins if binning is performed (see use m/z bins). Smaller bin widths result in longer processing times and greater memory requirements. Avoid values below 0.01.","title":"m/z bin width"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#correction-method","text":"The width of the m/z bins if binning is performed (see use m/z bins). Smaller bin widths result in longer processing times and greater memory requirements. Avoid values below 0.01.","title":"Correction method"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#r-engine","text":"This option allows you to choose between two Java libraries to communicate with R - RServe or RCaller.","title":"R engine"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#remove-source-file-after-baseline-correction","text":"Whether to remove the original raw data file once baseline correction is complete.","title":"Remove source file after baseline correction"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#correction-methods","text":"More information on correction methods is available in CRAN decription of baseline package","title":"Correction methods"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#asymmetric-baseline-corrector","text":"This corrector estimates a baseline using asymmetric least squares and subtracts it from the data.","title":"Asymmetric Baseline Corrector"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#additional-parameters","text":"Smoothing The smoothing factor (>=0), generally ranges from 1E5 to 1E8. The larger this factor is, the smoother the baseline. Asymmetry Default value is 1E-3. The weight (0 <= p <= 1) for points above the trend line, whereas 1-p is the weight for points below it. Naturally, p should be small for estimating baselines.","title":"Additional parameters"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#rolling-ball-corrector","text":"The corrector estimates a trend based on the Rolling Ball algorithm , and subtracts it from the raw data intensity values. (Ideas from Rolling Ball algorithm for X-ray spectra by M.A.Kneen and H.J. Annegarn . Variable window width has been left out).","title":"Rolling Ball Corrector"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#additional-parameters_1","text":"wm (number of scans) Width of local window for minimization/maximization (in number of scans). ws (number of scans) Width of local window for smoothing (in number of scans).","title":"Additional parameters"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#peak-detection-baseline-corrector","text":"The corrector estimates a trend based on the Peak Detection algorithm, and subtracts it from the raw data intensity values. Peak detection is done in several steps sorting out real peaks through different criteria. Peaks are removed from spectra and minimums and medians are used to smooth the remaining parts of the spectra. (A translation from Kevin R. Coombes et al.'s MATLAB code for detecting peaks and removing baselines).","title":"Peak Detection Baseline Corrector"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#additional-parameters_2","text":"left (number of scans) Smallest window size for peak widths (in number of scans). right (number of scans) Largest window size for peak widths (in number of scans). lwin (number of scans) Smallest window size for minimums and medians in peak removed spectra (in number of scans). rwin (number of scans) Largest window size for minimums and medians in peak removed spectra (in number of scans). snminimum Minimum signal to noise ratio for accepting peaks. mono Monotonically decreasing baseline if \u2018mono\u2019 > 0. multiplier Internal window size multiplier.","title":"Additional parameters"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#rubber-band-corrector","text":"The corrector estimates a trend based on the Rubber Band algorithm (which determines a convex envelope for the spectra - underneath side), and subtracts it from the raw data intensity values.","title":"Rubber Band Corrector"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#additional-parameters_3","text":"noise Ignored if \"auto noise\" is checked. Noise level to be taken into account. auto noise Determine noise level automatically (from lower intensity scan). df Degree of freedom. spline Logical indicating whether the baseline should be an interpolating spline through the support points or piecewise linear. bend factor Does nothing if equals to zero. Helps fitting better with low \"df\" . Try starting with value around 5E4.","title":"Additional parameters"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#local-minima-loess-corrector","text":"The corrector estimates a trend based on Local Minima + LOESS (smoothed low-percentile intensity), and subtracts it from the raw data intensity values.","title":"Local Minima + LOESS Corrector"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#additional-parameters_4","text":"method \" loess \" (smoothed low-percentile intensity) or \" approx \" (linear interpolation). bw The bandwidth to be passed to loess. breaks Number of breaks set to m/z values for finding the local minima or points below a certain quantile of intensities; breaks -1 equally spaced intervals on the log(m/z) scale. break width (number of scans) Width of a single break. Usually the maximum width (in number of scans) of the largest peak. Overrides \"breaks\" value. qntl If 0, find local minima; if >0 find intensities < qntl*100th quantile locally.","title":"Additional parameters"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#requirements","text":"This module relies on the local installation of R statistical computing software and several R packages. Quick install The whole thing can be setup as follows by running the following code in R: install.packages(c(\"Rserve\", \"ptw\", \"baseline\", \"hyperSpec\")) source(\"http://bioconductor.org/biocLite.R\") biocLite(\"PROcess\") Details Rserve (All correctors): provides an interface between MZmine and R. To install Rserve from CRAN packages run R and enter: install.packages(\"Rserve\") ptw (Asymmetric corrector): parametric time-warping provides the asymmetric least-squares implementation. To install ptw run R and enter: install.packages(\"ptw\") baseline (RollingBall and PeakDetection correctors): provides a trend based on \"Rolling Ball\" and \"Peak Detection\" algorithms implementation. To install baseline run R and enter: install.packages(\"baseline\") hyperSpec (RubberBand corrector): provides a trend based on \"Rubber Band\" algorithm (which determines a convex envelope for the spectra) implementation. To install hyperSpec run R and enter: install.packages(\"hyperSpec\") PROcess (Local Minima + LOESS corrector): provides the local minima search + LOESS (smoothed low-percentile intensity) implementation. To install PROcess run R and enter: source(\"http://bioconductor.org/biocLite.R\") biocLite(\"PROcess\")","title":"Requirements"},{"location":"module_docs/filter_raw_data/baseline-corrections.html#references","text":"[1] Boelens, H.F.M., Eilers, P.H.C., Hankemeier, T. (2005) \"Sign constraints improve the detection of differences between complex spectral data sets: LC-IR as an example\", Analytical Chemistry, 77, 7998 \u2013 8007. [2] Rserve \"A TCP/IP server which allows other programs to use facilities of R\" https://rforge.net/Rserve . Olena Mokshyna","title":"References"},{"location":"module_docs/filter_raw_data/crop-filter.html","text":"Crop filter \u00b6 Description \u00b6 Raw data methods \u2192 Raw data filtering \u2192 Crop filter This module performs cropping of raw data files based on the user-defined parameter range defined by user. This allows user to obtain a new raw data file that contains only the information from the range of interest. Parameters \u00b6 Scans \u00b6 Define scan filtering parameters, which include: Scan number, Base filtering number, Retention time, Mobility, MS level, Scan definition (matching some pattern), Polarity, and Spectrum type. m/z \u00b6 m/z boundary of the cropped region Suffix \u00b6 This string is added to filename as suffix Remove source file after filtering \u00b6 If checked, only filtered file version is stored. Olena Mokshyna","title":"Crop filter"},{"location":"module_docs/filter_raw_data/crop-filter.html#crop-filter","text":"","title":"Crop filter"},{"location":"module_docs/filter_raw_data/crop-filter.html#description","text":"Raw data methods \u2192 Raw data filtering \u2192 Crop filter This module performs cropping of raw data files based on the user-defined parameter range defined by user. This allows user to obtain a new raw data file that contains only the information from the range of interest.","title":"Description"},{"location":"module_docs/filter_raw_data/crop-filter.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/crop-filter.html#scans","text":"Define scan filtering parameters, which include: Scan number, Base filtering number, Retention time, Mobility, MS level, Scan definition (matching some pattern), Polarity, and Spectrum type.","title":"Scans"},{"location":"module_docs/filter_raw_data/crop-filter.html#mz","text":"m/z boundary of the cropped region","title":"m/z"},{"location":"module_docs/filter_raw_data/crop-filter.html#suffix","text":"This string is added to filename as suffix","title":"Suffix"},{"location":"module_docs/filter_raw_data/crop-filter.html#remove-source-file-after-filtering","text":"If checked, only filtered file version is stored. Olena Mokshyna","title":"Remove source file after filtering"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html","text":"Scan by scan filtering \u00b6 Description \u00b6 Raw data methods \u2192 Raw data filtering \u2192 Scan by scan filtering This module can be used to preprocess data in each scan using various filters. The preview shows the superposed spectra of the scan before and after the Savitzky-Golay filter is applied. Filters \u00b6 Mean filter \u00b6 For each data point, the filter assigns to it the intensity average of all the datapoints inside the user defined window. The window is centered in the mass value of this data point. Parameters \u00b6 Window length \u00b6 One-sided length of the m/z smoothing window. Savitzky Golay filter \u00b6 The Savitzky\u2013Golay smoothing filter was first described in 1964 by Abraham Savitzky and Marcel J. E. Golay. The Savitzky\u2013Golay method essentially performs a local polynomial regression (of degree k) on a series of values (of at least k+1 points which are treated as being equally spaced in the series) to determine the smoothed value for each point. http://en.wikipedia.org/wiki/Savitzky-Golay_smoothing_filter Parameters \u00b6 Number of datapoints \u00b6 This number can be 5, 7, 9, 11, 13 or 15. Resampling filter \u00b6 Each scan is divide in m/z bins whose length is defined by the user in the parameters. The mass of the new data point will be in the middle of each m/z bin's space. Its intensity is the average of the intensity of all the data points inside the bin. Parameters \u00b6 m/z bin length \u00b6 The length of m/z bin. Round resampling filter \u00b6 All data points in each scan is shifted to the nearest rounded integer ( ion number ). The mass of the new data point will be on the rounded value. If several data points are competing for the same rounded value / mass, the new data point's intensity is the average of all the competing data points. Unless \"Sum duplicate intensities\" is checked, leading to a single new data point with intensity equal to the sum of the intensities of all the competing data points. If the scan is not centroided, its spectrum is first turned into centroid using a default \"local maxima\" algorithm, then the same algorithm as described above is applied. Parameters \u00b6 Sum duplicate intensities \u00b6 Sums ions count (intensity) of m/z peaks competing for being rounded at same m/z unit. If unchecked, the intensities are averaged rather than summed. Remove zero intensity m/z peaks \u00b6 Clear all scans spectra from m/z peaks with intensity equal to zero. Olena Mokshyna","title":"Scan by scan filtering"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#scan-by-scan-filtering","text":"","title":"Scan by scan filtering"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#description","text":"Raw data methods \u2192 Raw data filtering \u2192 Scan by scan filtering This module can be used to preprocess data in each scan using various filters. The preview shows the superposed spectra of the scan before and after the Savitzky-Golay filter is applied.","title":"Description"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#filters","text":"","title":"Filters"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#mean-filter","text":"For each data point, the filter assigns to it the intensity average of all the datapoints inside the user defined window. The window is centered in the mass value of this data point.","title":"Mean filter"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#window-length","text":"One-sided length of the m/z smoothing window.","title":"Window length"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#savitzky-golay-filter","text":"The Savitzky\u2013Golay smoothing filter was first described in 1964 by Abraham Savitzky and Marcel J. E. Golay. The Savitzky\u2013Golay method essentially performs a local polynomial regression (of degree k) on a series of values (of at least k+1 points which are treated as being equally spaced in the series) to determine the smoothed value for each point. http://en.wikipedia.org/wiki/Savitzky-Golay_smoothing_filter","title":"Savitzky Golay filter"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#parameters_1","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#number-of-datapoints","text":"This number can be 5, 7, 9, 11, 13 or 15.","title":"Number of datapoints"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#resampling-filter","text":"Each scan is divide in m/z bins whose length is defined by the user in the parameters. The mass of the new data point will be in the middle of each m/z bin's space. Its intensity is the average of the intensity of all the data points inside the bin.","title":"Resampling filter"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#parameters_2","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#mz-bin-length","text":"The length of m/z bin.","title":"m/z bin length"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#round-resampling-filter","text":"All data points in each scan is shifted to the nearest rounded integer ( ion number ). The mass of the new data point will be on the rounded value. If several data points are competing for the same rounded value / mass, the new data point's intensity is the average of all the competing data points. Unless \"Sum duplicate intensities\" is checked, leading to a single new data point with intensity equal to the sum of the intensities of all the competing data points. If the scan is not centroided, its spectrum is first turned into centroid using a default \"local maxima\" algorithm, then the same algorithm as described above is applied.","title":"Round resampling filter"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#parameters_3","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#sum-duplicate-intensities","text":"Sums ions count (intensity) of m/z peaks competing for being rounded at same m/z unit. If unchecked, the intensities are averaged rather than summed.","title":"Sum duplicate intensities"},{"location":"module_docs/filter_raw_data/filter-scan-by-scan.html#remove-zero-intensity-mz-peaks","text":"Clear all scans spectra from m/z peaks with intensity equal to zero. Olena Mokshyna","title":"Remove zero intensity m/z peaks"},{"location":"module_docs/filter_raw_data/scan_smoothing.html","text":"Scan smoothing (MS1) \u00b6 Description \u00b6 Raw data methods \u2192 Raw data filtering \u2192 Scan smoothing (MS1) This module averages intensity values within a time-scan frame. Parameters \u00b6 Suffix \u00b6 This string is added to filename as suffix. Time (min) \u00b6 Time span over which intensities will be averaged in the same m/z over scans. The max between this and Scan Span will be used. Scan span \u00b6 Number of scan in which intensities will be averaged in the same m/z. The max between this and Time Span will be used. m/z tolerance \u00b6 m/z range in which intensities will be averaged. The max between this and m/z points will be used. If both equal 0 no m/z smoothing will be performed. m/z min points \u00b6 Number of m/z points used to smooth. The max between this and m/z tol will be used. If both equal 0 no m/z smoothing will be performed. Min height \u00b6 Minimum intensity of the highest data point in the chromatogram. If chromatogram height is below this level, it is not used in the average calculation. Remove previous files \u00b6 Remove processed files to save memory. Olena Mokshyna","title":"Scan smoothing"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#scan-smoothing-ms1","text":"","title":"Scan smoothing (MS1)"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#description","text":"Raw data methods \u2192 Raw data filtering \u2192 Scan smoothing (MS1) This module averages intensity values within a time-scan frame.","title":"Description"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#suffix","text":"This string is added to filename as suffix.","title":"Suffix"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#time-min","text":"Time span over which intensities will be averaged in the same m/z over scans. The max between this and Scan Span will be used.","title":"Time (min)"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#scan-span","text":"Number of scan in which intensities will be averaged in the same m/z. The max between this and Time Span will be used.","title":"Scan span"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#mz-tolerance","text":"m/z range in which intensities will be averaged. The max between this and m/z points will be used. If both equal 0 no m/z smoothing will be performed.","title":"m/z tolerance"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#mz-min-points","text":"Number of m/z points used to smooth. The max between this and m/z tol will be used. If both equal 0 no m/z smoothing will be performed.","title":"m/z min points"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#min-height","text":"Minimum intensity of the highest data point in the chromatogram. If chromatogram height is below this level, it is not used in the average calculation.","title":"Min height"},{"location":"module_docs/filter_raw_data/scan_smoothing.html#remove-previous-files","text":"Remove processed files to save memory. Olena Mokshyna","title":"Remove previous files"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html","text":"Peak finder \u00b6 Description \u00b6 It is a recommended gap-filling algorithm. Feature list methods \u2192 Gap filling \u2192 Peak finder . [//] # (TODO ADD FIGURE ALIGNED TABLE) When a feature cannot be identified/quantified in certain sample will be assigned a zero-intensity value during the feature alingment (see here for more details).This produces gaps in the aligned feature table, commonly referred to as missing values . There is a number of occasions where, due to suboptimal feature detection, a missing value is assigned even tough the peak is actually present. Some chromatographic features in an aligned feature list may not be detected in every sample for several reasons, such as: Peak intensity below the minimum abundance threshold. The peak will be not detected even though there is a peak, and it can be gap-filled for the alignment process if the peak having the same RT and m/z is detected in other samples. [//] # (TODO Explain minimum abundance threshold) Peak discarded in a previous processing step. Peaks filtered out due to low peak intensity Misalignment due to shifts in m/z, retention time, or ion mobility within feature lists from different samples (or batches). Might originate from inaccurate mass calibration, etc. Inaccurate peak detection and deconvolution of co-eluting compounds. Co-eluting features that are not baseline separated might be resolved in one sample but kept unsplit in another Feature shape constraints in the resolver or later feature filters All of these reasons can result in undesirable gaps (missing values) in the aligned feature table. Those gaps are not limited to smaller signals but can also affect abundant features. To account for this problem, the user can use the Peak finder module as a secondary, informed feature finding step. The gap-filling module ( i.e. 'Peak finder' algorithm ) aims at reducing false missing values and 'fill the gaps' by going back to the original raw data and re-integrating the peak area where the peak is expected. This approch is sometimes reffered to as 'back-filling'. The algorithm searches for signals within the original centroided mass spectra. It fills the gaps in the feature list according to the user parameters, with the most crucial being m/z tolerance and RT tolerance . These two tolerances define the window where the algorithm should find the new feature. Each feature in the aligned table is examined individually within the RT window associated to the examined features. Algorithm searches for appropriate features in that window. If the user-defined requirements are met, the peak is integrated, and the retrieved peak area is used to reconstruct omitted features and fill the gap. [//] # (TODO ORIGINAL of TEXT above: If requirements are met (e.g. REQUIREMENTS) the peak integrated and the retrieved peak area used to XXX, this filling the gap. and reconstructs omitted chromatographic peaks in \u201cempty\u201d samples by scanning the m/z and retention time region of LC\u2013MS spectra corresponding to the detected peaks in other samples.) In the feature table, gap-filled features are marked with a grey color as the feature state (see feature table description ). There may still be some gaps in which no evidence for the peak was found, marked by orange. DANGER OF DUPLICATED FEATURES. Some features in the dataset can show duplicates, which appear during feature recognition and alignment of samples. The duplicates falsify the exploratory analysis of data and are removed in MZmine. The gap-filled feature table can be further used in downstream data analysis Parameters \u00b6 Name suffix \u00b6 Suffix to be added to the peak list name. Intensity tolerance \u00b6 Maximum allowed deviation from the expected peak shape in chromatographic direction. m/z tolerance \u00b6 m/z range which will be applied when searching for the possible feature in the raw data. The tolerance can be specified as absolute tolerance (in m/z ), relative tolerance (in ppm), or both. When both are specified, the tolerance range is calculated using the maximum between the absolute and relative tolerances. Retention time tolerance \u00b6 Retention time range when searching for the possible feature in the raw data. Minimum data points \u00b6 Feature will be used for gap filling only if it satisfies the set minimum number of data points. Usually a lower number of data points is used compared to the primary feature finding workflow with the resolvers. Original feature list \u00b6 User can either keep, remove, or process in place of the original feature list. The latter two increase memory efficiency and throughput while users might want to keep the original feature list as a reference. Olena Mokshyna (44.62%), tdamiani (44.62%), Robin Schmid (6.15%), lalalana5 (4.62%)","title":"Peak finder"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#peak-finder","text":"","title":"Peak finder"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#description","text":"It is a recommended gap-filling algorithm. Feature list methods \u2192 Gap filling \u2192 Peak finder . [//] # (TODO ADD FIGURE ALIGNED TABLE) When a feature cannot be identified/quantified in certain sample will be assigned a zero-intensity value during the feature alingment (see here for more details).This produces gaps in the aligned feature table, commonly referred to as missing values . There is a number of occasions where, due to suboptimal feature detection, a missing value is assigned even tough the peak is actually present. Some chromatographic features in an aligned feature list may not be detected in every sample for several reasons, such as: Peak intensity below the minimum abundance threshold. The peak will be not detected even though there is a peak, and it can be gap-filled for the alignment process if the peak having the same RT and m/z is detected in other samples. [//] # (TODO Explain minimum abundance threshold) Peak discarded in a previous processing step. Peaks filtered out due to low peak intensity Misalignment due to shifts in m/z, retention time, or ion mobility within feature lists from different samples (or batches). Might originate from inaccurate mass calibration, etc. Inaccurate peak detection and deconvolution of co-eluting compounds. Co-eluting features that are not baseline separated might be resolved in one sample but kept unsplit in another Feature shape constraints in the resolver or later feature filters All of these reasons can result in undesirable gaps (missing values) in the aligned feature table. Those gaps are not limited to smaller signals but can also affect abundant features. To account for this problem, the user can use the Peak finder module as a secondary, informed feature finding step. The gap-filling module ( i.e. 'Peak finder' algorithm ) aims at reducing false missing values and 'fill the gaps' by going back to the original raw data and re-integrating the peak area where the peak is expected. This approch is sometimes reffered to as 'back-filling'. The algorithm searches for signals within the original centroided mass spectra. It fills the gaps in the feature list according to the user parameters, with the most crucial being m/z tolerance and RT tolerance . These two tolerances define the window where the algorithm should find the new feature. Each feature in the aligned table is examined individually within the RT window associated to the examined features. Algorithm searches for appropriate features in that window. If the user-defined requirements are met, the peak is integrated, and the retrieved peak area is used to reconstruct omitted features and fill the gap. [//] # (TODO ORIGINAL of TEXT above: If requirements are met (e.g. REQUIREMENTS) the peak integrated and the retrieved peak area used to XXX, this filling the gap. and reconstructs omitted chromatographic peaks in \u201cempty\u201d samples by scanning the m/z and retention time region of LC\u2013MS spectra corresponding to the detected peaks in other samples.) In the feature table, gap-filled features are marked with a grey color as the feature state (see feature table description ). There may still be some gaps in which no evidence for the peak was found, marked by orange. DANGER OF DUPLICATED FEATURES. Some features in the dataset can show duplicates, which appear during feature recognition and alignment of samples. The duplicates falsify the exploratory analysis of data and are removed in MZmine. The gap-filled feature table can be further used in downstream data analysis","title":"Description"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#name-suffix","text":"Suffix to be added to the peak list name.","title":"Name suffix"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#intensity-tolerance","text":"Maximum allowed deviation from the expected peak shape in chromatographic direction.","title":"Intensity tolerance"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#mz-tolerance","text":"m/z range which will be applied when searching for the possible feature in the raw data. The tolerance can be specified as absolute tolerance (in m/z ), relative tolerance (in ppm), or both. When both are specified, the tolerance range is calculated using the maximum between the absolute and relative tolerances.","title":"m/z tolerance"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#retention-time-tolerance","text":"Retention time range when searching for the possible feature in the raw data.","title":"Retention time tolerance"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#minimum-data-points","text":"Feature will be used for gap filling only if it satisfies the set minimum number of data points. Usually a lower number of data points is used compared to the primary feature finding workflow with the resolvers.","title":"Minimum data points"},{"location":"module_docs/gapfill_peak_finder/gap-filling.html#original-feature-list","text":"User can either keep, remove, or process in place of the original feature list. The latter two increase memory efficiency and throughput while users might want to keep the original feature list as a reference. Olena Mokshyna (44.62%), tdamiani (44.62%), Robin Schmid (6.15%), lalalana5 (4.62%)","title":"Original feature list"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html","text":"Same m/z and RT range gap filler \u00b6 Description \u00b6 Feature list methods \u2192 Gap filling \u2192 Same m/z and RT range gap filler . This method fills in gaps in each peak list row by using the same m/z and retention time range as other peaks in the row. The m/z and retention time defines where the new peaks will be sought based on the ranges of the rest of the peaks in the same row. The minimum value of these ranges is the minimum value in the range of all the peaks in the row and the same happens with the maximum value. User-specified tolerance is added to the m/z range. The new peak is constructed using the highest data point of each scan within the determined m/z and retention time ranges. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to the peak list name. m/z tolerance \u00b6 Tolerance, which is added to the m/z range of other peaks in the peak list row. Original feature list \u00b6 The user can either select to keep or remove the original feature list. Olena Mokshyna (63.64%), lalalana5 (36.36%)","title":"Same RT and m/z range gap filler"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html#same-mz-and-rt-range-gap-filler","text":"","title":"Same m/z and RT range gap filler"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html#description","text":"Feature list methods \u2192 Gap filling \u2192 Same m/z and RT range gap filler . This method fills in gaps in each peak list row by using the same m/z and retention time range as other peaks in the row. The m/z and retention time defines where the new peaks will be sought based on the ranges of the rest of the peaks in the same row. The minimum value of these ranges is the minimum value in the range of all the peaks in the row and the same happens with the maximum value. User-specified tolerance is added to the m/z range. The new peak is constructed using the highest data point of each scan within the determined m/z and retention time ranges.","title":"Description"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html#name-suffix","text":"Suffix to be added to the peak list name.","title":"Name suffix"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html#mz-tolerance","text":"Tolerance, which is added to the m/z range of other peaks in the peak list row.","title":"m/z tolerance"},{"location":"module_docs/gapfill_same_mz_and_RT_range/same_mz_and_RT_range_gap_filler.html#original-feature-list","text":"The user can either select to keep or remove the original feature list. Olena Mokshyna (63.64%), lalalana5 (36.36%)","title":"Original feature list"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html","text":"CCS Calibration and calculation \u00b6 Description \u00b6 The modules described in this section can be found in Feature list methods \u2192 Processing \u2192 Internal reference CCS calibration / External CCS calibration / Calculate CCS values . Accurate determination of CCS values requires a valid CCS calibration and molecule charge states to be detected. A CCS calibration can be either imported or created from internal reference. timsTOF raw data can be recalibrated using data analysis and imported in MZmine. The recalibrated data will be used by default. (see Calculating CCS values ) mzML raw data requires the determination of a calibration function from the raw data (e.g. as detected features) or as import from an external file. (see importing an external CCS calibration and refernce CCS calibration ) Importing an external CCS calibration \u00b6 Agilent calibration data can be imported from the \"OverrideImsCal.xml\" file in the Agilent raw data folder. Waters calibration data can be imported from the \"mob_cal.csv\" file in the Waters raw data folder. The \"_extern.inf\" file is also required, but will be read automatically when the \"mob_cal.csv\" is selected. The calibration import is accessed via Feature list methods -> Processing -> External CCS Calibration . Then select the calibration \"OverrideImsCal.xml\"/\"mob_cal.csv\" from the raw data folder, and select the raw data files the calibration should be applied to. Reference CSS calibration \u00b6 If a mobility calibrant is infused during an HPLC run of every sample, a CCS calibration can be calculated on a per-raw file basis. (Common procedure on Bruker devices) Otherwise, a single run can be used to calibrate multiple files. Please note that this is currently only supported for TIMS and DTIMS data. The calibration module can be accessed via Feature list methods -> Processing -> Internal reference calibration . Parameters \u00b6 Set to additional raw files \u00b6 If a calibration calculated from a single feature list shall be applied to multiple other raw files, the raw files can be selected here. This requires only a single raw file to be selected. Feature list (with reference compounds) \u00b6 Specifies (a) feature list(s) that contains the reference compounds. If multiple feature lists are selected, every feature list will be searched for reference compounds, and the calibration will be used for the raw data files in the particular feature list. This means that no raw data file may be selected. (Cannot set multiple calibrations to a single raw file) If a single feature list is selected, the calibration may be applied to additional raw data files via the Set to additional raw files parameter. Reference list \u00b6 Specifies a \".csv\" reference list of for CCS calibrant ions. Must contain the columns \"mz\", \"mobility\", \"ccs\", \"charge\". Columns must be separated by \";\". The ion mode may be specified via the charge of the ion, e.g., as 1 or -1. Only the correct polarity will be used to calculate the calibration. m/z tolerance \u00b6 The m/z tolerance for the reference compounds. Mobility tolerance \u00b6 The mobility tolerance to detect the reference compounds. Calibration segment RT Range \u00b6 Specifies the rt range that shall be searched for calibrant ions. Usually either the beginning or end of a HPLC run. Minimum height \u00b6 A minimum intensity for reference compounds to be used as calibrant signals for determination of the calibration. Calculating CCS values \u00b6 After a calibration as been set (Agilent/Waters/Bruker mzML) (Bruker tdf works out-of-the-box) CCS values can be calculated via Feature list methods -> Processing -> Calculate CCS values . Here, a default charge state may be set, in case it could not be determined. Otherwise, the charge state determined via the isotope pattern will be used. Olena Mokshyna (45.74%), SteffenHeu (54.26%)","title":"CCS calibration"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#ccs-calibration-and-calculation","text":"","title":"CCS Calibration and calculation"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#description","text":"The modules described in this section can be found in Feature list methods \u2192 Processing \u2192 Internal reference CCS calibration / External CCS calibration / Calculate CCS values . Accurate determination of CCS values requires a valid CCS calibration and molecule charge states to be detected. A CCS calibration can be either imported or created from internal reference. timsTOF raw data can be recalibrated using data analysis and imported in MZmine. The recalibrated data will be used by default. (see Calculating CCS values ) mzML raw data requires the determination of a calibration function from the raw data (e.g. as detected features) or as import from an external file. (see importing an external CCS calibration and refernce CCS calibration )","title":"Description"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#importing-an-external-ccs-calibration","text":"Agilent calibration data can be imported from the \"OverrideImsCal.xml\" file in the Agilent raw data folder. Waters calibration data can be imported from the \"mob_cal.csv\" file in the Waters raw data folder. The \"_extern.inf\" file is also required, but will be read automatically when the \"mob_cal.csv\" is selected. The calibration import is accessed via Feature list methods -> Processing -> External CCS Calibration . Then select the calibration \"OverrideImsCal.xml\"/\"mob_cal.csv\" from the raw data folder, and select the raw data files the calibration should be applied to.","title":"Importing an external CCS calibration"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#reference-css-calibration","text":"If a mobility calibrant is infused during an HPLC run of every sample, a CCS calibration can be calculated on a per-raw file basis. (Common procedure on Bruker devices) Otherwise, a single run can be used to calibrate multiple files. Please note that this is currently only supported for TIMS and DTIMS data. The calibration module can be accessed via Feature list methods -> Processing -> Internal reference calibration .","title":"Reference CSS calibration"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#set-to-additional-raw-files","text":"If a calibration calculated from a single feature list shall be applied to multiple other raw files, the raw files can be selected here. This requires only a single raw file to be selected.","title":"Set to additional raw files"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#feature-list-with-reference-compounds","text":"Specifies (a) feature list(s) that contains the reference compounds. If multiple feature lists are selected, every feature list will be searched for reference compounds, and the calibration will be used for the raw data files in the particular feature list. This means that no raw data file may be selected. (Cannot set multiple calibrations to a single raw file) If a single feature list is selected, the calibration may be applied to additional raw data files via the Set to additional raw files parameter.","title":"Feature list (with reference compounds)"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#reference-list","text":"Specifies a \".csv\" reference list of for CCS calibrant ions. Must contain the columns \"mz\", \"mobility\", \"ccs\", \"charge\". Columns must be separated by \";\". The ion mode may be specified via the charge of the ion, e.g., as 1 or -1. Only the correct polarity will be used to calculate the calibration.","title":"Reference list"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#mz-tolerance","text":"The m/z tolerance for the reference compounds.","title":"m/z tolerance"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#mobility-tolerance","text":"The mobility tolerance to detect the reference compounds.","title":"Mobility tolerance"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#calibration-segment-rt-range","text":"Specifies the rt range that shall be searched for calibrant ions. Usually either the beginning or end of a HPLC run.","title":"Calibration segment RT Range"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#minimum-height","text":"A minimum intensity for reference compounds to be used as calibrant signals for determination of the calibration.","title":"Minimum height"},{"location":"module_docs/id_ccs_calibration/ccs_calibration.html#calculating-ccs-values","text":"After a calibration as been set (Agilent/Waters/Bruker mzML) (Bruker tdf works out-of-the-box) CCS values can be calculated via Feature list methods -> Processing -> Calculate CCS values . Here, a default charge state may be set, in case it could not be determined. Otherwise, the charge state determined via the isotope pattern will be used. Olena Mokshyna (45.74%), SteffenHeu (54.26%)","title":"Calculating CCS values"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html","text":"Lipid Annotation \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Lipid annotation This module contains methods to search for lipids in the feature lists. Potential lipids will be annotated according to their accurate mass on MS 1 level. If MS/MS data is available, an identification on fatty acid residue level is also possible. MS/MS rules were derived from various sources [ 2-4 ] or from MS/MS experiments performed in the Hayen lab (University of M\u00fcnster, Germany) If you use the Lipid Annotation Module, please cite the MZmine paper and the articles from the references section. References \u00b6 Korf, A., Jeck, V., Schmid, R., Helmer, P. O., & Hayen, H. (2019). Lipid Species Annotation at Double Bond Position Level with Custom Databases by Extension of the MZmine Open-Source Software Package. Analytical chemistry, 91(8), 5098-5105. DOI: 10.1021/acs.analchem.8b05493 LipidBlast. Kind, T., Liu, K. H., Lee, D. Y., DeFelice, B., Meissen, J. K., & Fiehn, O. (2013). LipidBlast in silico tandem mass spectrometry database for lipid identification. Nature methods, 10(8), 755. 10.1038/nmeth.2551 MoNA https://mona.fiehnlab.ucdavis.edu/ LipidMatch. Koelmel, J. P. et al. (2017). LipidMatch: an automated workflow for rule-based lipid identification using untargeted high-resolution tandem mass spectrometry data. BMC bioinformatics, 18(1), 331. DOI: 10.1186/s12859-017-1744-3 Parameters \u00b6 Lipid classes \u00b6 Selection of lipid classes to consider for annotation based on the backbone. Number of carbon in chains \u00b6 Set the number of carbon atoms in chains. Number of double bonds \u00b6 Set the number of double bonds in chains. m/z tolerance MS1 level \u00b6 Enter m/z tolerance for exact mass database matching on MS1 level Search for lipid class-specific fragments in MS/MS spectra \u00b6 Choose if you want to search for lipid class specific fragments in the MS/MS spectra. To see which lipid class has a MS/MS library check out the database table. Search for custom lipid class \u00b6 If chosen, the user can add their own custom class that will be used for further search. This feature allows the user to build any possible lipid, based on the already implemented lipids. This also allows the annotation of lipid derivatization products. Entered modifications can be exported and/or imported using the buttons on the right side. Show database \u00b6 By clicking the button \"Show database\" at the bottom of the window, the user can browse through a database table which holds the information of the created lipid database. Results description \u00b6 Peaks will be annotated as potential lipids by setting its peak identity. Always check for multiple assignments and compare the status with the database table and Kendrick plots! The comment holds information on the utilized ionization method, mass accuracy and MS/MS annotation. An MS/MS annotation will be added if MS/MS data was acquired and fragmentation information is listed in the database. More MS/MS data will be added in the future. Olena Mokshyna","title":"Lipid annotation"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#lipid-annotation","text":"","title":"Lipid Annotation"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Lipid annotation This module contains methods to search for lipids in the feature lists. Potential lipids will be annotated according to their accurate mass on MS 1 level. If MS/MS data is available, an identification on fatty acid residue level is also possible. MS/MS rules were derived from various sources [ 2-4 ] or from MS/MS experiments performed in the Hayen lab (University of M\u00fcnster, Germany) If you use the Lipid Annotation Module, please cite the MZmine paper and the articles from the references section.","title":"Description"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#references","text":"Korf, A., Jeck, V., Schmid, R., Helmer, P. O., & Hayen, H. (2019). Lipid Species Annotation at Double Bond Position Level with Custom Databases by Extension of the MZmine Open-Source Software Package. Analytical chemistry, 91(8), 5098-5105. DOI: 10.1021/acs.analchem.8b05493 LipidBlast. Kind, T., Liu, K. H., Lee, D. Y., DeFelice, B., Meissen, J. K., & Fiehn, O. (2013). LipidBlast in silico tandem mass spectrometry database for lipid identification. Nature methods, 10(8), 755. 10.1038/nmeth.2551 MoNA https://mona.fiehnlab.ucdavis.edu/ LipidMatch. Koelmel, J. P. et al. (2017). LipidMatch: an automated workflow for rule-based lipid identification using untargeted high-resolution tandem mass spectrometry data. BMC bioinformatics, 18(1), 331. DOI: 10.1186/s12859-017-1744-3","title":"References"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#lipid-classes","text":"Selection of lipid classes to consider for annotation based on the backbone.","title":"Lipid classes"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#number-of-carbon-in-chains","text":"Set the number of carbon atoms in chains.","title":"Number of carbon in chains"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#number-of-double-bonds","text":"Set the number of double bonds in chains.","title":"Number of double bonds"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#mz-tolerance-ms1-level","text":"Enter m/z tolerance for exact mass database matching on MS1 level","title":"m/z tolerance MS1 level"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#search-for-lipid-class-specific-fragments-in-msms-spectra","text":"Choose if you want to search for lipid class specific fragments in the MS/MS spectra. To see which lipid class has a MS/MS library check out the database table.","title":"Search for lipid class-specific fragments in MS/MS spectra"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#search-for-custom-lipid-class","text":"If chosen, the user can add their own custom class that will be used for further search. This feature allows the user to build any possible lipid, based on the already implemented lipids. This also allows the annotation of lipid derivatization products. Entered modifications can be exported and/or imported using the buttons on the right side.","title":"Search for custom lipid class"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#show-database","text":"By clicking the button \"Show database\" at the bottom of the window, the user can browse through a database table which holds the information of the created lipid database.","title":"Show database"},{"location":"module_docs/id_lipid_annotation/lipid-annotation.html#results-description","text":"Peaks will be annotated as potential lipids by setting its peak identity. Always check for multiple assignments and compare the status with the database table and Kendrick plots! The comment holds information on the utilized ionization method, mass accuracy and MS/MS annotation. An MS/MS annotation will be added if MS/MS data was acquired and fragmentation information is listed in the database. More MS/MS data will be added in the future. Olena Mokshyna","title":"Results description"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html","text":"MS2 Similarity Search \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 MS2 similarity search Ions arising from compounds with similar chemical structures often give similar fragmentation patterns (MS2 spectra). Therefore, calculating the similarity between MS2 spectra is a useful approach for the discovery of structurally similar compounds. This module calculates the similarity between centroided MS2 spectra associated with two feature lists. These two feature lists can be the same feature list, or different feature lists. The module outputs the result of the search, the MS2 similarity comparisons of feature list (1) with feature list (2), into the \"Identity\" column of feature list (1). In practice, you can consider the features in feature lists (1) as \"bait\", which is used to \"fish\" for MS2 similarity from feature list (2). Feature list (1) or feature list (2) can be a single peak + MS2 spectra, or an entire experiment. MS2 similarity score \u00b6 The similarity metric used is as follows: For all MS2 spectra in feature list (1) \"MS2 spectra A\" , and feature list (2) \"MS2 spectra B\" , iterate over all ions in MS2 spectra A ( ion \"i\" ), and over all ions in MS2 spectra B ( ion \"j\" ). For a given ion, only include this ion in following calculations if its intensity is greater than the minimum ion intensity parameter . Compare the m/z values of ions \"i\" and \"j\". If these m/z values are within the range specified by the m/z tolerance parameter, consider these ions identical, and therefore \"matched\". If two ions match, roughly score the match by multiplying the intensity of ions \"i\" and \"j\". Save that as the \"ion match subscore\" . Repeat this for every ion i and j in MS2 spectra A and MS2 spectra B, and report the sum of the ion match subscores as the total \"spectral match score\" . If this spectral match score is greater than the minimum spectral match score parameter, annotate the \"Identity\" column of feature list (1) with the matched ions, and the total spectral match score of the MS2 similarity calculation. Interpreting the results \u00b6 The score from of a MS2 similarity match should not be taken as an absolute measure, as it depends on the instrument reported intensity value (which is an uncalibrated and relative measure). That being said, as the reported score increases when the intensity of the matched ion is higher, it is useful as a quick metric to find the matches between the most intense MS2 spectra, and potentially the most reliable compounds. It is worth mentioning that the link between the MS2 spectra, and the presumed precursor ion in the feature list is somewhat tentative. As the isolation window of the quadrapoles typically used for selection of the precursor ion in MS2 fragmentation analysis is typically around ~1 m/z unit, ions from the MS2 fragmentation spectra from an abundant compound with a long chromatographic tail will often show up in the MS2 values of unrelated compounds, but whose precursor isolation window picks up ions from the original compound. An experimental Python script which converts the MS2 similarity relationships exported from MZmine2 in CSV format into GraphML format suitable for viewing in the freely available graph manipulation software Cytoscape is available on Github ( https://github.com/photocyte/ms2_graph ). Parameters \u00b6 Feature list (1) \u00b6 A single feature list with features that have associated centroided MS2 spectra. Results from the module are output into the identifications column of Feature list (1) Feature list (2) \u00b6 A single feature list, which has centroided MS2 spectra (in the masslist). This can be the same as Feature list (1), or a different peaklist / experiment. For best results Feature list (2) should have MS data with the same polarity as Feature list (1), and close range of m/z values close (e.g. LC/MS data obtained on the same day, or m/z calibrated between the two feature lists). m/z tolerance \u00b6 Maximum allowed m/z difference between two ions to be considered identical, and therefore \"matched\". Minimum MS2 ion intensity \u00b6 Minimum ion intensity to consider in MS2 comparison. Ions of the MS2 spectra below this threshold will be ignored. This parameter depends on your instrument, but 1e5 is a reasonable value. Set to 0 to use all ions. Minimum ion(s) matched per MS2 comparison \u00b6 Minimum number of matched ions needed in a given MS2 similarity comparison. Otherwise, that spectral match will not be reported. This depends on the compounds being compared, but roughly speaking 2-5 is a reasonable number. For complex spectra values of 10-20+ may be reasonable. Set to 0 to report all matches. Minimum spectral match score to report \u00b6 Minimum spectral match score threshold, below which spectral matches will not be reported. Olena Mokshyna","title":"MS2 similarity search"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#ms2-similarity-search","text":"","title":"MS2 Similarity Search"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 MS2 similarity search Ions arising from compounds with similar chemical structures often give similar fragmentation patterns (MS2 spectra). Therefore, calculating the similarity between MS2 spectra is a useful approach for the discovery of structurally similar compounds. This module calculates the similarity between centroided MS2 spectra associated with two feature lists. These two feature lists can be the same feature list, or different feature lists. The module outputs the result of the search, the MS2 similarity comparisons of feature list (1) with feature list (2), into the \"Identity\" column of feature list (1). In practice, you can consider the features in feature lists (1) as \"bait\", which is used to \"fish\" for MS2 similarity from feature list (2). Feature list (1) or feature list (2) can be a single peak + MS2 spectra, or an entire experiment.","title":"Description"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#ms2-similarity-score","text":"The similarity metric used is as follows: For all MS2 spectra in feature list (1) \"MS2 spectra A\" , and feature list (2) \"MS2 spectra B\" , iterate over all ions in MS2 spectra A ( ion \"i\" ), and over all ions in MS2 spectra B ( ion \"j\" ). For a given ion, only include this ion in following calculations if its intensity is greater than the minimum ion intensity parameter . Compare the m/z values of ions \"i\" and \"j\". If these m/z values are within the range specified by the m/z tolerance parameter, consider these ions identical, and therefore \"matched\". If two ions match, roughly score the match by multiplying the intensity of ions \"i\" and \"j\". Save that as the \"ion match subscore\" . Repeat this for every ion i and j in MS2 spectra A and MS2 spectra B, and report the sum of the ion match subscores as the total \"spectral match score\" . If this spectral match score is greater than the minimum spectral match score parameter, annotate the \"Identity\" column of feature list (1) with the matched ions, and the total spectral match score of the MS2 similarity calculation.","title":"MS2 similarity score"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#interpreting-the-results","text":"The score from of a MS2 similarity match should not be taken as an absolute measure, as it depends on the instrument reported intensity value (which is an uncalibrated and relative measure). That being said, as the reported score increases when the intensity of the matched ion is higher, it is useful as a quick metric to find the matches between the most intense MS2 spectra, and potentially the most reliable compounds. It is worth mentioning that the link between the MS2 spectra, and the presumed precursor ion in the feature list is somewhat tentative. As the isolation window of the quadrapoles typically used for selection of the precursor ion in MS2 fragmentation analysis is typically around ~1 m/z unit, ions from the MS2 fragmentation spectra from an abundant compound with a long chromatographic tail will often show up in the MS2 values of unrelated compounds, but whose precursor isolation window picks up ions from the original compound. An experimental Python script which converts the MS2 similarity relationships exported from MZmine2 in CSV format into GraphML format suitable for viewing in the freely available graph manipulation software Cytoscape is available on Github ( https://github.com/photocyte/ms2_graph ).","title":"Interpreting the results"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#feature-list-1","text":"A single feature list with features that have associated centroided MS2 spectra. Results from the module are output into the identifications column of Feature list (1)","title":"Feature list (1)"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#feature-list-2","text":"A single feature list, which has centroided MS2 spectra (in the masslist). This can be the same as Feature list (1), or a different peaklist / experiment. For best results Feature list (2) should have MS data with the same polarity as Feature list (1), and close range of m/z values close (e.g. LC/MS data obtained on the same day, or m/z calibrated between the two feature lists).","title":"Feature list (2)"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#mz-tolerance","text":"Maximum allowed m/z difference between two ions to be considered identical, and therefore \"matched\".","title":"m/z tolerance"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#minimum-ms2-ion-intensity","text":"Minimum ion intensity to consider in MS2 comparison. Ions of the MS2 spectra below this threshold will be ignored. This parameter depends on your instrument, but 1e5 is a reasonable value. Set to 0 to use all ions.","title":"Minimum MS2 ion intensity"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#minimum-ions-matched-per-ms2-comparison","text":"Minimum number of matched ions needed in a given MS2 similarity comparison. Otherwise, that spectral match will not be reported. This depends on the compounds being compared, but roughly speaking 2-5 is a reasonable number. For complex spectra values of 10-20+ may be reasonable. Set to 0 to report all matches.","title":"Minimum ion(s) matched per MS2 comparison"},{"location":"module_docs/id_ms2_similarity/ms2-similarity-search.html#minimum-spectral-match-score-to-report","text":"Minimum spectral match score threshold, below which spectral matches will not be reported. Olena Mokshyna","title":"Minimum spectral match score to report"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html","text":"Local compound database search \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search precursor mass \u2192 Local compound database (CSV) search This method assigns identity to features according to their m/z and retention time values. If you want to filter your feature list for a list of target compounds afterwards, you can use the Feature list rows filter with the only identified option. The user has to provide a database of m/z values (or neutral masses, formulae, smiles strings to calculate m/zs from) and retention times in *.csv format ( see below). Database file \u00b6 Database file has to be provided in *.csv format (Comma-Separated Values). Such files can be exported from a spreadsheet software such as MS Excel, or edited manually using a text editor. The following examples shows the structure of the database file: ID,m/z,Retention time (min),Identity,Formula 1,175.121,24.5,Arginine,C6H14N4O2 2,133.063,11.9,Asparagine,C4H8N2O3 3,134.047,11.7,Aspartate,C4H7NO4 If the m/z value or Retention time value in the CSV file is 0, then the value is considered as a wild card. E.g, the following item will match all peaks of 174.121 m/z without considering the retention time: 1,175.121,0,Arginine,C6H14N4O2 The available fields in a library file include: Field name Field description neutral mass Neutral mass mz Precursor m/z rt Retention time formula Formula smiles SMILES name Compound name CCS CCS, \u00c5 2 mobility Ion mobility comment Text comment adduct Information on adduct PubChemID Compound ID in PubChem database Parameters \u00b6 Database file \u00b6 Name of file that contains information for peak identification. Field separator \u00b6 Character(s) used to separate fields in the database file. Columns \u00b6 Columns that will be imported from the library file. The choice of columns depends on the availability of mobility data, information about adducts, and presence of PubChemID in your database file. m/z tolerance \u00b6 Maximum allowed m/z difference to set an identification to a peak. Retention time tolerance \u00b6 Maximum allowed retention time difference to set an identification to a peak. Mobility time tolerance \u00b6 Maximum allowed tolerance between two mobility values. CCS tolerance (%) \u00b6 Maximum allowed difference (in percents) between two CCS values. Use adducts \u00b6 If chosen, m/z values for multiple adducts will be calculated and matched against feature list. For this option, you have to provide a neutral mass, a formula or a smiles code to calculate the m/z from. Olena Mokshyna (73.12%), SteffenHeu (26.88%)","title":"Local database search"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#local-compound-database-search","text":"","title":"Local compound database search"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search precursor mass \u2192 Local compound database (CSV) search This method assigns identity to features according to their m/z and retention time values. If you want to filter your feature list for a list of target compounds afterwards, you can use the Feature list rows filter with the only identified option. The user has to provide a database of m/z values (or neutral masses, formulae, smiles strings to calculate m/zs from) and retention times in *.csv format ( see below).","title":"Description"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#database-file","text":"Database file has to be provided in *.csv format (Comma-Separated Values). Such files can be exported from a spreadsheet software such as MS Excel, or edited manually using a text editor. The following examples shows the structure of the database file: ID,m/z,Retention time (min),Identity,Formula 1,175.121,24.5,Arginine,C6H14N4O2 2,133.063,11.9,Asparagine,C4H8N2O3 3,134.047,11.7,Aspartate,C4H7NO4 If the m/z value or Retention time value in the CSV file is 0, then the value is considered as a wild card. E.g, the following item will match all peaks of 174.121 m/z without considering the retention time: 1,175.121,0,Arginine,C6H14N4O2 The available fields in a library file include: Field name Field description neutral mass Neutral mass mz Precursor m/z rt Retention time formula Formula smiles SMILES name Compound name CCS CCS, \u00c5 2 mobility Ion mobility comment Text comment adduct Information on adduct PubChemID Compound ID in PubChem database","title":"Database file"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#database-file_1","text":"Name of file that contains information for peak identification.","title":"Database file"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#field-separator","text":"Character(s) used to separate fields in the database file.","title":"Field separator"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#columns","text":"Columns that will be imported from the library file. The choice of columns depends on the availability of mobility data, information about adducts, and presence of PubChemID in your database file.","title":"Columns"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#mz-tolerance","text":"Maximum allowed m/z difference to set an identification to a peak.","title":"m/z tolerance"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#retention-time-tolerance","text":"Maximum allowed retention time difference to set an identification to a peak.","title":"Retention time tolerance"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#mobility-time-tolerance","text":"Maximum allowed tolerance between two mobility values.","title":"Mobility time tolerance"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#ccs-tolerance","text":"Maximum allowed difference (in percents) between two CCS values.","title":"CCS tolerance (%)"},{"location":"module_docs/id_prec_local_cmpd_db/local-cmpd-db-search.html#use-adducts","text":"If chosen, m/z values for multiple adducts will be calculated and matched against feature list. For this option, you have to provide a neutral mass, a formula or a smiles code to calculate the m/z from. Olena Mokshyna (73.12%), SteffenHeu (26.88%)","title":"Use adducts"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html","text":"Precursor search in local spectral MS/MS library \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search precursor mass \u2192 Precursor search in spectral libraries This module uses a local spectral MS/MS library to search for putative precursor ions in a feature list. Supported formats: MoNA *.json, NIST *.msp, GNPS *.json (internal library submission format), and JCAMP-DX *.jdx. Parameters \u00b6 Spectral libraries file (MS/MS) \u00b6 Name of the library file of the supported format. Precursor m/z tolerance \u00b6 Matches the average row m/z against the precursor m/z of the spectral library entry Retention time tolerance \u00b6 Optional parameter , should only be used if the DB entry has a retention time Olena Mokshyna","title":"Precursor search in local spectral MS/MS library"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html#precursor-search-in-local-spectral-msms-library","text":"","title":"Precursor search in local spectral MS/MS library"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search precursor mass \u2192 Precursor search in spectral libraries This module uses a local spectral MS/MS library to search for putative precursor ions in a feature list. Supported formats: MoNA *.json, NIST *.msp, GNPS *.json (internal library submission format), and JCAMP-DX *.jdx.","title":"Description"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html#spectral-libraries-file-msms","text":"Name of the library file of the supported format.","title":"Spectral libraries file (MS/MS)"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html#precursor-mz-tolerance","text":"Matches the average row m/z against the precursor m/z of the spectral library entry","title":"Precursor m/z tolerance"},{"location":"module_docs/id_prec_local_spectra_lib/local-spectra-lib-search.html#retention-time-tolerance","text":"Optional parameter , should only be used if the DB entry has a retention time Olena Mokshyna","title":"Retention time tolerance"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html","text":"Online compound database search \u00b6 This module has known bugs and is being updated, which might affect its functionality Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search precursor mass \u2192 Online compound database search This module allows identification of peaks or whole peak lists using an on-line compound database. Databases are queried for the calculated neutral mass of the peak and matching compounds are returned. If a user is interested in more comprehensive online compound database search, they can export their data to Sirius software. Parameters \u00b6 Database \u00b6 On-line database to search ( list of the available databases ). Ionization type \u00b6 Type of ionization that produced the peak subjected to identification. Number of results \u00b6 Limit for the number of results to be retrieved from the on-line database. m/z tolerance \u00b6 Maximum allowed m/z difference to set an identification to a peak. Isotope pattern filter \u00b6 If selected, only results which fit the required isotope pattern similarity score will be returned. Currently supported databases \u00b6 Supported databases are listed below. Support for other databases may be implemented as additional plugins. KEGG KEGG database ( http://www.genome.jp/kegg/ ) contains metabolites and other biomolecules present in natural metabolic pathways. PubChem PubChem database ( http://pubchem.ncbi.nlm.nih.gov/ ) contains millions of chemical compound structures. HMDB The Human Metabolome Database (HMDB) ( http://www.hmdb.ca/ ) contains over 7,000 known metabolites found in human body. YMDB The Yeast Metabolome Database (YMDB) ( http://www.ymdb.ca ) is a manually curated database of small molecule metabolites found in or produced by Saccharomyces cerevisiae (also known as Baker\u2019s yeast and Brewer\u2019s yeast). LipidMaps LipidMaps Structure Database (LMSD) ( https://www.lipidmaps.org/databases/lmsd ) is a database of structures and annotations of biologically relevant lipids, containing over 47000 different lipids. MassBank.eu MassBank ( https://massbank.eu/MassBank/ ) is an open source mass spectral library for the identification of small chemical molecules of metabolomics, exposomics and environmental relevance. The majority of MassBank contents now features high-resolution mass spectrometry data. ChemSpider The ChemSpider database ( http://www.chemspider.com/ ) contains over 67 million compounds. To search ChemSpider you must provide a \"Security key\" from your ChemSpider API account. If you don't have an account, please register at https://developer.rsc.org . MetaCyc MetaCyc ( https://metacyc.org/ ) is a curated database of experimentally elucidated metabolic pathways from all biological domains. MetaCyc currently contains 2937 pathways, 17,780 reactions and 18,124 metabolites. Olena Mokshyna","title":"Online compound database search"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#online-compound-database-search","text":"This module has known bugs and is being updated, which might affect its functionality","title":"Online compound database search"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search precursor mass \u2192 Online compound database search This module allows identification of peaks or whole peak lists using an on-line compound database. Databases are queried for the calculated neutral mass of the peak and matching compounds are returned. If a user is interested in more comprehensive online compound database search, they can export their data to Sirius software.","title":"Description"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#database","text":"On-line database to search ( list of the available databases ).","title":"Database"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#ionization-type","text":"Type of ionization that produced the peak subjected to identification.","title":"Ionization type"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#number-of-results","text":"Limit for the number of results to be retrieved from the on-line database.","title":"Number of results"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#mz-tolerance","text":"Maximum allowed m/z difference to set an identification to a peak.","title":"m/z tolerance"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#isotope-pattern-filter","text":"If selected, only results which fit the required isotope pattern similarity score will be returned.","title":"Isotope pattern filter"},{"location":"module_docs/id_prec_online_db/online-cmpd-db-search.html#currently-supported-databases","text":"Supported databases are listed below. Support for other databases may be implemented as additional plugins. KEGG KEGG database ( http://www.genome.jp/kegg/ ) contains metabolites and other biomolecules present in natural metabolic pathways. PubChem PubChem database ( http://pubchem.ncbi.nlm.nih.gov/ ) contains millions of chemical compound structures. HMDB The Human Metabolome Database (HMDB) ( http://www.hmdb.ca/ ) contains over 7,000 known metabolites found in human body. YMDB The Yeast Metabolome Database (YMDB) ( http://www.ymdb.ca ) is a manually curated database of small molecule metabolites found in or produced by Saccharomyces cerevisiae (also known as Baker\u2019s yeast and Brewer\u2019s yeast). LipidMaps LipidMaps Structure Database (LMSD) ( https://www.lipidmaps.org/databases/lmsd ) is a database of structures and annotations of biologically relevant lipids, containing over 47000 different lipids. MassBank.eu MassBank ( https://massbank.eu/MassBank/ ) is an open source mass spectral library for the identification of small chemical molecules of metabolomics, exposomics and environmental relevance. The majority of MassBank contents now features high-resolution mass spectrometry data. ChemSpider The ChemSpider database ( http://www.chemspider.com/ ) contains over 67 million compounds. To search ChemSpider you must provide a \"Security key\" from your ChemSpider API account. If you don't have an account, please register at https://developer.rsc.org . MetaCyc MetaCyc ( https://metacyc.org/ ) is a curated database of experimentally elucidated metabolic pathways from all biological domains. MetaCyc currently contains 2937 pathways, 17,780 reactions and 18,124 metabolites. Olena Mokshyna","title":"Currently supported databases"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html","text":"NIST MS search \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 NIST MS Search or, for an individual row in a feature table highlight the row, right-click on the selection and choose Search \u2192 NIST MS Search from the pop-up menu. This module allows searching spectra against spectral libraries using the NIST MS Search program , which accepts spectra as input to its searches. The MS level may be specified to limit a search to MS/MS fragment spectra, clustered spectra produced from any Spectral Deconvolution module, or MS1 precursors ions. The spectra will be searched using the default library search parameters in the NIST MS Search program. To adjust these parameters: open the program, adjust the library search parameters, and save the configuration to a *.ini file. Automation must be enabled in the library search options to enable automatic searching. Be sure all appropriate libraries are included before starting a search. Repeated MS/MS spectra may be merged between multiple data files using the Merge MS/MS (experimental) module. The input Mass list filters the fragment ions by intensity, and repeatable signals are assessed via cosine dot product. Requirements \u00b6 This module relies on the installed NIST MS Search software, which is currently only available for Microsoft Windows . Parameters \u00b6 NIST MS Search directory \u00b6 Full path to the directory containing the NIST MS Search executable ( nistms$.exe ). MS level \u00b6 MS spectra level for searching. Use MS level = 1 to search for MS1 spectra or ADAP-GC clustered spectra produced from Spectral Deconvolution modules. Min cosine similarity \u00b6 The minimum cosine similarity score (dot product) for identification. Merge MS/MS (experimental) \u00b6 Optional parameter. Merge multiple high-quality MS/MS spectra into consensus feature instead of using the most intense one. More details are available here . Integer m/z \u00b6 Optional parameter . Merging mode for fractional m/z to unit mass. Converts accurate mass m/z measurements to low-resolution integer values. Available options are Sum or Maximum. Spectrum Import \u00b6 Options for import, can be by either Overwrite (overwriting previous spectra) or Append (appending new ones). Olena Mokshyna","title":"NIST MS search"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#nist-ms-search","text":"","title":"NIST MS search"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 NIST MS Search or, for an individual row in a feature table highlight the row, right-click on the selection and choose Search \u2192 NIST MS Search from the pop-up menu. This module allows searching spectra against spectral libraries using the NIST MS Search program , which accepts spectra as input to its searches. The MS level may be specified to limit a search to MS/MS fragment spectra, clustered spectra produced from any Spectral Deconvolution module, or MS1 precursors ions. The spectra will be searched using the default library search parameters in the NIST MS Search program. To adjust these parameters: open the program, adjust the library search parameters, and save the configuration to a *.ini file. Automation must be enabled in the library search options to enable automatic searching. Be sure all appropriate libraries are included before starting a search. Repeated MS/MS spectra may be merged between multiple data files using the Merge MS/MS (experimental) module. The input Mass list filters the fragment ions by intensity, and repeatable signals are assessed via cosine dot product.","title":"Description"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#requirements","text":"This module relies on the installed NIST MS Search software, which is currently only available for Microsoft Windows .","title":"Requirements"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#nist-ms-search-directory","text":"Full path to the directory containing the NIST MS Search executable ( nistms$.exe ).","title":"NIST MS Search directory"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#ms-level","text":"MS spectra level for searching. Use MS level = 1 to search for MS1 spectra or ADAP-GC clustered spectra produced from Spectral Deconvolution modules.","title":"MS level"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#min-cosine-similarity","text":"The minimum cosine similarity score (dot product) for identification.","title":"Min cosine similarity"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#merge-msms-experimental","text":"Optional parameter. Merge multiple high-quality MS/MS spectra into consensus feature instead of using the most intense one. More details are available here .","title":"Merge MS/MS (experimental)"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#integer-mz","text":"Optional parameter . Merging mode for fractional m/z to unit mass. Converts accurate mass m/z measurements to low-resolution integer values. Available options are Sum or Maximum.","title":"Integer m/z"},{"location":"module_docs/id_spectra_NIST/NIST-ms-search.html#spectrum-import","text":"Options for import, can be by either Overwrite (overwriting previous spectra) or Append (appending new ones). Olena Mokshyna","title":"Spectrum Import"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html","text":"Chemical formula prediction \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Chemical formula prediction This module attempts to calculate all possible molecular formulas for every peak in the peak list, using given elemental and heuristic constraints. For a detailed description of the functionality and the embedded algorithms, please see the publication [ 1 ]. References \u00b6 Pluskal T. et al, Highly Accurate Chemical Formula Prediction Tool Utilizing High-Resolution Mass Spectra, MS/MS Fragmentation, Heuristic Rules, and Isotope Pattern Matching. Anal Chem (2012), 84(10):4396-403. DOI: 10.1021/ac3000418 . Kind and Fiehn, Seven Golden Rules for heuristic filtering of molecular formulas obtained by accurate mass spectrometry. BMC Bioinformatics (2007). DOI: 10.1186/1471-2105-8-105 . Parameters \u00b6 Charge \u00b6 The neutral mass is calculated from the peak m/z value, its charge and type of ionization adduct. Ionization type \u00b6 The neutral mass is calculated from the peak m/z value, its charge and type of ionization adduct. Sorting \u00b6 Optional parameter If this option is chosen, the user-defined sorting is applied to all selected feature lists. Max best formulas per feature \u00b6 This parameter defines the maximum number of formulas to be added to a single feature. m/z tolerance \u00b6 Tolerance of the neutral mass for searching the formula. Elements \u00b6 Elements allowed in the formula and their minimum and maximum counts. Element count heuristics \u00b6 Optional parameter Selection of heuristic restrictions on element counts. These heuristics check the formula's element counts as defined in [ 2 ]. Available parameters \u00b6 These include: H/C ratio Ratio of hydrogen to carbon atoms, with available value range 0.1 <= H/C ratio <= 6. NOPS/C ratios Ratio of nitrogen to carbon atoms, with available valueN/C ratio <= 4, Ratio of oxygen to carbon atoms O/C ratio <= 3, Ratio of phosphorus to carbon atoms P/C ratio <= 2, Ratio of sulphur to carbon atoms S/C ratio <= 3 Multiple element counts If this parameter is chosen, then several following rules apply: if number of N/O/P/S atoms all > 1 then N< 10, O < 20, P < 4, S < 3 if number of N/O/P atoms all > 3 then N < 11, O < 22, P < 6 if number of O/P/S atoms all > 1 then O < 14, P < 3, S < 3 if number of P/S/N atoms all > 1 then P < 3, S < 3, N < 4 if number of N/O/S atoms all > 6 then N < 19 O < 14 S < 8 RDBE restrictions \u00b6 Optional parameter Selection of restrictions on RDBE (rings double bonds) values. The Ring Double Bond Equivalents (RDBE) value estimates the number of rings and unsaturated bonds in a molecule. It can be calculated from a chemical formula using the following general equation: \\[RDBE=1+\\frac{1}{2}(\\sum_{i}n_i(\\nu_i-2))\\] where \\(n_i\\) is the number of atoms and \\(\\nu_i\\) the formal valence of the element i. Theoretically, each ring or a double bond increases the RDBE value by 1, while each triple bond increases the value by 2. This equation can only be used for formulas composed of elements with a well-defined formal valence. A number of exceptions to the RDBE rule are known, however, the RDBE value still provides a useful indicator regarding the validity of a molecular formula. Available parameters \u00b6 These include: RDBE range Range of allowed RDBE (Range or Double Bonds Equivalents) value. [ 2 ] recommended the RDBE upper limit of 40 for common chemical compounds. The authors also stated that RDBE should not be negative, although certain exceptions may occur when formal valence states are exceeded. RDBE must be an integer Only integer values are allowed for RDBE. This condition is a natural implication of the principle of valence balance, which states that the number of atoms with odd valence must be even. Such assumption is valid for all neutral, non-radical molecules. Isotope pattern score \u00b6 Optional parameter If selected, only results that fit the required isotope pattern similarity score will be returned. Several modules in MZmine offer the option the compare the isotope patterns of peaks and assign a score (percentage) of similarity to them. Until MZmine version 2.2, the CDK (Chemistry Development Kit) library was used to perform this operation. An improved algorithm, introduced in MZmine 3, is described below. The similarity of two isotope patterns is determined as follows: Both isotope patterns are normalized (such that highest isotope in each pattern has the intensity of 1.0) and merged into a single spectrum. In this single spectrum all isotopes from the first pattern have a positive intensity, while the isotopes of the second pattern have negative intensity. A sliding window of user-defined width (\"Isotope m/z tolerance\" parameter) is moved over the whole m/z range, from the lowest m/z to the highest. Each pair of isotope peaks fitting within the window is added together, forming a single peak with the m/z value of the higher m/z of the pair. The final similarity score is calculated from the remaining peaks as \\[score_{isotopes}=\\prod_{i}(1-\\mid{I_i}\\mid)\\] where \\(I_i\\) is the intensity of remaining peak \\(i\\) . A trivial observation is that for two identical isotope patterns the similarity score will be 100%, while for two completely different patterns 0% score is returned. Only a single parameter is required for the evaluation of the algorithm, defining the width of the sliding window. It should be noted, though, that the optimal value of width of the sliding window parameter might be different from the commonly perceived \u201cmass accuracy\u201d of the instrument as mass resolving power and preprocessing of the data must be considered. For example, even if the mass accuracy of the major isotopes may be less than 0.001 m/z, the mass difference between minor isotopes may be significantly higher. Additional parameters \u00b6 These include: Isotope m/z tolerance m/z tolerance which defines what isotopes would be considered same when comparing two isotopic patterns. This tolerance needs to be higher than general m/z precision of the data, because some small isotopes may overlap with the sides of bigger isotopic peaks. Minimum absolute intensity Minimum absolute intensity of the isotopes to be compared. Isotopes below this intensity will be ignored. Minimum score If the score between isotope pattern is lower, the match will be discarded. MS/MS filter \u00b6 Optional parameter Use MS/MS pattern for candidate formula evaluation. In tandem mass spectrometry (MS/MS), during fragmentation, part of the original ion is detached, and the mass of the detached part is called the neutral loss . The neutral loss represents a fragment of the original molecule, so the chemical formula of such fragment must be a subset of the chemical formula of the precursor. When searching for the ion\u2019s chemical formula, each candidate formula may therefore be evaluated using the ion\u2019s MS/MS spectrum using the algorithm described below. Mass list must be provided for the MS/MS spectrum of the ion of interest (see the Mass detection modules ). It is assumed that all items in the mass list represent true fragment ions and noise has been removed. If the mass list contains any isotopes, remove them from the list. Isotopes are defined as ions with mass approximately 1 Da higher than another ion on the list, which has higher intensity. Calculate neutral losses for all the ions on the list by subtracting the fragment ion mass from the precursor mass. Try to generate a chemical formula for each neutral loss using the elements and maximum counts of formula F, within the user-defined mass tolerance. Small neutral losses (less than 5 Da) are ignored. If at least one formula can be found, the neutral loss is considered as interpreted. The evaluation score is calculated for each candidate formula F as described belows: \\[score_{MS/MS}=\\frac{n_{found}}{n_{total}}\\] where \\(n_{found}\\) is the number of ions for which the neutral loss could be interpreted, and \\(n_{total}\\) is the total number of considered fragment ions. Available parameters \u00b6 MS/MS m/z tolerance Tolerance of the m/z value to search (+/- range). MS/MS score threshold If the score is lower than the threshold, a match is discarded. Use only top N signals Use only N most abundant signals for scoring. This option speeds up the search. Olena Mokshyna","title":"Chemical formula prediction"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#chemical-formula-prediction","text":"","title":"Chemical formula prediction"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Chemical formula prediction This module attempts to calculate all possible molecular formulas for every peak in the peak list, using given elemental and heuristic constraints. For a detailed description of the functionality and the embedded algorithms, please see the publication [ 1 ].","title":"Description"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#references","text":"Pluskal T. et al, Highly Accurate Chemical Formula Prediction Tool Utilizing High-Resolution Mass Spectra, MS/MS Fragmentation, Heuristic Rules, and Isotope Pattern Matching. Anal Chem (2012), 84(10):4396-403. DOI: 10.1021/ac3000418 . Kind and Fiehn, Seven Golden Rules for heuristic filtering of molecular formulas obtained by accurate mass spectrometry. BMC Bioinformatics (2007). DOI: 10.1186/1471-2105-8-105 .","title":"References"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#charge","text":"The neutral mass is calculated from the peak m/z value, its charge and type of ionization adduct.","title":"Charge"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#ionization-type","text":"The neutral mass is calculated from the peak m/z value, its charge and type of ionization adduct.","title":"Ionization type"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#sorting","text":"Optional parameter If this option is chosen, the user-defined sorting is applied to all selected feature lists.","title":"Sorting"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#max-best-formulas-per-feature","text":"This parameter defines the maximum number of formulas to be added to a single feature.","title":"Max best formulas per feature"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#mz-tolerance","text":"Tolerance of the neutral mass for searching the formula.","title":"m/z tolerance"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#elements","text":"Elements allowed in the formula and their minimum and maximum counts.","title":"Elements"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#element-count-heuristics","text":"Optional parameter Selection of heuristic restrictions on element counts. These heuristics check the formula's element counts as defined in [ 2 ].","title":"Element count heuristics"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#available-parameters","text":"These include: H/C ratio Ratio of hydrogen to carbon atoms, with available value range 0.1 <= H/C ratio <= 6. NOPS/C ratios Ratio of nitrogen to carbon atoms, with available valueN/C ratio <= 4, Ratio of oxygen to carbon atoms O/C ratio <= 3, Ratio of phosphorus to carbon atoms P/C ratio <= 2, Ratio of sulphur to carbon atoms S/C ratio <= 3 Multiple element counts If this parameter is chosen, then several following rules apply: if number of N/O/P/S atoms all > 1 then N< 10, O < 20, P < 4, S < 3 if number of N/O/P atoms all > 3 then N < 11, O < 22, P < 6 if number of O/P/S atoms all > 1 then O < 14, P < 3, S < 3 if number of P/S/N atoms all > 1 then P < 3, S < 3, N < 4 if number of N/O/S atoms all > 6 then N < 19 O < 14 S < 8","title":"Available parameters"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#rdbe-restrictions","text":"Optional parameter Selection of restrictions on RDBE (rings double bonds) values. The Ring Double Bond Equivalents (RDBE) value estimates the number of rings and unsaturated bonds in a molecule. It can be calculated from a chemical formula using the following general equation: \\[RDBE=1+\\frac{1}{2}(\\sum_{i}n_i(\\nu_i-2))\\] where \\(n_i\\) is the number of atoms and \\(\\nu_i\\) the formal valence of the element i. Theoretically, each ring or a double bond increases the RDBE value by 1, while each triple bond increases the value by 2. This equation can only be used for formulas composed of elements with a well-defined formal valence. A number of exceptions to the RDBE rule are known, however, the RDBE value still provides a useful indicator regarding the validity of a molecular formula.","title":"RDBE restrictions"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#available-parameters_1","text":"These include: RDBE range Range of allowed RDBE (Range or Double Bonds Equivalents) value. [ 2 ] recommended the RDBE upper limit of 40 for common chemical compounds. The authors also stated that RDBE should not be negative, although certain exceptions may occur when formal valence states are exceeded. RDBE must be an integer Only integer values are allowed for RDBE. This condition is a natural implication of the principle of valence balance, which states that the number of atoms with odd valence must be even. Such assumption is valid for all neutral, non-radical molecules.","title":"Available parameters"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#isotope-pattern-score","text":"Optional parameter If selected, only results that fit the required isotope pattern similarity score will be returned. Several modules in MZmine offer the option the compare the isotope patterns of peaks and assign a score (percentage) of similarity to them. Until MZmine version 2.2, the CDK (Chemistry Development Kit) library was used to perform this operation. An improved algorithm, introduced in MZmine 3, is described below. The similarity of two isotope patterns is determined as follows: Both isotope patterns are normalized (such that highest isotope in each pattern has the intensity of 1.0) and merged into a single spectrum. In this single spectrum all isotopes from the first pattern have a positive intensity, while the isotopes of the second pattern have negative intensity. A sliding window of user-defined width (\"Isotope m/z tolerance\" parameter) is moved over the whole m/z range, from the lowest m/z to the highest. Each pair of isotope peaks fitting within the window is added together, forming a single peak with the m/z value of the higher m/z of the pair. The final similarity score is calculated from the remaining peaks as \\[score_{isotopes}=\\prod_{i}(1-\\mid{I_i}\\mid)\\] where \\(I_i\\) is the intensity of remaining peak \\(i\\) . A trivial observation is that for two identical isotope patterns the similarity score will be 100%, while for two completely different patterns 0% score is returned. Only a single parameter is required for the evaluation of the algorithm, defining the width of the sliding window. It should be noted, though, that the optimal value of width of the sliding window parameter might be different from the commonly perceived \u201cmass accuracy\u201d of the instrument as mass resolving power and preprocessing of the data must be considered. For example, even if the mass accuracy of the major isotopes may be less than 0.001 m/z, the mass difference between minor isotopes may be significantly higher.","title":"Isotope pattern score"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#additional-parameters","text":"These include: Isotope m/z tolerance m/z tolerance which defines what isotopes would be considered same when comparing two isotopic patterns. This tolerance needs to be higher than general m/z precision of the data, because some small isotopes may overlap with the sides of bigger isotopic peaks. Minimum absolute intensity Minimum absolute intensity of the isotopes to be compared. Isotopes below this intensity will be ignored. Minimum score If the score between isotope pattern is lower, the match will be discarded.","title":"Additional parameters"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#msms-filter","text":"Optional parameter Use MS/MS pattern for candidate formula evaluation. In tandem mass spectrometry (MS/MS), during fragmentation, part of the original ion is detached, and the mass of the detached part is called the neutral loss . The neutral loss represents a fragment of the original molecule, so the chemical formula of such fragment must be a subset of the chemical formula of the precursor. When searching for the ion\u2019s chemical formula, each candidate formula may therefore be evaluated using the ion\u2019s MS/MS spectrum using the algorithm described below. Mass list must be provided for the MS/MS spectrum of the ion of interest (see the Mass detection modules ). It is assumed that all items in the mass list represent true fragment ions and noise has been removed. If the mass list contains any isotopes, remove them from the list. Isotopes are defined as ions with mass approximately 1 Da higher than another ion on the list, which has higher intensity. Calculate neutral losses for all the ions on the list by subtracting the fragment ion mass from the precursor mass. Try to generate a chemical formula for each neutral loss using the elements and maximum counts of formula F, within the user-defined mass tolerance. Small neutral losses (less than 5 Da) are ignored. If at least one formula can be found, the neutral loss is considered as interpreted. The evaluation score is calculated for each candidate formula F as described belows: \\[score_{MS/MS}=\\frac{n_{found}}{n_{total}}\\] where \\(n_{found}\\) is the number of ions for which the neutral loss could be interpreted, and \\(n_{total}\\) is the total number of considered fragment ions.","title":"MS/MS filter"},{"location":"module_docs/id_spectra_chem_formula/chem-formula-pred.html#available-parameters_2","text":"MS/MS m/z tolerance Tolerance of the m/z value to search (+/- range). MS/MS score threshold If the score is lower than the threshold, a match is discarded. Use only top N signals Use only N most abundant signals for scoring. This option speeds up the search. Olena Mokshyna","title":"Available parameters"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html","text":"Spectral similarity measures \u00b6 Weighted cosine spectral similarity \u00b6 The most common spectral similarity measure for library search is the weighted cosine similarity . Generally,the cosine similarity is calculated as following: \\[similarity = cos\\theta = (u \\cdot v) / (\\sqrt{(sum(u^2))} * \\sqrt{(sum(v^2))})\\] In case of weighted cosine similarity, the previous formula is modified according to the weighting function. In case of weighting function in form \\(m/z^a*{Intensity}^b\\) (where a, b are weights) the weighted cosine similarity is calculated as follows: \\[weighted\\;similarity = (u' \\cdot v') / (\\sqrt{(sum(u^2))} * \\sqrt{(sum(v^2))})\\] \\[u' = sum(u_i) = sum(m{u_i}^a*I{u_i}^b)\\] \\[v' = sum(v_i) = sum(m_{v_i}^a*I_{v_i}^b)\\] where u and v are the aligned vectors of the two spectra. It is used to determine the similarity between two spectra (usually library and query spectra). Both spectra are turned into vectors and cosine similarity is calculated by division of vectors dot product over cosine value of the angle between them. Composite weighted cosine spectral similarity (identity) \u00b6 This similarity measure can be especially useful for very reproducible generation of spectra (GC-EI-MS). This measure is modified by a ratio based on the relative intensities of adjacent m/z signals in the two spectra. Composite weighted cosine similarity is calculated as follows: \\[composite\\;similarity = \\frac{N*{cosine\\;similarity}+overlap*{ratio\\;factor}}{N+overlap}\\] \\[ratio\\;factor=\\frac{min(r_{lib},r_{query})}{max(r_{lib},r_{query})}\\] \\[r_{lib}=I_i(lib)/I_{i-1}(lib);\\;r_{query}=I_i(query)/I_{i-1}(query)\\] where \\(N\\) - number of signals in a query spectrum, cosine similarity is calculated as described previously , overlap - number of matching signals in query and library spectra, \\(ratio\\;factor\\) - relative intensities ratio, \\(r_{lib}\\) - relative ratio of adjacent signals in a library spectrum, \\(r_{query}\\) - relative ratio of adjacent signals in a query spectrum. It is used to determine the similarity between two spectra (usually library and query spectra). Parameters \u00b6 Weights \u00b6 For calculating the cosine similarity, different weighting strategies for m/z and signal intensities can be applied. Several weighting schemes are available: None \\(m/z^0*I^1\\) (weighting only by intensities) SQRT \\(m/z^0*I^1\\) (weighting only by intensities) MassBank \\(m/z^2*\\sqrt{I}\\) NIST11 (LC) \\(m/z^{1.3}*I^{0.53}\\) NIST (GC) \\(m/z^3*I^{0.6}\\) Choice of the similarity measure depends on your data, and intensity-based schemes might work better on homogenous datasets. However, recommended approach for choosing the weighting scheme would be trial-and-error. Minimum cosine similarity \u00b6 This option defines the minimum accepted similarity score that is taken into account for annotation. The similarity score depends on the data handling of unmatched signals. Handle unmatched signals \u00b6 Signals that only occur within one scan (query OR library entry) can be handled in different ways to affect the cosine similarity and controlling the quality of matching results. KEEP ALL AND MATCH TO ZERO (default) This is the standard conservative approach where all unmatched signals weigh negatively on the score. It is used for both GC-EI-MS and MS 2 spectra. REMOVE ALL The opposite option that discards all unaligned signals, which increases the similarity score artificially. This option is only feasible if both the library and query spectrum are considered to be complex mixtures. Therefore, the next two options are more conservative. KEEP LIBRARY SIGNALS Results in discarding all unaligned signals of the query scan, whereas all unaligned library signals are matched to zero, setting the library spectrum as the ground truth. Here, the negative impact of contaminating signals in the query scans are reduced. This might be helpful for mixed spectra of multiple compounds, especially during imaging techniques without any further separation or all ion fragmentation/data independent fragmentation workflows. KEEP EXPERIMENTAL SIGNALS Results in discarding all unaligned signals of the library scan, whereas all unaligned query signals are matched to zero. Has reversed effects compared to the previous option. Olena Mokshyna","title":"Spectral similarity measures"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#spectral-similarity-measures","text":"","title":"Spectral similarity measures"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#weighted-cosine-spectral-similarity","text":"The most common spectral similarity measure for library search is the weighted cosine similarity . Generally,the cosine similarity is calculated as following: \\[similarity = cos\\theta = (u \\cdot v) / (\\sqrt{(sum(u^2))} * \\sqrt{(sum(v^2))})\\] In case of weighted cosine similarity, the previous formula is modified according to the weighting function. In case of weighting function in form \\(m/z^a*{Intensity}^b\\) (where a, b are weights) the weighted cosine similarity is calculated as follows: \\[weighted\\;similarity = (u' \\cdot v') / (\\sqrt{(sum(u^2))} * \\sqrt{(sum(v^2))})\\] \\[u' = sum(u_i) = sum(m{u_i}^a*I{u_i}^b)\\] \\[v' = sum(v_i) = sum(m_{v_i}^a*I_{v_i}^b)\\] where u and v are the aligned vectors of the two spectra. It is used to determine the similarity between two spectra (usually library and query spectra). Both spectra are turned into vectors and cosine similarity is calculated by division of vectors dot product over cosine value of the angle between them.","title":"Weighted cosine spectral similarity"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#composite-weighted-cosine-spectral-similarity-identity","text":"This similarity measure can be especially useful for very reproducible generation of spectra (GC-EI-MS). This measure is modified by a ratio based on the relative intensities of adjacent m/z signals in the two spectra. Composite weighted cosine similarity is calculated as follows: \\[composite\\;similarity = \\frac{N*{cosine\\;similarity}+overlap*{ratio\\;factor}}{N+overlap}\\] \\[ratio\\;factor=\\frac{min(r_{lib},r_{query})}{max(r_{lib},r_{query})}\\] \\[r_{lib}=I_i(lib)/I_{i-1}(lib);\\;r_{query}=I_i(query)/I_{i-1}(query)\\] where \\(N\\) - number of signals in a query spectrum, cosine similarity is calculated as described previously , overlap - number of matching signals in query and library spectra, \\(ratio\\;factor\\) - relative intensities ratio, \\(r_{lib}\\) - relative ratio of adjacent signals in a library spectrum, \\(r_{query}\\) - relative ratio of adjacent signals in a query spectrum. It is used to determine the similarity between two spectra (usually library and query spectra).","title":"Composite weighted cosine spectral similarity (identity)"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#weights","text":"For calculating the cosine similarity, different weighting strategies for m/z and signal intensities can be applied. Several weighting schemes are available: None \\(m/z^0*I^1\\) (weighting only by intensities) SQRT \\(m/z^0*I^1\\) (weighting only by intensities) MassBank \\(m/z^2*\\sqrt{I}\\) NIST11 (LC) \\(m/z^{1.3}*I^{0.53}\\) NIST (GC) \\(m/z^3*I^{0.6}\\) Choice of the similarity measure depends on your data, and intensity-based schemes might work better on homogenous datasets. However, recommended approach for choosing the weighting scheme would be trial-and-error.","title":"Weights"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#minimum-cosine-similarity","text":"This option defines the minimum accepted similarity score that is taken into account for annotation. The similarity score depends on the data handling of unmatched signals.","title":"Minimum cosine similarity"},{"location":"module_docs/id_spectral_library_search/spectral-similarity-measures.html#handle-unmatched-signals","text":"Signals that only occur within one scan (query OR library entry) can be handled in different ways to affect the cosine similarity and controlling the quality of matching results. KEEP ALL AND MATCH TO ZERO (default) This is the standard conservative approach where all unmatched signals weigh negatively on the score. It is used for both GC-EI-MS and MS 2 spectra. REMOVE ALL The opposite option that discards all unaligned signals, which increases the similarity score artificially. This option is only feasible if both the library and query spectrum are considered to be complex mixtures. Therefore, the next two options are more conservative. KEEP LIBRARY SIGNALS Results in discarding all unaligned signals of the query scan, whereas all unaligned library signals are matched to zero, setting the library spectrum as the ground truth. Here, the negative impact of contaminating signals in the query scans are reduced. This might be helpful for mixed spectra of multiple compounds, especially during imaging techniques without any further separation or all ion fragmentation/data independent fragmentation workflows. KEEP EXPERIMENTAL SIGNALS Results in discarding all unaligned signals of the library scan, whereas all unaligned query signals are matched to zero. Has reversed effects compared to the previous option. Olena Mokshyna","title":"Handle unmatched signals"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html","text":"Spectral library search \u00b6 Description \u00b6 Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Spectral library search or with a right click on one or multiple selected feature rows Search \u2192 Spectral library search The spectral library search module can be performed on feature lists, individual features (contained in feature list rows), or single scans. Depending on the MS level (MS1 or MS2), all corresponding query scans (e.g., extracted from the rows) will be matched against selected spectral libraries that were previously imported. Preferred ways to import libraries are in this order: together with spectral data files in the advanced data import: Raw data methods \u2192 Raw data import \u2192 MS data (advanced) drag and drop into the main window with a dedicated import module: Raw data methods \u2192 Raw data import \u2192 Spectral library import or from Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Import spectral libraries. Supported library formats \u00b6 *.json: MassBank of North America (MoNA) ( download ) *.json: The Global Natural Product Social Molecular Networking (GNPS) (format from the spectral DB submission module) *.mgf: GNPS ( download ) *.msp: MoNA *.msp: National Institute of Standards and Technology (NIST) *.jdx: JCAMP-DX Parameters \u00b6 Spectral libraries \u00b6 The spectral libraries of interest need to be imported before applying spectral library search. Either uses all imported spectral libraries or only the selected libraries. MS level \u00b6 Choose the MS level of the scans that should be compared with the library. Set the MS level to \"1\" to compare MS 1 spectra, e.g., from GC-EI-MS or MALDI-imaging MS 1 data. Use \"2\" or higher for fragmentation scans. In case of issues with the scan selection, check how the actual scan numbers are reported in the data files and in MZmine's raw data overview and scan list. Check all scans (only for MS2) \u00b6 This option enables the comparison of all MS2 scans. Otherwise, only the most intense MS 2 scan (the highest TIC) is used for the matching. It does not apply to MS1 scans. Precursor m/z tolerance \u00b6 This option is only used for MS level > 1. Here, the library entries are filtered by their precursor m/z reducing the number of spectral-pairs to match. The absolute (in m/z) and relative (in ppm) m/z tolerance can be set. The maximum tolerance for each precursor is applied. Considering that the precursor isolation window is often far greater than the resolution or accuracy of the MS scan, this parameter is often set to higher m/z tolerances. Another aspect is the used library, which might contain uncalibrated reference spectra from lower resolution instruments. Remove precursor \u00b6 Can be selected only for MS level > 1. Depending on the fragmentation method, e.g., collision induced dissociation (CID) or higher-energy collisional dissociation (HCD), the precursor can be detected with different intensities resulting in varying cosine similarities during the library matching. Therefore, this option enables the removal of the precursor signal within the precursor m/z tolerance (parameter above) prior to the matching. Spectral m/z tolerance \u00b6 This m/z tolerance is used to pair signals in the query and library scans. It can be set in absolute (in m/z) and relative (in ppm) m/z tolerance, whereas the maximum tolerance for each m/z value is applied. It must be kept in mind, which mass resolutions are achieved within the experimental spectra and within the spectral library. CCS tolerance \u00b6 The collision cross-section (CCS) tolerance can be used in a similar way as the retention time tolerance. Accordingly, the CCS value of a query will be compared with the library entries and the maximum tolerance can be set in %. If the query or library entry was analyzed without ion mobility (no CCS values), no spectrum will be matched. Retention time tolerance \u00b6 The maximum allowed retention time difference when comparing the query and library scan. It can be set in absolute (min or sec) or relative (%) values. This option is useful for in-house libraries or standardized libraries that follow the same acquisition protocol with the same set-up, e.g., column, instrument, and method). Crop spectra to m/z overlap \u00b6 If query and library scans were acquired with different methods, e.g., mass range, fragmentation energy or mode, it can be helpful to crop the spectra to their overlapping m/z range (+ m/z tolerance). This is done by using the maximum m/z range where both spectra contain signals. However, this method will boost false matches and needs strict manual interpretation. Minimum ion intensity \u00b6 Signals in the query scan below the minimum ion intensity will be filtered from the mass lists and are not taken into account during the library matching. Absolute values. 13 C deisotoping \u00b6 Removes 13 C isotope signals from the mass list using the following parameters: m/z tolerance : Maximum allowed difference between the measured and predicted isotope m/z values. The absolute (in m/z) and relative (in ppm) m/z tolerance can be set, whereas the maximum tolerance for each m/z value is applied. Monotonic shape : If enabled, the monotonically decreasing height of isotope pattern is required. Maximum charge : The maximum charge that will be considered for detecting the isotope pattern. For singly charged ions, the 13 C isotope will be expected +1 whereas for doubly charged ions it will be +0.5 (+1 m/z divided by the charge 2). Min matched isotope signals \u00b6 This option is only useful if the query AND library entries contain isotope patterns (e.g., in MS 1 or with wider precursor isolation windows). The minimum number of matched signals of 13 C isotopes. It cannot be applied when 13 C deisotoping is enabled. Min matched signals \u00b6 The query mass list and spectral library entry must contain at least this number of matched (paired) m/z values (+- m/z tolerance). Common parameters include 4 signals for smaller molecules and 6 for more confident matches. This parameter must be set carefully to not exclude compounds that show less fragmentation, when using a higher number of matched signals. Choosing a lower number of matched signals can result in spurious library hits. Similarity \u00b6 Several algorithms can be applied to calculate the similarity of the query and library scans and to filter the resulting library matches. The available algorithms are: Weighted dot-product cosine, Composite dot-product identity (similar to NIST search). More details are available here . The weighted dot-product cosine similarity is used for comparing MS 2 data, whereas the composite dot-product identity (similar to NIST search) considers the relative intensity of neighboring signals and is, therefore, applied to MS 1 spectra from GC-EI-MS. Olena Mokshyna (76.1%), Robin Schmid (7.55%), corinnabrungs (15.09%), parasitetwin (1.26%)","title":"Spectral library search"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#spectral-library-search","text":"","title":"Spectral library search"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#description","text":"Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Spectral library search or with a right click on one or multiple selected feature rows Search \u2192 Spectral library search The spectral library search module can be performed on feature lists, individual features (contained in feature list rows), or single scans. Depending on the MS level (MS1 or MS2), all corresponding query scans (e.g., extracted from the rows) will be matched against selected spectral libraries that were previously imported. Preferred ways to import libraries are in this order: together with spectral data files in the advanced data import: Raw data methods \u2192 Raw data import \u2192 MS data (advanced) drag and drop into the main window with a dedicated import module: Raw data methods \u2192 Raw data import \u2192 Spectral library import or from Feature list methods \u2192 Annotation \u2192 Search spectra \u2192 Import spectral libraries.","title":"Description"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#supported-library-formats","text":"*.json: MassBank of North America (MoNA) ( download ) *.json: The Global Natural Product Social Molecular Networking (GNPS) (format from the spectral DB submission module) *.mgf: GNPS ( download ) *.msp: MoNA *.msp: National Institute of Standards and Technology (NIST) *.jdx: JCAMP-DX","title":"Supported library formats"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#spectral-libraries","text":"The spectral libraries of interest need to be imported before applying spectral library search. Either uses all imported spectral libraries or only the selected libraries.","title":"Spectral libraries"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#ms-level","text":"Choose the MS level of the scans that should be compared with the library. Set the MS level to \"1\" to compare MS 1 spectra, e.g., from GC-EI-MS or MALDI-imaging MS 1 data. Use \"2\" or higher for fragmentation scans. In case of issues with the scan selection, check how the actual scan numbers are reported in the data files and in MZmine's raw data overview and scan list.","title":"MS level"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#check-all-scans-only-for-ms2","text":"This option enables the comparison of all MS2 scans. Otherwise, only the most intense MS 2 scan (the highest TIC) is used for the matching. It does not apply to MS1 scans.","title":"Check all scans (only for MS2)"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#precursor-mz-tolerance","text":"This option is only used for MS level > 1. Here, the library entries are filtered by their precursor m/z reducing the number of spectral-pairs to match. The absolute (in m/z) and relative (in ppm) m/z tolerance can be set. The maximum tolerance for each precursor is applied. Considering that the precursor isolation window is often far greater than the resolution or accuracy of the MS scan, this parameter is often set to higher m/z tolerances. Another aspect is the used library, which might contain uncalibrated reference spectra from lower resolution instruments.","title":"Precursor m/z tolerance"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#remove-precursor","text":"Can be selected only for MS level > 1. Depending on the fragmentation method, e.g., collision induced dissociation (CID) or higher-energy collisional dissociation (HCD), the precursor can be detected with different intensities resulting in varying cosine similarities during the library matching. Therefore, this option enables the removal of the precursor signal within the precursor m/z tolerance (parameter above) prior to the matching.","title":"Remove precursor"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#spectral-mz-tolerance","text":"This m/z tolerance is used to pair signals in the query and library scans. It can be set in absolute (in m/z) and relative (in ppm) m/z tolerance, whereas the maximum tolerance for each m/z value is applied. It must be kept in mind, which mass resolutions are achieved within the experimental spectra and within the spectral library.","title":"Spectral m/z tolerance"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#ccs-tolerance","text":"The collision cross-section (CCS) tolerance can be used in a similar way as the retention time tolerance. Accordingly, the CCS value of a query will be compared with the library entries and the maximum tolerance can be set in %. If the query or library entry was analyzed without ion mobility (no CCS values), no spectrum will be matched.","title":"CCS tolerance"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#retention-time-tolerance","text":"The maximum allowed retention time difference when comparing the query and library scan. It can be set in absolute (min or sec) or relative (%) values. This option is useful for in-house libraries or standardized libraries that follow the same acquisition protocol with the same set-up, e.g., column, instrument, and method).","title":"Retention time tolerance"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#crop-spectra-to-mz-overlap","text":"If query and library scans were acquired with different methods, e.g., mass range, fragmentation energy or mode, it can be helpful to crop the spectra to their overlapping m/z range (+ m/z tolerance). This is done by using the maximum m/z range where both spectra contain signals. However, this method will boost false matches and needs strict manual interpretation.","title":"Crop spectra to m/z overlap"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#minimum-ion-intensity","text":"Signals in the query scan below the minimum ion intensity will be filtered from the mass lists and are not taken into account during the library matching. Absolute values.","title":"Minimum ion intensity"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#13c-deisotoping","text":"Removes 13 C isotope signals from the mass list using the following parameters: m/z tolerance : Maximum allowed difference between the measured and predicted isotope m/z values. The absolute (in m/z) and relative (in ppm) m/z tolerance can be set, whereas the maximum tolerance for each m/z value is applied. Monotonic shape : If enabled, the monotonically decreasing height of isotope pattern is required. Maximum charge : The maximum charge that will be considered for detecting the isotope pattern. For singly charged ions, the 13 C isotope will be expected +1 whereas for doubly charged ions it will be +0.5 (+1 m/z divided by the charge 2).","title":"13C deisotoping"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#min-matched-isotope-signals","text":"This option is only useful if the query AND library entries contain isotope patterns (e.g., in MS 1 or with wider precursor isolation windows). The minimum number of matched signals of 13 C isotopes. It cannot be applied when 13 C deisotoping is enabled.","title":"Min matched isotope signals"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#min-matched-signals","text":"The query mass list and spectral library entry must contain at least this number of matched (paired) m/z values (+- m/z tolerance). Common parameters include 4 signals for smaller molecules and 6 for more confident matches. This parameter must be set carefully to not exclude compounds that show less fragmentation, when using a higher number of matched signals. Choosing a lower number of matched signals can result in spurious library hits.","title":"Min matched signals"},{"location":"module_docs/id_spectral_library_search/spectral_library_search.html#similarity","text":"Several algorithms can be applied to calculate the similarity of the query and library scans and to filter the resulting library matches. The available algorithms are: Weighted dot-product cosine, Composite dot-product identity (similar to NIST search). More details are available here . The weighted dot-product cosine similarity is used for comparing MS 2 data, whereas the composite dot-product identity (similar to NIST search) considers the relative intensity of neighboring signals and is, therefore, applied to MS 1 spectra from GC-EI-MS. Olena Mokshyna (76.1%), Robin Schmid (7.55%), corinnabrungs (15.09%), parasitetwin (1.26%)","title":"Similarity"},{"location":"module_docs/io/data-exchange-with-other-software.html","text":"Data export to other software \u00b6 GNPS-FBMN/IIMN export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature lists \u2192 GNPS - feature based molecular networking . This module connects MZmine feature finding results to the GNPS workflows for Feature-based Molecular Networking (FBMN) and Ion Identity Molecular Networking (IIMN) . Using this module, the user can export the feature list needed for the manual submission to GNPS' feature based molecular networking (GNPS FBMN) or directly submit the job to the GNPS platform from MZmine. In both cases, two files are created: Quantification table (CSV file) which contains the features and their associated information (e.g., average m/z, retention time, and each feature's area or height). MS/MS spectral summary (.MGF file) which contains one representative MS/MS spectrum for each row in the feature list. A supplementary edges file with related ion identities (if ion identity networking was performed). References \u00b6 IIMN: Schmid R., Petras D., Nothias LF, et al. Ion Identity Molecular Networking for mass spectrometry-based metabolomics in the GNPS Environment . Nat. Comm. 12, 3832 (2021). FBMN: Nothias, L.-F., Petras, D., Schmid, R. et al. Feature-based molecular networking in the GNPS analysis environment . Nat. Methods 17, 905\u2013908 (2020). GNPS: Wang, M. et al. Sharing and community curation of mass spectrometry data with Global Natural Products Social Molecular Networking . Nat. Biotechnol. 34, 828\u2013837 (2016). Parameters \u00b6 Filename \u00b6 Name to be given to the output files (.MGF and .CSV). In this field, the user can either write the path where they want to save the file, or click \"select\", navigate into the desired output folder, write the output name in the \"file name\" field and click save. Once that is done, the path should be visible in the Filename field in the GNPS export module. Merge MS/MS (experimental) \u00b6 If checked, high quality MS/MS spectra that correspond to one feature are merged, instead of exporting only the most intense MS/MS spectrum. See MS/MS merger for additional information. Filter rows \u00b6 In the final output files, the user can select to export all the rows without any filters applied, rows only with MS/MS spectra, rows with MS/MS and Ion Identity (it gives MS/MS and the adduct information) and rows with MS/MS or Ion Identity. Normally, for FBMN you want to retain features with MS/MS spectra. Feature intensity \u00b6 The user can either select peak area or peak height which will then be displayed in the quantification table. CSV export \u00b6 The user can choose between simple , comprehensive , or all . Difference is in the amount of information that is present in the quantification table. Simple resembles the legacy format from the MZmine 2 export. Both options can be used for FBMN in GNPS other tools might rely on the simple MZmine 2 style output. Submit to GNPS \u00b6 This option allows any user to directly submit FBMN/IIMN jobs to GNPS. The password and user name are optional and are sent without encryption (until the server has moved to its final location with https). The input files uploaded to GNPS with the \"Submit to GNPS\" option are not saved on your GNPS user account. These files are deleted on monthly basis, which prevent future cloning of the job and retrieval of the files. Use the \"standard\" interface of FBMN for persistant jobs and more options. Or log into your GNPS account and click on Clone to latest version for a job submitted via direct interface. Open folder \u00b6 Opens the export folder. GNPS GC-MS (with ADAP) \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 Export to GNPS GC-MS (with ADAP) Warning This module should be run on aligned feature list after applying one of the spectral deconvolution methods (see ADAP manual). The GNPS GC-MS module exports all files needed for the GC-MS workflow on the GNPS web platform. This includes the feature quantification table (CSV file) and the spectral summary (.MGF file) with representative clustered GC-EI-MS spectra for the row in an (aligned) feature list. References \u00b6 Quote Smirnov et al.: J. Proteome Res 2017, DOI: 10.1021/acs.jproteome.7b00633 Wang et al.: Nature Biotechnology 34.8 (2016): 828-837. Pluskal et al.: BMC Bioinformatics, 11, 395 (2010) Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported. Filename \u00b6 Base name for the output files Representative m/z \u00b6 The m/z value that is exported to the mgf and used in GNPS GC-MS. Options: - As in feature table, - highest m/z, - heighest intensity. Feature intensity \u00b6 Intensity in the quantification table (csv file). Available options are: - Peak area, - Peak height. Open folder \u00b6 Optional parameter Opens the folder containing the output files. SIRIUS/ CSI-FingerID \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 SIRIUS / CSI-FingerID The module allows the export of spectral features to Sirius from a selected feature list or an aligned feature list in .MGF format. The generated .MGF file can be directly processed with Sirius (version 3.4 minimum). Sirius uses both the deconvoluted isotopic pattern for each feature and the corresponding MS2 spectrum to rank molecular formula candidates. Spectral features exported consist of a pair of MS1 and MS2 spectrum for each row. Note that the MS1 spectrum can contain the deconvoluted isotopic peaks. Warning A masslist with mass detection performs on MS level 2 has to be generated first and selected. This module can be used in combination with the Export for GNPS module and imported back into GNPS molecular networks. Please refer to the following documentation for a detailed tutorial: References \u00b6 Quote MZmine2 paper : Pluskal et al.: BMC Bioinformatics, 11, 395 (2010) K. D\u00fchrkop, et al. \u201cSirius 4: a rapid tool for turning tandem mass spectra into metabolite structure information\u201d, Nat methods, 2019. Instructions \u00b6 Before using the module, perform the following: Deconvolute isotopic peaks: Feature list methods \u2192 Isotopes \u2192 13C isotope filter Filter out peak without MS/MS spectrum associated. MZmine2 Menu: Peak list methods / Filtering / Peak list row filter / Keep only peaks with MS2 scan (GNPS) Reset the peak number ID. MZmine2 Menu: Peak list methods / Filtering / Peak list row filter / Reset the peak number ID Perform mass detection on MS level 2 and select. MZmine2 Menu: Raw data methods / Mass detection [Make sure to use a noise threshold consistent with the MS level 2] Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported. Filename \u00b6 Base name for the output files Merge MS/MS \u00b6 Merge high qualitative MS/MS into one spectrum instead of exporting all MS/MS separately. m/z tolerance \u00b6 m/z tolerance to exclude duplicates in correlated spectrum. Renumber IDs \u00b6 Optional parameter Resets the IDs (uses the row ID otherwise). Only rows with annotation \u00b6 Optional parameter Only export rows with an annotation (run MS annotate or metaMScorrelate). Exclude empty MS/MS spectra \u00b6 Optional parameter Do not export empty MS/MS spectra (only features with MS/MS spectrum with at least 1 signal are exported). Exclude multiple charge \u00b6 Optional parameter Do not export multiply charged rows. Exclude multimers \u00b6 Optional parameters Do not export rows that were annotated as multimers (2M) (run MS annotate or metaMScorrelate). MetaboAnalyst export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 MetaboAnalyst export This module exports the contents of the peak list into a csv file formatted. This csv file can be easily uploaded into the Statistical Analysis module of the MetaboAnalyst service. Warning Prior to export, samples must be separated into groups by a user-defined parameter (see Project \u2192 Set sample parameters menu). Each group must contain at least 3 samples (raw data files). Format of exported CSV file \u00b6 The exported file is formatted as shown below. Each feature is represented by its ID in the feature list, m/z value (formatted according to MZmine configuration), retention time value (formatted according to MZmine configuration), and the preferred identity (name). \"Sample\",\"ko15\",\"ko16\",\"ko18\",\"ko19\",\"ko21\",\"ko22\",\"wt15\",\"wt16\",\"wt18\",\"wt19\",\"wt21\",\"wt22\" \"Label\",\"KO\",\"KO\",\"KO\",\"KO\",\"KO\",\"KO\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\" \"1:258.110@13.4 (name1)\",147887.53,451600.71,65290.38,56540.93,85146.33,162012.44,175177.08,82619.48,51951.61,69198.22,153273.47,98144.28 \"2:137.045@9.4 (name2)\",1778569,1567038,1482796,1039130,1223132,1072038,1950287,1466781,1572679,1275313,1356014,1231442 \"4:184.0733@13.7 (name4\",237993.6,269714,201393.4,150107.3,176989.7,156797,276541.8,222366.2,211717.7,186850.9,188285.9,172348.8 ... Parameters \u00b6 Filename \u00b6 Name of exported CSV file for MetaboAnalyst. If the file already exists, it will be overwritten. Grouping parameter \u00b6 Project parameter that will be used to obtain group information to each sample (e.g. control vs disease). Please set parameters in the Project/Set sample parameters menu. Uploading to MetaboAnalyst \u00b6 In MetaboAnalyst, please select the Statistical Analysis module. After selecting the Statistical Analysis module, please set the parameters as shown below. In the \"Data File\" field, please select the CSV file generated by this MZmine module. For details about MetaboAnalyst functions and capabilities, please refer to its documentation. Tidymass \u00b6 Tidymass can import the csv feature table from MZmine, using convert_mzmine2mass_dataset function. For more details see Tidymass tutorial . Olena Mokshyna","title":"Export to other software"},{"location":"module_docs/io/data-exchange-with-other-software.html#data-export-to-other-software","text":"","title":"Data export to other software"},{"location":"module_docs/io/data-exchange-with-other-software.html#gnps-fbmniimn-export","text":"","title":"GNPS-FBMN/IIMN export"},{"location":"module_docs/io/data-exchange-with-other-software.html#description","text":"Feature list methods \u2192 Export feature lists \u2192 GNPS - feature based molecular networking . This module connects MZmine feature finding results to the GNPS workflows for Feature-based Molecular Networking (FBMN) and Ion Identity Molecular Networking (IIMN) . Using this module, the user can export the feature list needed for the manual submission to GNPS' feature based molecular networking (GNPS FBMN) or directly submit the job to the GNPS platform from MZmine. In both cases, two files are created: Quantification table (CSV file) which contains the features and their associated information (e.g., average m/z, retention time, and each feature's area or height). MS/MS spectral summary (.MGF file) which contains one representative MS/MS spectrum for each row in the feature list. A supplementary edges file with related ion identities (if ion identity networking was performed).","title":"Description"},{"location":"module_docs/io/data-exchange-with-other-software.html#references","text":"IIMN: Schmid R., Petras D., Nothias LF, et al. Ion Identity Molecular Networking for mass spectrometry-based metabolomics in the GNPS Environment . Nat. Comm. 12, 3832 (2021). FBMN: Nothias, L.-F., Petras, D., Schmid, R. et al. Feature-based molecular networking in the GNPS analysis environment . Nat. Methods 17, 905\u2013908 (2020). GNPS: Wang, M. et al. Sharing and community curation of mass spectrometry data with Global Natural Products Social Molecular Networking . Nat. Biotechnol. 34, 828\u2013837 (2016).","title":"References"},{"location":"module_docs/io/data-exchange-with-other-software.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/io/data-exchange-with-other-software.html#filename","text":"Name to be given to the output files (.MGF and .CSV). In this field, the user can either write the path where they want to save the file, or click \"select\", navigate into the desired output folder, write the output name in the \"file name\" field and click save. Once that is done, the path should be visible in the Filename field in the GNPS export module.","title":"Filename"},{"location":"module_docs/io/data-exchange-with-other-software.html#merge-msms-experimental","text":"If checked, high quality MS/MS spectra that correspond to one feature are merged, instead of exporting only the most intense MS/MS spectrum. See MS/MS merger for additional information.","title":"Merge MS/MS (experimental)"},{"location":"module_docs/io/data-exchange-with-other-software.html#filter-rows","text":"In the final output files, the user can select to export all the rows without any filters applied, rows only with MS/MS spectra, rows with MS/MS and Ion Identity (it gives MS/MS and the adduct information) and rows with MS/MS or Ion Identity. Normally, for FBMN you want to retain features with MS/MS spectra.","title":"Filter rows"},{"location":"module_docs/io/data-exchange-with-other-software.html#feature-intensity","text":"The user can either select peak area or peak height which will then be displayed in the quantification table.","title":"Feature intensity"},{"location":"module_docs/io/data-exchange-with-other-software.html#csv-export","text":"The user can choose between simple , comprehensive , or all . Difference is in the amount of information that is present in the quantification table. Simple resembles the legacy format from the MZmine 2 export. Both options can be used for FBMN in GNPS other tools might rely on the simple MZmine 2 style output.","title":"CSV export"},{"location":"module_docs/io/data-exchange-with-other-software.html#submit-to-gnps","text":"This option allows any user to directly submit FBMN/IIMN jobs to GNPS. The password and user name are optional and are sent without encryption (until the server has moved to its final location with https). The input files uploaded to GNPS with the \"Submit to GNPS\" option are not saved on your GNPS user account. These files are deleted on monthly basis, which prevent future cloning of the job and retrieval of the files. Use the \"standard\" interface of FBMN for persistant jobs and more options. Or log into your GNPS account and click on Clone to latest version for a job submitted via direct interface.","title":"Submit to GNPS"},{"location":"module_docs/io/data-exchange-with-other-software.html#open-folder","text":"Opens the export folder.","title":"Open folder"},{"location":"module_docs/io/data-exchange-with-other-software.html#gnps-gc-ms-with-adap","text":"","title":"GNPS GC-MS (with ADAP)"},{"location":"module_docs/io/data-exchange-with-other-software.html#description_1","text":"Feature list methods \u2192 Export feature list \u2192 Export to GNPS GC-MS (with ADAP) Warning This module should be run on aligned feature list after applying one of the spectral deconvolution methods (see ADAP manual). The GNPS GC-MS module exports all files needed for the GC-MS workflow on the GNPS web platform. This includes the feature quantification table (CSV file) and the spectral summary (.MGF file) with representative clustered GC-EI-MS spectra for the row in an (aligned) feature list.","title":"Description"},{"location":"module_docs/io/data-exchange-with-other-software.html#references_1","text":"Quote Smirnov et al.: J. Proteome Res 2017, DOI: 10.1021/acs.jproteome.7b00633 Wang et al.: Nature Biotechnology 34.8 (2016): 828-837. Pluskal et al.: BMC Bioinformatics, 11, 395 (2010)","title":"References"},{"location":"module_docs/io/data-exchange-with-other-software.html#parameters_1","text":"","title":"Parameters"},{"location":"module_docs/io/data-exchange-with-other-software.html#feature-lists","text":"Name of the feature list(s) to be exported.","title":"Feature lists"},{"location":"module_docs/io/data-exchange-with-other-software.html#filename_1","text":"Base name for the output files","title":"Filename"},{"location":"module_docs/io/data-exchange-with-other-software.html#representative-mz","text":"The m/z value that is exported to the mgf and used in GNPS GC-MS. Options: - As in feature table, - highest m/z, - heighest intensity.","title":"Representative m/z"},{"location":"module_docs/io/data-exchange-with-other-software.html#feature-intensity_1","text":"Intensity in the quantification table (csv file). Available options are: - Peak area, - Peak height.","title":"Feature intensity"},{"location":"module_docs/io/data-exchange-with-other-software.html#open-folder_1","text":"Optional parameter Opens the folder containing the output files.","title":"Open folder"},{"location":"module_docs/io/data-exchange-with-other-software.html#sirius-csi-fingerid","text":"","title":"SIRIUS/ CSI-FingerID"},{"location":"module_docs/io/data-exchange-with-other-software.html#description_2","text":"Feature list methods \u2192 Export feature list \u2192 SIRIUS / CSI-FingerID The module allows the export of spectral features to Sirius from a selected feature list or an aligned feature list in .MGF format. The generated .MGF file can be directly processed with Sirius (version 3.4 minimum). Sirius uses both the deconvoluted isotopic pattern for each feature and the corresponding MS2 spectrum to rank molecular formula candidates. Spectral features exported consist of a pair of MS1 and MS2 spectrum for each row. Note that the MS1 spectrum can contain the deconvoluted isotopic peaks. Warning A masslist with mass detection performs on MS level 2 has to be generated first and selected. This module can be used in combination with the Export for GNPS module and imported back into GNPS molecular networks. Please refer to the following documentation for a detailed tutorial:","title":"Description"},{"location":"module_docs/io/data-exchange-with-other-software.html#references_2","text":"Quote MZmine2 paper : Pluskal et al.: BMC Bioinformatics, 11, 395 (2010) K. D\u00fchrkop, et al. \u201cSirius 4: a rapid tool for turning tandem mass spectra into metabolite structure information\u201d, Nat methods, 2019.","title":"References"},{"location":"module_docs/io/data-exchange-with-other-software.html#instructions","text":"Before using the module, perform the following: Deconvolute isotopic peaks: Feature list methods \u2192 Isotopes \u2192 13C isotope filter Filter out peak without MS/MS spectrum associated. MZmine2 Menu: Peak list methods / Filtering / Peak list row filter / Keep only peaks with MS2 scan (GNPS) Reset the peak number ID. MZmine2 Menu: Peak list methods / Filtering / Peak list row filter / Reset the peak number ID Perform mass detection on MS level 2 and select. MZmine2 Menu: Raw data methods / Mass detection [Make sure to use a noise threshold consistent with the MS level 2]","title":"Instructions"},{"location":"module_docs/io/data-exchange-with-other-software.html#parameters_2","text":"","title":"Parameters"},{"location":"module_docs/io/data-exchange-with-other-software.html#feature-lists_1","text":"Name of the feature list(s) to be exported.","title":"Feature lists"},{"location":"module_docs/io/data-exchange-with-other-software.html#filename_2","text":"Base name for the output files","title":"Filename"},{"location":"module_docs/io/data-exchange-with-other-software.html#merge-msms","text":"Merge high qualitative MS/MS into one spectrum instead of exporting all MS/MS separately.","title":"Merge MS/MS"},{"location":"module_docs/io/data-exchange-with-other-software.html#mz-tolerance","text":"m/z tolerance to exclude duplicates in correlated spectrum.","title":"m/z tolerance"},{"location":"module_docs/io/data-exchange-with-other-software.html#renumber-ids","text":"Optional parameter Resets the IDs (uses the row ID otherwise).","title":"Renumber IDs"},{"location":"module_docs/io/data-exchange-with-other-software.html#only-rows-with-annotation","text":"Optional parameter Only export rows with an annotation (run MS annotate or metaMScorrelate).","title":"Only rows with annotation"},{"location":"module_docs/io/data-exchange-with-other-software.html#exclude-empty-msms-spectra","text":"Optional parameter Do not export empty MS/MS spectra (only features with MS/MS spectrum with at least 1 signal are exported).","title":"Exclude empty MS/MS spectra"},{"location":"module_docs/io/data-exchange-with-other-software.html#exclude-multiple-charge","text":"Optional parameter Do not export multiply charged rows.","title":"Exclude multiple charge"},{"location":"module_docs/io/data-exchange-with-other-software.html#exclude-multimers","text":"Optional parameters Do not export rows that were annotated as multimers (2M) (run MS annotate or metaMScorrelate).","title":"Exclude multimers"},{"location":"module_docs/io/data-exchange-with-other-software.html#metaboanalyst-export","text":"","title":"MetaboAnalyst export"},{"location":"module_docs/io/data-exchange-with-other-software.html#description_3","text":"Feature list methods \u2192 Export feature list \u2192 MetaboAnalyst export This module exports the contents of the peak list into a csv file formatted. This csv file can be easily uploaded into the Statistical Analysis module of the MetaboAnalyst service. Warning Prior to export, samples must be separated into groups by a user-defined parameter (see Project \u2192 Set sample parameters menu). Each group must contain at least 3 samples (raw data files).","title":"Description"},{"location":"module_docs/io/data-exchange-with-other-software.html#format-of-exported-csv-file","text":"The exported file is formatted as shown below. Each feature is represented by its ID in the feature list, m/z value (formatted according to MZmine configuration), retention time value (formatted according to MZmine configuration), and the preferred identity (name). \"Sample\",\"ko15\",\"ko16\",\"ko18\",\"ko19\",\"ko21\",\"ko22\",\"wt15\",\"wt16\",\"wt18\",\"wt19\",\"wt21\",\"wt22\" \"Label\",\"KO\",\"KO\",\"KO\",\"KO\",\"KO\",\"KO\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\",\"WT\" \"1:258.110@13.4 (name1)\",147887.53,451600.71,65290.38,56540.93,85146.33,162012.44,175177.08,82619.48,51951.61,69198.22,153273.47,98144.28 \"2:137.045@9.4 (name2)\",1778569,1567038,1482796,1039130,1223132,1072038,1950287,1466781,1572679,1275313,1356014,1231442 \"4:184.0733@13.7 (name4\",237993.6,269714,201393.4,150107.3,176989.7,156797,276541.8,222366.2,211717.7,186850.9,188285.9,172348.8 ...","title":"Format of exported CSV file"},{"location":"module_docs/io/data-exchange-with-other-software.html#parameters_3","text":"","title":"Parameters"},{"location":"module_docs/io/data-exchange-with-other-software.html#filename_3","text":"Name of exported CSV file for MetaboAnalyst. If the file already exists, it will be overwritten.","title":"Filename"},{"location":"module_docs/io/data-exchange-with-other-software.html#grouping-parameter","text":"Project parameter that will be used to obtain group information to each sample (e.g. control vs disease). Please set parameters in the Project/Set sample parameters menu.","title":"Grouping parameter"},{"location":"module_docs/io/data-exchange-with-other-software.html#uploading-to-metaboanalyst","text":"In MetaboAnalyst, please select the Statistical Analysis module. After selecting the Statistical Analysis module, please set the parameters as shown below. In the \"Data File\" field, please select the CSV file generated by this MZmine module. For details about MetaboAnalyst functions and capabilities, please refer to its documentation.","title":"Uploading to MetaboAnalyst"},{"location":"module_docs/io/data-exchange-with-other-software.html#tidymass","text":"Tidymass can import the csv feature table from MZmine, using convert_mzmine2mass_dataset function. For more details see Tidymass tutorial . Olena Mokshyna","title":"Tidymass"},{"location":"module_docs/io/data-export.html","text":"Data export \u00b6 Description \u00b6 Export scans - Spectra/mass list to mgf, txt, msp and mzML export This module exports scans or mass lists. MZmine allows several types of data export: to *.mzML, to *.netCDF, spectra/mass list to mgf, txt, msp and mzML export, MS(n) trees export. Parameters \u00b6 Raw data files \u00b6 One or more raw data files that contain the scans/mass lists Optional mass list \u00b6 If checked, mass lists are exported instead of raw scans File \u00b6 The destination Format \u00b6 mgf: MASCOT generic format - useful for SIRIUS txt: Plain text format msp: NIST search format mzML: Open format standard for MS data Olena Mokshyna","title":"Raw data export"},{"location":"module_docs/io/data-export.html#data-export","text":"","title":"Data export"},{"location":"module_docs/io/data-export.html#description","text":"Export scans - Spectra/mass list to mgf, txt, msp and mzML export This module exports scans or mass lists. MZmine allows several types of data export: to *.mzML, to *.netCDF, spectra/mass list to mgf, txt, msp and mzML export, MS(n) trees export.","title":"Description"},{"location":"module_docs/io/data-export.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/io/data-export.html#raw-data-files","text":"One or more raw data files that contain the scans/mass lists","title":"Raw data files"},{"location":"module_docs/io/data-export.html#optional-mass-list","text":"If checked, mass lists are exported instead of raw scans","title":"Optional mass list"},{"location":"module_docs/io/data-export.html#file","text":"The destination","title":"File"},{"location":"module_docs/io/data-export.html#format","text":"mgf: MASCOT generic format - useful for SIRIUS txt: Plain text format msp: NIST search format mzML: Open format standard for MS data Olena Mokshyna","title":"Format"},{"location":"module_docs/io/data-import.html","text":"Data import \u00b6 LC-MS data \u00b6 Description \u00b6 Raw data can be imported via Raw data methods \u2192 Raw data import . Note that multiple data files/folders can be dropped into the Raw data methods \u2192 Raw data import \u2192 MS data (advanced) dialog. If individual modules are used, folder based formats can only imported as one folder at a time. When using the MS data (advanced) dialog, inexperienced users should deactivate the direct mass detection steps, since they alter the raw data on the import. Mass detection is then performed, when the scans are loaded and only peaks above the noise level are imported. Alternatively, you can simply drag & drop the raw data into the raw data list of the main window. LC-IMS-MS data \u00b6 As any other data format, ion mobility data can be imported via Raw data methods \u2192 Raw data import . Note that multiple .tdf data folders can be dropped into the MS data (advanced) dialog. The Bruker TDF import can only select a single folder. When using the MS data (advanced) dialog, inexperienced users should deactivate the direct mass detection steps, since they alter the raw data on the import. Mass detection is then performend, when the scans are loaded and only peaks above the noise level are imported. Alternatively, you can simply drag & drop the raw data into the raw data list of the main window. Olena Mokshyna (62.16%), SteffenHeu (37.84%)","title":"Raw data import"},{"location":"module_docs/io/data-import.html#data-import","text":"","title":"Data import"},{"location":"module_docs/io/data-import.html#lc-ms-data","text":"","title":"LC-MS data"},{"location":"module_docs/io/data-import.html#description","text":"Raw data can be imported via Raw data methods \u2192 Raw data import . Note that multiple data files/folders can be dropped into the Raw data methods \u2192 Raw data import \u2192 MS data (advanced) dialog. If individual modules are used, folder based formats can only imported as one folder at a time. When using the MS data (advanced) dialog, inexperienced users should deactivate the direct mass detection steps, since they alter the raw data on the import. Mass detection is then performed, when the scans are loaded and only peaks above the noise level are imported. Alternatively, you can simply drag & drop the raw data into the raw data list of the main window.","title":"Description"},{"location":"module_docs/io/data-import.html#lc-ims-ms-data","text":"As any other data format, ion mobility data can be imported via Raw data methods \u2192 Raw data import . Note that multiple .tdf data folders can be dropped into the MS data (advanced) dialog. The Bruker TDF import can only select a single folder. When using the MS data (advanced) dialog, inexperienced users should deactivate the direct mass detection steps, since they alter the raw data on the import. Mass detection is then performend, when the scans are loaded and only peaks above the noise level are imported. Alternatively, you can simply drag & drop the raw data into the raw data list of the main window. Olena Mokshyna (62.16%), SteffenHeu (37.84%)","title":"LC-IMS-MS data"},{"location":"module_docs/io/feat-list-export.html","text":"Feature list export modules \u00b6 This section describes general format export modules. For the description of export modules for the specific software, please, refer to Data export to other software . CSV \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 CSV This module allows to export obtained feature lists to csv (comma-separated values) file format. Parameters \u00b6 Field separator \u00b6 Character(s) used to separate fields in the exported file. \",\" by default. Identification separator \u00b6 Character(s) used to separate multi object columns in the exported file. \";\" by default. Remove empty columns \u00b6 Optional parameter Removes empty columns during data export. Filter rows \u00b6 Allows user to export only those rows that have associated MS/MS data or are annotated. CSV (legacy MZmine 2) \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 CSV (legacy MZmine 2) This module is a legacy module from MZmine2 and, similarly to the previously described module, exports the contents of the feature list(s) into a csv file, which can later be processed by MS Excel or other tools. The produced CSV files cannot be imported back to MZmine. Missing values such as heights and areas of undetected features are exported as 0. Parameters \u00b6 Filename \u00b6 Name of file where the exported data is saved Field separator \u00b6 Columns in the new CSV file will be separated by this character (coma by default) Export common elements \u00b6 Which row elements (such as row ID, row retention time, or best ion annotation) from the feature list will be exported Export data file elements \u00b6 Which feature elements (such as feature status, name, or tailing factor) will be exported. Export quantitation results and other information \u00b6 Optional parameter If checked, all feature-associated data will be exported. Identification separator \u00b6 Character to separate multiple identification results (if they are available) for a feature. Filter rows \u00b6 Allows user to export only those rows that have associated MS/MS data or are annotated. Venn diagram export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 Venn diagram export Exports a feature list to a csv that can be plotted as a venn diagram by other software such as VennDis or VENNY . Parameters \u00b6 Directory \u00b6 Choose a directory to export the feature list to. Export gap filled as detected \u00b6 Optional parameter If checked, gap filled features will be exported as detected, otherwise they will be marked as undetected. mzTab export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 mzTab This module exports the contents of the feature list into a mzTab file, which can later be processed by other tools. Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported. Filename \u00b6 Name of file where the exported data is saved. Include all peaks \u00b6 Optional parameter If selected, the features with unknown identity will also be exported to the mzTab file. mzTab-m export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 mzTab-m This module exports the contents of the feature list into a mzTab-m file, which can later be processed by other tools. Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported Filename \u00b6 Name of file where the exported data is saved Include all peaks \u00b6 Optional parameter If selected, the features with unknown identity will also be exported to the mzTab file. SQL export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 SQL database This module allows direct export of the feature lists into MySQL or PostgreSQL database servers. If you would like to use another database then please add its JDBC driver (jar file) to the MZmine lib/ folder. Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported JDBC connection string \u00b6 Identification of the database according to the JDBC standard. For example: jdbc:mysql://localhost/dbname?dbname=sqluser&password=sqluserpw Database table \u00b6 Name of the table, into which data will be exported. Export columns \u00b6 The mapping between the database table columns (\u201cTable column\u201d) and MZmine data types (\u201cExport data type\u201d). For some data types an additional value (\u201cExport value\u201d) must be specified, such as for the \u201cConstant value\u201d type. Export empty feature list \u00b6 Optional parameter If selected, an empty feature list will be exported. All columns, other than raw data file and constants, will be assigned null values. MSP Export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 MSP file (ADAP) This module exports fragmentation spectra of peaks in the feature list into MSP format file. In addition to the spectra, the following feature characteristics are saved into the file: Name Name of the peak as displayed in the peak list DB# Row number in the peak list RT Optional Retention time of a feature ANOVA_P_VALUE (optional) P-value calculated by the module Data analysis -> One-way ANOVA Test Num Peaks Number of peaks in the spectrum Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported Filename \u00b6 Name of file where the exported data is saved Add retention time \u00b6 If selected, each MSP record will contain feature's retention time. Add ANOVA p-value (if calculated) \u00b6 If selected, each MSP record will contain the One-way ANOVA p-value if such p-value is present Integer m/z \u00b6 If selected, fractional m/z values will be rounded to the closest integer, and a new intensity will be calculated based on the merging mode: Maximum: new intensity is the maximum of merged intensities, Sum: new intensity is the sum of merged intensities. MGF Export \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 MGF file (ADAP) This module exports fragmentation spectra of features in the feature list into MGF (Mascot Generic Format) format file. Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported Filename \u00b6 Name of file where the exported data is saved Representative m/z \u00b6 Choose the reprezentative m/z values of a cluster. The available options are: - As in feature table, - Highest m/z, - Or maximum intensity. Fractional m/z values \u00b6 Optional parameter If selected, fractional m/z values will be saved. If not, all fractional m/z values will be rounded to the closest integer. Warning In case of rounding to integer, the corresponding features will be merged. Integer m/z \u00b6 When features are merged, the resulting elution profile is calculated by one of the following rules: - Maximum. In the resulting elution profile, the intensity at retention time t is the maximum of the intensities at t across the merging elution profiles. - Sum. In the resulting elution profile, the intensity at retention time t is the sum of the intensities at t for all merging elution profiles. Export feature network to csv \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 Export feature network to csv Export results from correlation/MS annotation as networks to csv. Parameters \u00b6 Filename \u00b6 Base file name of all edge files (Use {} to fill in the feature list name when exporting multiple feature lists at once). Export row relationships \u00b6 Optional parameter Export all relationships of different rows to files. The relationships that can be exported include: - MS1 feature correlation - Ion identity network - MS2 cosine similarity - MS2 neutral loss cosine similarity - MS2 modified cosine similarity (GNPS) Combine to one file \u00b6 Optional parameter If chosen, all output is combined into one file. Otherwise, a separate file is exported per each relationship type. Export IIN edges \u00b6 Optional parameter Export all edges of Ion Identity Networks (IIN). Export IIN relationship edges \u00b6 Optional parameter Export relationships between Ion Identity Networks (IIN). Filter rows \u00b6 Limit the exported rows to those with MS/MS data and/or annotated rows. Spectral library batch generation \u00b6 Description \u00b6 Feature list methods \u2192 Export feature list \u2192 Spectral library batch generation This module allows to generate spectral library using metadata sheet. Parameters \u00b6 Feature lists \u00b6 Name of the feature list(s) to be exported. Export file \u00b6 Name of a local library file where the exported data is saved. Export format \u00b6 File format for the export. Available options: - MZmine json ( recommended ), - And NIST msp. Metadata \u00b6 Metadata for all entries. Metadata setup \u00b6 In this dialog user can setup all dataset-related data, including the decription, ID (either from MassIVE, MetaboLights, or Metabolomic Workbench), specifications of the instrument, information on researchers involved in the dataset creation, and ion mode. m/z tolerance (merging) \u00b6 Optional parameter The tolerance used to group signals during merging of spectra. If selected, spectra from different collision energies will be merged. Handle chimeric spectra \u00b6 Optional parameter Options to identify and handle chimeric spectra with multiple MS1 signals in the precursor ion selection. Handle chimeric spectra setup \u00b6 This dialog allows to set parameters for handling chimeric spectra. The spectrum detected as chimeric will be flagged if this option is chosen. Quality parameters \u00b6 Quality parameters for MS/MS spectra to be exported to the library. Quality parameters spectra setup \u00b6 The following dialog allows to set the criteria for the MS/MS export to the library, such as minimum number of signals, percentage of explained signals or intensity, etc. Olena Mokshyna","title":"Feature list export"},{"location":"module_docs/io/feat-list-export.html#feature-list-export-modules","text":"This section describes general format export modules. For the description of export modules for the specific software, please, refer to Data export to other software .","title":"Feature list export modules"},{"location":"module_docs/io/feat-list-export.html#csv","text":"","title":"CSV"},{"location":"module_docs/io/feat-list-export.html#description","text":"Feature list methods \u2192 Export feature list \u2192 CSV This module allows to export obtained feature lists to csv (comma-separated values) file format.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#field-separator","text":"Character(s) used to separate fields in the exported file. \",\" by default.","title":"Field separator"},{"location":"module_docs/io/feat-list-export.html#identification-separator","text":"Character(s) used to separate multi object columns in the exported file. \";\" by default.","title":"Identification separator"},{"location":"module_docs/io/feat-list-export.html#remove-empty-columns","text":"Optional parameter Removes empty columns during data export.","title":"Remove empty columns"},{"location":"module_docs/io/feat-list-export.html#filter-rows","text":"Allows user to export only those rows that have associated MS/MS data or are annotated.","title":"Filter rows"},{"location":"module_docs/io/feat-list-export.html#csv-legacy-mzmine-2","text":"","title":"CSV (legacy MZmine 2)"},{"location":"module_docs/io/feat-list-export.html#description_1","text":"Feature list methods \u2192 Export feature list \u2192 CSV (legacy MZmine 2) This module is a legacy module from MZmine2 and, similarly to the previously described module, exports the contents of the feature list(s) into a csv file, which can later be processed by MS Excel or other tools. The produced CSV files cannot be imported back to MZmine. Missing values such as heights and areas of undetected features are exported as 0.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_1","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#filename","text":"Name of file where the exported data is saved","title":"Filename"},{"location":"module_docs/io/feat-list-export.html#field-separator_1","text":"Columns in the new CSV file will be separated by this character (coma by default)","title":"Field separator"},{"location":"module_docs/io/feat-list-export.html#export-common-elements","text":"Which row elements (such as row ID, row retention time, or best ion annotation) from the feature list will be exported","title":"Export common elements"},{"location":"module_docs/io/feat-list-export.html#export-data-file-elements","text":"Which feature elements (such as feature status, name, or tailing factor) will be exported.","title":"Export data file elements"},{"location":"module_docs/io/feat-list-export.html#export-quantitation-results-and-other-information","text":"Optional parameter If checked, all feature-associated data will be exported.","title":"Export quantitation results and other information"},{"location":"module_docs/io/feat-list-export.html#identification-separator_1","text":"Character to separate multiple identification results (if they are available) for a feature.","title":"Identification separator"},{"location":"module_docs/io/feat-list-export.html#filter-rows_1","text":"Allows user to export only those rows that have associated MS/MS data or are annotated.","title":"Filter rows"},{"location":"module_docs/io/feat-list-export.html#venn-diagram-export","text":"","title":"Venn diagram export"},{"location":"module_docs/io/feat-list-export.html#description_2","text":"Feature list methods \u2192 Export feature list \u2192 Venn diagram export Exports a feature list to a csv that can be plotted as a venn diagram by other software such as VennDis or VENNY .","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_2","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#directory","text":"Choose a directory to export the feature list to.","title":"Directory"},{"location":"module_docs/io/feat-list-export.html#export-gap-filled-as-detected","text":"Optional parameter If checked, gap filled features will be exported as detected, otherwise they will be marked as undetected.","title":"Export gap filled as detected"},{"location":"module_docs/io/feat-list-export.html#mztab-export","text":"","title":"mzTab export"},{"location":"module_docs/io/feat-list-export.html#description_3","text":"Feature list methods \u2192 Export feature list \u2192 mzTab This module exports the contents of the feature list into a mzTab file, which can later be processed by other tools.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_3","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#feature-lists","text":"Name of the feature list(s) to be exported.","title":"Feature lists"},{"location":"module_docs/io/feat-list-export.html#filename_1","text":"Name of file where the exported data is saved.","title":"Filename"},{"location":"module_docs/io/feat-list-export.html#include-all-peaks","text":"Optional parameter If selected, the features with unknown identity will also be exported to the mzTab file.","title":"Include all peaks"},{"location":"module_docs/io/feat-list-export.html#mztab-m-export","text":"","title":"mzTab-m export"},{"location":"module_docs/io/feat-list-export.html#description_4","text":"Feature list methods \u2192 Export feature list \u2192 mzTab-m This module exports the contents of the feature list into a mzTab-m file, which can later be processed by other tools.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_4","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#feature-lists_1","text":"Name of the feature list(s) to be exported","title":"Feature lists"},{"location":"module_docs/io/feat-list-export.html#filename_2","text":"Name of file where the exported data is saved","title":"Filename"},{"location":"module_docs/io/feat-list-export.html#include-all-peaks_1","text":"Optional parameter If selected, the features with unknown identity will also be exported to the mzTab file.","title":"Include all peaks"},{"location":"module_docs/io/feat-list-export.html#sql-export","text":"","title":"SQL export"},{"location":"module_docs/io/feat-list-export.html#description_5","text":"Feature list methods \u2192 Export feature list \u2192 SQL database This module allows direct export of the feature lists into MySQL or PostgreSQL database servers. If you would like to use another database then please add its JDBC driver (jar file) to the MZmine lib/ folder.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_5","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#feature-lists_2","text":"Name of the feature list(s) to be exported","title":"Feature lists"},{"location":"module_docs/io/feat-list-export.html#jdbc-connection-string","text":"Identification of the database according to the JDBC standard. For example: jdbc:mysql://localhost/dbname?dbname=sqluser&password=sqluserpw","title":"JDBC connection string"},{"location":"module_docs/io/feat-list-export.html#database-table","text":"Name of the table, into which data will be exported.","title":"Database table"},{"location":"module_docs/io/feat-list-export.html#export-columns","text":"The mapping between the database table columns (\u201cTable column\u201d) and MZmine data types (\u201cExport data type\u201d). For some data types an additional value (\u201cExport value\u201d) must be specified, such as for the \u201cConstant value\u201d type.","title":"Export columns"},{"location":"module_docs/io/feat-list-export.html#export-empty-feature-list","text":"Optional parameter If selected, an empty feature list will be exported. All columns, other than raw data file and constants, will be assigned null values.","title":"Export empty feature list"},{"location":"module_docs/io/feat-list-export.html#msp-export","text":"","title":"MSP Export"},{"location":"module_docs/io/feat-list-export.html#description_6","text":"Feature list methods \u2192 Export feature list \u2192 MSP file (ADAP) This module exports fragmentation spectra of peaks in the feature list into MSP format file. In addition to the spectra, the following feature characteristics are saved into the file: Name Name of the peak as displayed in the peak list DB# Row number in the peak list RT Optional Retention time of a feature ANOVA_P_VALUE (optional) P-value calculated by the module Data analysis -> One-way ANOVA Test Num Peaks Number of peaks in the spectrum","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_6","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#feature-lists_3","text":"Name of the feature list(s) to be exported","title":"Feature lists"},{"location":"module_docs/io/feat-list-export.html#filename_3","text":"Name of file where the exported data is saved","title":"Filename"},{"location":"module_docs/io/feat-list-export.html#add-retention-time","text":"If selected, each MSP record will contain feature's retention time.","title":"Add retention time"},{"location":"module_docs/io/feat-list-export.html#add-anova-p-value-if-calculated","text":"If selected, each MSP record will contain the One-way ANOVA p-value if such p-value is present","title":"Add ANOVA p-value (if calculated)"},{"location":"module_docs/io/feat-list-export.html#integer-mz","text":"If selected, fractional m/z values will be rounded to the closest integer, and a new intensity will be calculated based on the merging mode: Maximum: new intensity is the maximum of merged intensities, Sum: new intensity is the sum of merged intensities.","title":"Integer m/z"},{"location":"module_docs/io/feat-list-export.html#mgf-export","text":"","title":"MGF Export"},{"location":"module_docs/io/feat-list-export.html#description_7","text":"Feature list methods \u2192 Export feature list \u2192 MGF file (ADAP) This module exports fragmentation spectra of features in the feature list into MGF (Mascot Generic Format) format file.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_7","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#feature-lists_4","text":"Name of the feature list(s) to be exported","title":"Feature lists"},{"location":"module_docs/io/feat-list-export.html#filename_4","text":"Name of file where the exported data is saved","title":"Filename"},{"location":"module_docs/io/feat-list-export.html#representative-mz","text":"Choose the reprezentative m/z values of a cluster. The available options are: - As in feature table, - Highest m/z, - Or maximum intensity.","title":"Representative m/z"},{"location":"module_docs/io/feat-list-export.html#fractional-mz-values","text":"Optional parameter If selected, fractional m/z values will be saved. If not, all fractional m/z values will be rounded to the closest integer. Warning In case of rounding to integer, the corresponding features will be merged.","title":"Fractional m/z values"},{"location":"module_docs/io/feat-list-export.html#integer-mz_1","text":"When features are merged, the resulting elution profile is calculated by one of the following rules: - Maximum. In the resulting elution profile, the intensity at retention time t is the maximum of the intensities at t across the merging elution profiles. - Sum. In the resulting elution profile, the intensity at retention time t is the sum of the intensities at t for all merging elution profiles.","title":"Integer m/z"},{"location":"module_docs/io/feat-list-export.html#export-feature-network-to-csv","text":"","title":"Export feature network to csv"},{"location":"module_docs/io/feat-list-export.html#description_8","text":"Feature list methods \u2192 Export feature list \u2192 Export feature network to csv Export results from correlation/MS annotation as networks to csv.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_8","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#filename_5","text":"Base file name of all edge files (Use {} to fill in the feature list name when exporting multiple feature lists at once).","title":"Filename"},{"location":"module_docs/io/feat-list-export.html#export-row-relationships","text":"Optional parameter Export all relationships of different rows to files. The relationships that can be exported include: - MS1 feature correlation - Ion identity network - MS2 cosine similarity - MS2 neutral loss cosine similarity - MS2 modified cosine similarity (GNPS)","title":"Export row relationships"},{"location":"module_docs/io/feat-list-export.html#combine-to-one-file","text":"Optional parameter If chosen, all output is combined into one file. Otherwise, a separate file is exported per each relationship type.","title":"Combine to one file"},{"location":"module_docs/io/feat-list-export.html#export-iin-edges","text":"Optional parameter Export all edges of Ion Identity Networks (IIN).","title":"Export IIN edges"},{"location":"module_docs/io/feat-list-export.html#export-iin-relationship-edges","text":"Optional parameter Export relationships between Ion Identity Networks (IIN).","title":"Export IIN relationship edges"},{"location":"module_docs/io/feat-list-export.html#filter-rows_2","text":"Limit the exported rows to those with MS/MS data and/or annotated rows.","title":"Filter rows"},{"location":"module_docs/io/feat-list-export.html#spectral-library-batch-generation","text":"","title":"Spectral library batch generation"},{"location":"module_docs/io/feat-list-export.html#description_9","text":"Feature list methods \u2192 Export feature list \u2192 Spectral library batch generation This module allows to generate spectral library using metadata sheet.","title":"Description"},{"location":"module_docs/io/feat-list-export.html#parameters_9","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-export.html#feature-lists_5","text":"Name of the feature list(s) to be exported.","title":"Feature lists"},{"location":"module_docs/io/feat-list-export.html#export-file","text":"Name of a local library file where the exported data is saved.","title":"Export file"},{"location":"module_docs/io/feat-list-export.html#export-format","text":"File format for the export. Available options: - MZmine json ( recommended ), - And NIST msp.","title":"Export format"},{"location":"module_docs/io/feat-list-export.html#metadata","text":"Metadata for all entries.","title":"Metadata"},{"location":"module_docs/io/feat-list-export.html#metadata-setup","text":"In this dialog user can setup all dataset-related data, including the decription, ID (either from MassIVE, MetaboLights, or Metabolomic Workbench), specifications of the instrument, information on researchers involved in the dataset creation, and ion mode.","title":"Metadata setup"},{"location":"module_docs/io/feat-list-export.html#mz-tolerance-merging","text":"Optional parameter The tolerance used to group signals during merging of spectra. If selected, spectra from different collision energies will be merged.","title":"m/z tolerance (merging)"},{"location":"module_docs/io/feat-list-export.html#handle-chimeric-spectra","text":"Optional parameter Options to identify and handle chimeric spectra with multiple MS1 signals in the precursor ion selection.","title":"Handle chimeric spectra"},{"location":"module_docs/io/feat-list-export.html#handle-chimeric-spectra-setup","text":"This dialog allows to set parameters for handling chimeric spectra. The spectrum detected as chimeric will be flagged if this option is chosen.","title":"Handle chimeric spectra setup"},{"location":"module_docs/io/feat-list-export.html#quality-parameters","text":"Quality parameters for MS/MS spectra to be exported to the library.","title":"Quality parameters"},{"location":"module_docs/io/feat-list-export.html#quality-parameters-spectra-setup","text":"The following dialog allows to set the criteria for the MS/MS export to the library, such as minimum number of signals, percentage of explained signals or intensity, etc. Olena Mokshyna","title":"Quality parameters spectra setup"},{"location":"module_docs/io/feat-list-import.html","text":"Feature list import modules \u00b6 mzTab import \u00b6 Description \u00b6 Feature list methods \u2192 Import feature list \u2192 mzTab This module imports the contents of a mzTab file into a feature list. If links to raw data files are available in the mzTab file, these can automatically be imported together with the feature list. Parameters \u00b6 mzTab files \u00b6 Names of the files to be imported Import raw data files? \u00b6 Optional parameter If selected, raw data files will also be imported (if they are available). If the raw data files are not available, empty raw data files will be generated by MZmine. Warning Please note that missing files may lead to issues with other modules that need access to the scan data. mzTab-m import \u00b6 Description \u00b6 Feature list methods \u2192 Import feature list \u2192 mzTab This module is highly similar to the previous one and imports the contents of a mzTab-m file into a feature list. If links to raw data files are available in the mzTab-m file, these can automatically be imported together with the feature list. The raw data import searches for the files in the location provided in the mzTab-m file. If the files are not present, the search continues in the same folder as that of mzTab-m file. If the files are still not found, the import module checks if the files are present in compressed form (.gz or .zip). If no files are found after that, the empty rawFiles are created in the end. Parameters \u00b6 mzTab-m files \u00b6 Names of mzTab-m files to be imported. Import raw files too? \u00b6 Optional parameter If selected, raw data files will be imported if they are available. Files will be loaded from the msrun location defined in the mzTab-m file or from the folder containing the mzTab-m file. If the raw data files are not available, empty raw data files will be generated by MZmine. Warning Please note that missing files may lead to issues with other modules that need access to scan data. csv \u00b6 Description \u00b6 Feature list methods \u2192 Import feature list \u2192 csv This module imports features present from a csv file. Warning Imported csv file should follow a specific format described below. This kind of format can be obtained by using xcms library in R to detect features using Centwave algorithm on a mzXML file. The R code returns a list of features with following columns which can be exported to a csv file to be used as an import for this module. Column Numbering starts from 0, and 0th column is ignored . Column Name Column No. peak_mz 1 mzMin 2 mzMax 3 peak_rt 4 rtMin 5 rtMax 6 maxO 9 where peak_mz - feature m/z value, peak_rt - feature retention time value, max 0 - intensity value. Warning To use this module, a user has to input the raw data file, which was used to generate peakList from the R code. Example R code that generates the csv file mzfile <- system.file(\"standards.mzXML\") library(xcms) mzraw <- readMSData(files = mzfile, mode = \"onDisk\") cpw <- CentWaveParam(ppm = 15, peakwidth = c(5,20), snthresh = 10) mzData <- findChromPeaks(object = mzraw, param = cpw) featurelist <- as.data.frame(xcms::chromPeaks(mzData)) write.csv(featurelist, \"featureListFile.csv\") References \u00b6 Quote Smith CA, Want EJ, O'Maille G, Abagyan R, Siuzdak G. XCMS: processing mass spectrometry data for metabolite profiling using nonlinear peak alignment, matching, and identification. Analytical chemistry. 2006 Feb 1;78(3):779-87. DOI: 10.1021/ac051437y Parameters \u00b6 csv \u00b6 CSV files in the desribed format to import Raw data files \u00b6 Raw data files that were used to generate imported feature lists. Olena Mokshyna","title":"Feature list import"},{"location":"module_docs/io/feat-list-import.html#feature-list-import-modules","text":"","title":"Feature list import modules"},{"location":"module_docs/io/feat-list-import.html#mztab-import","text":"","title":"mzTab import"},{"location":"module_docs/io/feat-list-import.html#description","text":"Feature list methods \u2192 Import feature list \u2192 mzTab This module imports the contents of a mzTab file into a feature list. If links to raw data files are available in the mzTab file, these can automatically be imported together with the feature list.","title":"Description"},{"location":"module_docs/io/feat-list-import.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-import.html#mztab-files","text":"Names of the files to be imported","title":"mzTab files"},{"location":"module_docs/io/feat-list-import.html#import-raw-data-files","text":"Optional parameter If selected, raw data files will also be imported (if they are available). If the raw data files are not available, empty raw data files will be generated by MZmine. Warning Please note that missing files may lead to issues with other modules that need access to the scan data.","title":"Import raw data files?"},{"location":"module_docs/io/feat-list-import.html#mztab-m-import","text":"","title":"mzTab-m import"},{"location":"module_docs/io/feat-list-import.html#description_1","text":"Feature list methods \u2192 Import feature list \u2192 mzTab This module is highly similar to the previous one and imports the contents of a mzTab-m file into a feature list. If links to raw data files are available in the mzTab-m file, these can automatically be imported together with the feature list. The raw data import searches for the files in the location provided in the mzTab-m file. If the files are not present, the search continues in the same folder as that of mzTab-m file. If the files are still not found, the import module checks if the files are present in compressed form (.gz or .zip). If no files are found after that, the empty rawFiles are created in the end.","title":"Description"},{"location":"module_docs/io/feat-list-import.html#parameters_1","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-import.html#mztab-m-files","text":"Names of mzTab-m files to be imported.","title":"mzTab-m files"},{"location":"module_docs/io/feat-list-import.html#import-raw-files-too","text":"Optional parameter If selected, raw data files will be imported if they are available. Files will be loaded from the msrun location defined in the mzTab-m file or from the folder containing the mzTab-m file. If the raw data files are not available, empty raw data files will be generated by MZmine. Warning Please note that missing files may lead to issues with other modules that need access to scan data.","title":"Import raw files too?"},{"location":"module_docs/io/feat-list-import.html#csv","text":"","title":"csv"},{"location":"module_docs/io/feat-list-import.html#description_2","text":"Feature list methods \u2192 Import feature list \u2192 csv This module imports features present from a csv file. Warning Imported csv file should follow a specific format described below. This kind of format can be obtained by using xcms library in R to detect features using Centwave algorithm on a mzXML file. The R code returns a list of features with following columns which can be exported to a csv file to be used as an import for this module. Column Numbering starts from 0, and 0th column is ignored . Column Name Column No. peak_mz 1 mzMin 2 mzMax 3 peak_rt 4 rtMin 5 rtMax 6 maxO 9 where peak_mz - feature m/z value, peak_rt - feature retention time value, max 0 - intensity value. Warning To use this module, a user has to input the raw data file, which was used to generate peakList from the R code. Example R code that generates the csv file mzfile <- system.file(\"standards.mzXML\") library(xcms) mzraw <- readMSData(files = mzfile, mode = \"onDisk\") cpw <- CentWaveParam(ppm = 15, peakwidth = c(5,20), snthresh = 10) mzData <- findChromPeaks(object = mzraw, param = cpw) featurelist <- as.data.frame(xcms::chromPeaks(mzData)) write.csv(featurelist, \"featureListFile.csv\")","title":"Description"},{"location":"module_docs/io/feat-list-import.html#references","text":"Quote Smith CA, Want EJ, O'Maille G, Abagyan R, Siuzdak G. XCMS: processing mass spectrometry data for metabolite profiling using nonlinear peak alignment, matching, and identification. Analytical chemistry. 2006 Feb 1;78(3):779-87. DOI: 10.1021/ac051437y","title":"References"},{"location":"module_docs/io/feat-list-import.html#parameters_2","text":"","title":"Parameters"},{"location":"module_docs/io/feat-list-import.html#csv_1","text":"CSV files in the desribed format to import","title":"csv"},{"location":"module_docs/io/feat-list-import.html#raw-data-files","text":"Raw data files that were used to generate imported feature lists. Olena Mokshyna","title":"Raw data files"},{"location":"module_docs/io/merge_ms2_kai.html","text":"Merge MS/MS (experimental) \u00b6 This option is available in the GNPS FBMN export and the SIRIUS export. If checked, high quality MS/MS spectra that correspond to one feature are merged, instead of exporting only the most intense MS/MS spectrum. Parameters \u00b6 Select spectra to merge \u00b6 The users can select to merge the MS/MS spectra: Across samples , which will merge all MS/MS spectra that belong to the same feature, and as such is the most convenient option. Same sample , which will merge MS/MS spectra for the same feature within one sample, and can be used if the user is not confident about the alignment algorithm. Consecutive scans , which will merge MS/MS spectra if they are triggered in a row. m/z merge mode \u00b6 This option allows you to select the way to merge the fragments' m/z values associated with a similar precursor value. \"Most intense\" will always pick the m/z of the best feature, which is a very safe and conservative option. However, \"weighted average (remove outliers)\" will often yield better result. Intensity merge mode \u00b6 Options on how to merge the intensity values of features from different spectra with similar mass. Sum intensities is a convenient option that will increase the intensities of feature that occur consistently in many fragment scans. However, this will make intensities between merged and unmerged spectra incomparable. Use max intensity to preserve intensity values Expected mass deviation \u00b6 Expected mass deviation between different spectra of the same feature of your measurement in ppm (parts per million) or Da(larger value is used). We reccommend to use a rather large values, e.g. 10ppm for Orbitrap, 15 ppm for Q-ToF, 100 ppm for QQQ. Cosine treshold \u00b6 Treshold of cosine similarity between spectra that needs to be met in order for two spectra to be merged. In case they have different collision energies, cosine treshold should be set to 0, since different collision energies will result in different fragmentation pattern. Signal count treshold \u00b6 After merging the spectra, signals that occur in less than the user specified % of the merged spectra will be removed. Isolation window offset (m/z) \u00b6 Isolation window offset from the precursor m/z. Isolation window width (m/z) \u00b6 Width of the isolation window (left and right). Olena Mokshyna","title":"Merge MS/MS"},{"location":"module_docs/io/merge_ms2_kai.html#merge-msms-experimental","text":"This option is available in the GNPS FBMN export and the SIRIUS export. If checked, high quality MS/MS spectra that correspond to one feature are merged, instead of exporting only the most intense MS/MS spectrum.","title":"Merge MS/MS (experimental)"},{"location":"module_docs/io/merge_ms2_kai.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/io/merge_ms2_kai.html#select-spectra-to-merge","text":"The users can select to merge the MS/MS spectra: Across samples , which will merge all MS/MS spectra that belong to the same feature, and as such is the most convenient option. Same sample , which will merge MS/MS spectra for the same feature within one sample, and can be used if the user is not confident about the alignment algorithm. Consecutive scans , which will merge MS/MS spectra if they are triggered in a row.","title":"Select spectra to merge"},{"location":"module_docs/io/merge_ms2_kai.html#mz-merge-mode","text":"This option allows you to select the way to merge the fragments' m/z values associated with a similar precursor value. \"Most intense\" will always pick the m/z of the best feature, which is a very safe and conservative option. However, \"weighted average (remove outliers)\" will often yield better result.","title":"m/z merge mode"},{"location":"module_docs/io/merge_ms2_kai.html#intensity-merge-mode","text":"Options on how to merge the intensity values of features from different spectra with similar mass. Sum intensities is a convenient option that will increase the intensities of feature that occur consistently in many fragment scans. However, this will make intensities between merged and unmerged spectra incomparable. Use max intensity to preserve intensity values","title":"Intensity merge mode"},{"location":"module_docs/io/merge_ms2_kai.html#expected-mass-deviation","text":"Expected mass deviation between different spectra of the same feature of your measurement in ppm (parts per million) or Da(larger value is used). We reccommend to use a rather large values, e.g. 10ppm for Orbitrap, 15 ppm for Q-ToF, 100 ppm for QQQ.","title":"Expected mass deviation"},{"location":"module_docs/io/merge_ms2_kai.html#cosine-treshold","text":"Treshold of cosine similarity between spectra that needs to be met in order for two spectra to be merged. In case they have different collision energies, cosine treshold should be set to 0, since different collision energies will result in different fragmentation pattern.","title":"Cosine treshold"},{"location":"module_docs/io/merge_ms2_kai.html#signal-count-treshold","text":"After merging the spectra, signals that occur in less than the user specified % of the merged spectra will be removed.","title":"Signal count treshold"},{"location":"module_docs/io/merge_ms2_kai.html#isolation-window-offset-mz","text":"Isolation window offset from the precursor m/z.","title":"Isolation window offset (m/z)"},{"location":"module_docs/io/merge_ms2_kai.html#isolation-window-width-mz","text":"Width of the isolation window (left and right). Olena Mokshyna","title":"Isolation window width (m/z)"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html","text":"IMS Expander \u00b6 Description \u00b6 Feature detection \u2192 LC-IMS-MS \u2192 IMS expander . The IMS expander searches for data points in mobility scans for existing features. This requires prior chromatogram building (see ADAP Chromatogram builder and resolving in retention time dimension (see Resolving ). Parameters \u00b6 m/z tolerance \u00b6 If selected, a tolerance will be applied to the feature's detected m/z while searching for data points in mobility dimension. Otherwise, the accepted m/z range is determined by the feature's m/z distribution in accumulated frame spectra. Recommended setting: selected, 0.003 m/z and 15 ppm Raw data instead of thresholded \u00b6 Enables searching in mobility scan raw data instead of the thresholded (=mass detected) data. Only possible for centroid raw data files. Override default mobility bin width (scans) \u00b6 If selected, the default number of binned mobility scans can be overriden. Useful for data with high mobility resolution. Binned mobilogram example \u00b6 Olena Mokshyna (32.35%), SteffenHeu (67.65%)","title":"Ion mobility expander"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#ims-expander","text":"","title":"IMS Expander"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#description","text":"Feature detection \u2192 LC-IMS-MS \u2192 IMS expander . The IMS expander searches for data points in mobility scans for existing features. This requires prior chromatogram building (see ADAP Chromatogram builder and resolving in retention time dimension (see Resolving ).","title":"Description"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#mz-tolerance","text":"If selected, a tolerance will be applied to the feature's detected m/z while searching for data points in mobility dimension. Otherwise, the accepted m/z range is determined by the feature's m/z distribution in accumulated frame spectra. Recommended setting: selected, 0.003 m/z and 15 ppm","title":"m/z tolerance"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#raw-data-instead-of-thresholded","text":"Enables searching in mobility scan raw data instead of the thresholded (=mass detected) data. Only possible for centroid raw data files.","title":"Raw data instead of thresholded"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#override-default-mobility-bin-width-scans","text":"If selected, the default number of binned mobility scans can be overriden. Useful for data with high mobility resolution.","title":"Override default mobility bin width (scans)"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ims_expander/ims-expander.html#binned-mobilogram-example","text":"Olena Mokshyna (32.35%), SteffenHeu (67.65%)","title":"Binned mobilogram example"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html","text":"Ion mobility trace builder \u00b6 Description \u00b6 Feature detection \u2192 LC-IMS-MS \u2192 Ion mobility trace builder . The Ion mobility trace builder will build ion mobility traces from the raw data. Alternatively, the Recursive IMS builder can be used, which requires less RAM but takes longer. Parameters \u00b6 Scan selection \u00b6 The scan selection parameter specifies the scans that shall be processed for feature detection. Usually, setting the ms level to 1 is sufficient. If a calibration segment is present, it can be cut out via the retention time filter in the scan selection. m/z tolerance \u00b6 The m/z tolerance specifies the scan-to-scan tolerance for ion mobility traces. This tolerance window may need to be set higher that for classic LC-MS feature detection (e.g. to 0.005 m/z and 15-20 ppm instead of 10 ppm) due to lower intensities therefore less accuracy in individual mobility scans compared to LC-MS scans. Note that the overall accuracy is achieved via LC-IMS-MS is the same due to the higher number of scans. Minimum consecutive retention time data points \u00b6 This parameter specifies the number of consecutive detections of the same m/z value in a chromatographic peak (rt dimension only). This means that a single m/z has to be detected in, e.g, 5 frames with an intensity higher than zero. This parameter helps to filter noise. Consecutive detections in the mobility dimension do not affect this parameter. Usually no less than 5 should be set here if the MS1 acquisition rate is sufficient. Minimum total signals \u00b6 Specifies the total number of peaks in the mobility dimension in all mobility scans. Every \"dot\" in an ion mobility trace represents a single datapoint. Advanced parameters \u00b6 For most applications, these parameters do not need to set/altered. For high mobility resolved data the mobilograms might become noisy due to a fewer ions reaching the detector at the same time. By default, the number of binned scans is set to cover about 0.0008 Vs/cm^2 per bin. The effect of binning can be seen here . If you are unsure about the nature of your data, you can perform trace building with the standard parameters and apply/preview the binning afterwards via the Feature detection \u2192 Mobilogram binning module. Override default TIMS binning width (Vs/cm\u00b2) The binning width in mobility units of the selected raw data file. Travelling wave binning width (ms) The binning width in mobility units of the selected raw data file. Drift tube binning width (ms) The binning width in mobility units of the selected raw data file. Processing result \u00b6 After performing ion mobiltiy trace detection, a feature list is created in the feature list tab (see feature lists tab ). In the feature table, multiple columns are created. The displayed columns can be set via the button on the right of the feature table ([1]). The shapes displays an EIC of the ion mobility trace (intensities summed in rt dimension). The mobilograms column shows a mobilogram for the ion mobility trace (intensities summed in mobility dimension). The shapes and projections can be smoothed and resolved. However, the ion mobility trace is always represented by the raw data and remains unaltered. After resolving, the shapes and mobilograms have to be recalculated from the raw data, which is why the smoothing is lost after resolving. Olena Mokshyna (36.84%), SteffenHeu (63.16%)","title":"Ion mobility trace builder"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#ion-mobility-trace-builder","text":"","title":"Ion mobility trace builder"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#description","text":"Feature detection \u2192 LC-IMS-MS \u2192 Ion mobility trace builder . The Ion mobility trace builder will build ion mobility traces from the raw data. Alternatively, the Recursive IMS builder can be used, which requires less RAM but takes longer.","title":"Description"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#scan-selection","text":"The scan selection parameter specifies the scans that shall be processed for feature detection. Usually, setting the ms level to 1 is sufficient. If a calibration segment is present, it can be cut out via the retention time filter in the scan selection.","title":"Scan selection"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#mz-tolerance","text":"The m/z tolerance specifies the scan-to-scan tolerance for ion mobility traces. This tolerance window may need to be set higher that for classic LC-MS feature detection (e.g. to 0.005 m/z and 15-20 ppm instead of 10 ppm) due to lower intensities therefore less accuracy in individual mobility scans compared to LC-MS scans. Note that the overall accuracy is achieved via LC-IMS-MS is the same due to the higher number of scans.","title":"m/z tolerance"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#minimum-consecutive-retention-time-data-points","text":"This parameter specifies the number of consecutive detections of the same m/z value in a chromatographic peak (rt dimension only). This means that a single m/z has to be detected in, e.g, 5 frames with an intensity higher than zero. This parameter helps to filter noise. Consecutive detections in the mobility dimension do not affect this parameter. Usually no less than 5 should be set here if the MS1 acquisition rate is sufficient.","title":"Minimum consecutive retention time data points"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#minimum-total-signals","text":"Specifies the total number of peaks in the mobility dimension in all mobility scans. Every \"dot\" in an ion mobility trace represents a single datapoint.","title":"Minimum total signals"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#advanced-parameters","text":"For most applications, these parameters do not need to set/altered. For high mobility resolved data the mobilograms might become noisy due to a fewer ions reaching the detector at the same time. By default, the number of binned scans is set to cover about 0.0008 Vs/cm^2 per bin. The effect of binning can be seen here . If you are unsure about the nature of your data, you can perform trace building with the standard parameters and apply/preview the binning afterwards via the Feature detection \u2192 Mobilogram binning module. Override default TIMS binning width (Vs/cm\u00b2) The binning width in mobility units of the selected raw data file. Travelling wave binning width (ms) The binning width in mobility units of the selected raw data file. Drift tube binning width (ms) The binning width in mobility units of the selected raw data file.","title":"Advanced parameters"},{"location":"module_docs/lc-ims-ms_featdet/featdet_ion_mobility_trace_builder/ion-mobility-trace-builder.html#processing-result","text":"After performing ion mobiltiy trace detection, a feature list is created in the feature list tab (see feature lists tab ). In the feature table, multiple columns are created. The displayed columns can be set via the button on the right of the feature table ([1]). The shapes displays an EIC of the ion mobility trace (intensities summed in rt dimension). The mobilograms column shows a mobilogram for the ion mobility trace (intensities summed in mobility dimension). The shapes and projections can be smoothed and resolved. However, the ion mobility trace is always represented by the raw data and remains unaltered. After resolving, the shapes and mobilograms have to be recalculated from the raw data, which is why the smoothing is lost after resolving. Olena Mokshyna (36.84%), SteffenHeu (63.16%)","title":"Processing result"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html","text":"Recursive IMS builder \u00b6 Description \u00b6 Feature detection \u2192 LC-IMS-MS \u2192 Recursive IMS builder . Builds m/z traces for ion mobility spectrometry data. Parameters \u00b6 m/z tolerance \u00b6 The m/z tolerance to build ion traces. The tolerance is specified as a +- tolerance. m/z 500.000 with a tolerance of 0.01 will allow m/z change from 499.99 to 501.01. Minimum consecutive retention time data points \u00b6 The minimum number of consecutive detections in frames (retention time dimension). Minimum number of data points \u00b6 The minimum number of consecutive detections in frames (retention time dimension). Advanced parameters \u00b6 Allows adjustment of internal binning parameters for mobilograms. The default values are set to 1. Override default TIMS binning width (Vs/cm\u00b2) The binning width in mobility units of the selected raw data file. Travelling wave binning width (ms) The binning width in mobility units of the selected raw data file. Drift tube binning width (ms) The binning width in mobility units of the selected raw data file. Olena Mokshyna","title":"Recursive IMS builder"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#recursive-ims-builder","text":"","title":"Recursive IMS builder"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#description","text":"Feature detection \u2192 LC-IMS-MS \u2192 Recursive IMS builder . Builds m/z traces for ion mobility spectrometry data.","title":"Description"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#mz-tolerance","text":"The m/z tolerance to build ion traces. The tolerance is specified as a +- tolerance. m/z 500.000 with a tolerance of 0.01 will allow m/z change from 499.99 to 501.01.","title":"m/z tolerance"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#minimum-consecutive-retention-time-data-points","text":"The minimum number of consecutive detections in frames (retention time dimension).","title":"Minimum consecutive retention time data points"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#minimum-number-of-data-points","text":"The minimum number of consecutive detections in frames (retention time dimension).","title":"Minimum number of data points"},{"location":"module_docs/lc-ims-ms_featdet/recursive_ims_builder/recursive-ims-builder.html#advanced-parameters","text":"Allows adjustment of internal binning parameters for mobilograms. The default values are set to 1. Override default TIMS binning width (Vs/cm\u00b2) The binning width in mobility units of the selected raw data file. Travelling wave binning width (ms) The binning width in mobility units of the selected raw data file. Drift tube binning width (ms) The binning width in mobility units of the selected raw data file. Olena Mokshyna","title":"Advanced parameters"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html","text":"ADAP chromatogram builder \u00b6 Description \u00b6 Feature detection \u2192 LC-MS \u2192 ADAP chromatogram builder The ADAP chromatogram builder module is one of the LC-MS feature detection algorithms provided by MZmine 3. The module essentially builds an EIC for each m/z value that was detected over a minimum number of consecutive scans in the LC-MS run. Each data file is processed individually. The mass list associated to each MS1 scan in a data file (see Mass detection module) are taken as input and a feature list is returned as output. Since a mass list must be available, the Mass detection module must be run first. The ADAP chromatogram builder algorithm operates as follows: Only MS1 scans are processed. All the data points are extracted from all the MS1 scans in a data file and sorted in order of decreasing intensity. The processing starts from the most intense data point. Since no EICs have yet been created, a new EIC is initialized and associated to the corresponding m/z value. The processing proceeds with the second-highest data point. The corresponding m/z is checked to determine if it \"belongs\" to the existing EIC (based on the user-defined tolerance, i.e. \"Scan to scan accuracy (m/z)\" parameter). If yes, then the data point is added to the EIC and the EIC-associated m/z is updated. Otherwise, a new EIC is initialized. The process repeats iteratively until all the data points have been processed and a set of EICs has been created. Finally, the EICs are checked according to the user-defined parameters ( i.e. minimum number of data points and intensity). The EICs matching the requirements are retained in the feature list , whereas the rest are discarded. The so-built EICs can then be resolved into individual features by one of the deconvolution algorithms provided by MZmine 3 ( e.g. Local minimum resolver module). Parameters \u00b6 Raw data files \u00b6 Select the input raw data files for chromatogram building. Mass lists associated with the data files will be automatically selected. See option descriptions in Mass detection module. Scans \u00b6 Select (or filter out) the MS scans to be processed. Although setting the MS level = 1 is usually sufficient for this module, several filters are available (see option descriptions in Mass detection module). For example, specific RT ranges ( e.g. dead volume, equilibration time, calibration segments, etc. ) can be excluded from the processing by setting the corresponding filter. Min group size in number of scans \u00b6 Minimum number of consecutive MS1 scans where a m/z must be detected with a non-zero intensity in order for the corresponding EICs to be considered valid and retained in the feature list. This parameter largely depends on the chromatographic system setup ( e.g. HPLC vs UHPLC) and the acquisition rate ( a.k.a. MS scan speed) of the mass spectrometer. The best way to optimize this setting is by manually inspecting the raw data and determining the typical minimum number of data points of the LC peaks. Usually, no less than 4-5 should be used. Group intensity threshold \u00b6 Minimum signal intensity that the group scans (see previous parameter) must exceed in order for the corresponding EICs to be considered valid and retained in the feature list. A good starting point for this parameter is 3 times the noise level used in the Mass detection , if the instrumental noise is used as cutoff. See also How do I determine the noise level in my data? for more details. Min highest intensity \u00b6 Minimum intensity that the highest point in the EIC must exceed in order for the corresponding trace to be considered valid and retained in the feature list. This parameter mainly depends on the mass spectrometer characteristics ( e.g. Orbitrap instruments normally provides higher signal intensities than TOF devices) as well as the overall goal of the processing. Overly low intensity thresholds normally leads to a larger number of background signals being retained as features, extending the overall processing time. On the other hand, overly high thresholds may lead to low-intensity features being erroneously discarded. A good starting point for this parameter is 7-10 times the noise level used in the Mass detection , if the instrumental noise is used as cutoff. See also How do I determine the noise level in my data? for more details. Scan to scan accuracy (m/z) \u00b6 Maximum allowed difference between an EIC-associated m/z and a new data point to be added to the existing EIC trace. It is essentially the maximum allowed mass accuracy deviation between consecutive data points in the EICs. The tolerance can be specified as absolute tolerance (in m/z ), relative tolerance (in ppm), or both. When both are specified, the tolerance range is calculated using the maximum between the absolute and relative tolerances. This is an inter-scan m/z tolerance , and it depends on the mass accuracy, resolution and stability of the instrument. The best way to optimize this parameter is by manually inspecting the raw data and determining the typical fluctuation of the accurate mass measurement over consecutive scans. A good starting point is 0.002-0.005 m/z and 5-10 ppm for Orbitrap instruments, while 0.005 m/z and 10-15 ppm can be used for TOF devices. Suffix \u00b6 String added to the filename as suffix when creating the corresponding feature list. Olena Mokshyna","title":"ADAP Chromatogram builder"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#adap-chromatogram-builder","text":"","title":"ADAP chromatogram builder"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#description","text":"Feature detection \u2192 LC-MS \u2192 ADAP chromatogram builder The ADAP chromatogram builder module is one of the LC-MS feature detection algorithms provided by MZmine 3. The module essentially builds an EIC for each m/z value that was detected over a minimum number of consecutive scans in the LC-MS run. Each data file is processed individually. The mass list associated to each MS1 scan in a data file (see Mass detection module) are taken as input and a feature list is returned as output. Since a mass list must be available, the Mass detection module must be run first. The ADAP chromatogram builder algorithm operates as follows: Only MS1 scans are processed. All the data points are extracted from all the MS1 scans in a data file and sorted in order of decreasing intensity. The processing starts from the most intense data point. Since no EICs have yet been created, a new EIC is initialized and associated to the corresponding m/z value. The processing proceeds with the second-highest data point. The corresponding m/z is checked to determine if it \"belongs\" to the existing EIC (based on the user-defined tolerance, i.e. \"Scan to scan accuracy (m/z)\" parameter). If yes, then the data point is added to the EIC and the EIC-associated m/z is updated. Otherwise, a new EIC is initialized. The process repeats iteratively until all the data points have been processed and a set of EICs has been created. Finally, the EICs are checked according to the user-defined parameters ( i.e. minimum number of data points and intensity). The EICs matching the requirements are retained in the feature list , whereas the rest are discarded. The so-built EICs can then be resolved into individual features by one of the deconvolution algorithms provided by MZmine 3 ( e.g. Local minimum resolver module).","title":"Description"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#raw-data-files","text":"Select the input raw data files for chromatogram building. Mass lists associated with the data files will be automatically selected. See option descriptions in Mass detection module.","title":"Raw data files"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#scans","text":"Select (or filter out) the MS scans to be processed. Although setting the MS level = 1 is usually sufficient for this module, several filters are available (see option descriptions in Mass detection module). For example, specific RT ranges ( e.g. dead volume, equilibration time, calibration segments, etc. ) can be excluded from the processing by setting the corresponding filter.","title":"Scans"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#min-group-size-in-number-of-scans","text":"Minimum number of consecutive MS1 scans where a m/z must be detected with a non-zero intensity in order for the corresponding EICs to be considered valid and retained in the feature list. This parameter largely depends on the chromatographic system setup ( e.g. HPLC vs UHPLC) and the acquisition rate ( a.k.a. MS scan speed) of the mass spectrometer. The best way to optimize this setting is by manually inspecting the raw data and determining the typical minimum number of data points of the LC peaks. Usually, no less than 4-5 should be used.","title":"Min group size in number of scans"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#group-intensity-threshold","text":"Minimum signal intensity that the group scans (see previous parameter) must exceed in order for the corresponding EICs to be considered valid and retained in the feature list. A good starting point for this parameter is 3 times the noise level used in the Mass detection , if the instrumental noise is used as cutoff. See also How do I determine the noise level in my data? for more details.","title":"Group intensity threshold"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#min-highest-intensity","text":"Minimum intensity that the highest point in the EIC must exceed in order for the corresponding trace to be considered valid and retained in the feature list. This parameter mainly depends on the mass spectrometer characteristics ( e.g. Orbitrap instruments normally provides higher signal intensities than TOF devices) as well as the overall goal of the processing. Overly low intensity thresholds normally leads to a larger number of background signals being retained as features, extending the overall processing time. On the other hand, overly high thresholds may lead to low-intensity features being erroneously discarded. A good starting point for this parameter is 7-10 times the noise level used in the Mass detection , if the instrumental noise is used as cutoff. See also How do I determine the noise level in my data? for more details.","title":"Min highest intensity"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#scan-to-scan-accuracy-mz","text":"Maximum allowed difference between an EIC-associated m/z and a new data point to be added to the existing EIC trace. It is essentially the maximum allowed mass accuracy deviation between consecutive data points in the EICs. The tolerance can be specified as absolute tolerance (in m/z ), relative tolerance (in ppm), or both. When both are specified, the tolerance range is calculated using the maximum between the absolute and relative tolerances. This is an inter-scan m/z tolerance , and it depends on the mass accuracy, resolution and stability of the instrument. The best way to optimize this parameter is by manually inspecting the raw data and determining the typical fluctuation of the accurate mass measurement over consecutive scans. A good starting point is 0.002-0.005 m/z and 5-10 ppm for Orbitrap instruments, while 0.005 m/z and 10-15 ppm can be used for TOF devices.","title":"Scan to scan accuracy (m/z)"},{"location":"module_docs/lc-ms_featdet/featdet_adap_chromatogram_builder/adap-chromatogram-builder.html#suffix","text":"String added to the filename as suffix when creating the corresponding feature list. Olena Mokshyna","title":"Suffix"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html","text":"GridMass \u00b6 Description \u00b6 Feature detection \u2192 LC-MS \u2192 GridMass GridMass is an algorithm to detect peaks analyzing 2D data. It directly generates a peak list, which can then be operated using the peak list methods. Algorithm \u00b6 To detect the position and boundaries of masses, the GridMass algorithm first generates a grid of equally spaced probes covering the entire chromatographic area. A representative section is shown in the figure below. Each probe (black dots in Figure) explores a rectangular region around it to find a local maximum. The probe location is moved to the local maxima to further search for a higher value. The procedure is performed until no higher values exist within the exploring rectangle. This local maximum is then defined as a feature , which contains information of the m/z, the time, and the intensity detected. A putative trajectory of a probe is shown in the figure. All probes converging to the same feature provide an estimation of its boundaries . Consequently, different features represent different masses. This procedure is highly sensitive and specific for smooth surfaces. However, given that in real chromatographic data a certain level of noise and artifacts are present, in MZmine additional criteria (such as possibility to choose time windows, additional smoothing, etc.) were implemented. A summary of the algorithm is as follows: Ignore artifact spectra in time domain. In chromatography, it is typical to find a peak near the injection time, corresponding to metabolites that show no interaction with the column in the particular gradient. While this is not an artifact per se, given the myriad of signals present and the nature of the detector, the resulting peak is a strong source of artifacts that later affect analysis. To avoid this, the user may enter a list of time ranges to be ignored. The controlling parameter is ignore times whose format is time1-time2, time3-time4, \u2026 Alternatively, the user may crop these data before processing, for example using \u201cRaw Data\u2192Filtering\u2192Data Set\" and ignore setting this parameter. Therefore, this step is optional. Generate equally spaced probes over the mass-time space.To generate the grid, the parameters used are m/z tolerance and minimum width. The gap in the m/z dimension between probes is set to m/z tolerance multiplied by 2 or minimum to 1e-6 and are intercalated between scans. The gap in the time dimension is calculated by time associated to scans, which is estimated by the minimum width divided by 4 (down to a minimum of 1 scan). Move each probe to corresponding local maximum until convergence.Each probe explores its surroundings (limited by the positions of other probes) to locate the highest intensity value, then after updating its position, it keeps exploring the surrounding until a local maximum is reached. To speed up the procedure, generate only interesting features above a certain level of noise, and limit the number of reported features, only intensities higher than minimum height threshold are considered. Generate features by merging probes with similar 2D positions.Many probes will reach the same maximum that must correspond to the same feature. In addition, experimental chromatographic data is noisy and non-smooth, which may generate local maxima very close to each other. Therefore, probes whose difference in m/z is lower than the m/z tolerance and whose difference in time is lower than minimum width are merged. Then, from all probes reaching the same maximum, the m/z assigned to the feature corresponds to the highest observed intensity. The width of the feature is estimated from the probes with the lowest and highest time. To form the peak and estimate its area, the highest value in each scan is used. Remove features whose width is out of a range.Features having large or very low width are likely to be artifacts. To avoid this, all features out within the range given by the parameters minimum width and maximum width (in minutes) are removed. Remove features of similar mass and high cumulative times.Chemical noise or large blurs are characterized by generating many features of similar mass, similar intensities, and separated by short times. To avoid these artifacts, we merge features whose m/z difference is lower than m/z tolerance and whose intensity ratio (higher/lower) is higher than an intensity similarity ratio parameter. Once merged, the removal implemented in step 5 is performed on merged features. Parameters \u00b6 Suffix \u00b6 Suffix to be added to peak list name. Minimum height \u00b6 Only intensities larger than this minimum are considered. m/z tolerance \u00b6 Maximum distance in m/z from the expected location of a peak. Min-max width time (min) \u00b6 Time range for a peak to be recognized as a 'mass'. The optimal value depends on the chromatography system setup. Check 2D raw data to determine typical time spans. Smoothing time (min) \u00b6 Time window used to smooth the signal before detection. Smoothing m/z \u00b6 m/z window used to smooth the signal before detection. False+: Intensity similarity ratio \u00b6 Ratio between features to be recognized as the same. This is highly useful to detect artifacts. False+: Ignore times \u00b6 Ranges of time to be ignored by the method. This can be avoided if the region is previously cleaned using the crop option. Format: timeA-timeB, timeC-timeD,... Olena Mokshyna","title":"GridMass"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#gridmass","text":"","title":"GridMass"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#description","text":"Feature detection \u2192 LC-MS \u2192 GridMass GridMass is an algorithm to detect peaks analyzing 2D data. It directly generates a peak list, which can then be operated using the peak list methods.","title":"Description"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#algorithm","text":"To detect the position and boundaries of masses, the GridMass algorithm first generates a grid of equally spaced probes covering the entire chromatographic area. A representative section is shown in the figure below. Each probe (black dots in Figure) explores a rectangular region around it to find a local maximum. The probe location is moved to the local maxima to further search for a higher value. The procedure is performed until no higher values exist within the exploring rectangle. This local maximum is then defined as a feature , which contains information of the m/z, the time, and the intensity detected. A putative trajectory of a probe is shown in the figure. All probes converging to the same feature provide an estimation of its boundaries . Consequently, different features represent different masses. This procedure is highly sensitive and specific for smooth surfaces. However, given that in real chromatographic data a certain level of noise and artifacts are present, in MZmine additional criteria (such as possibility to choose time windows, additional smoothing, etc.) were implemented. A summary of the algorithm is as follows: Ignore artifact spectra in time domain. In chromatography, it is typical to find a peak near the injection time, corresponding to metabolites that show no interaction with the column in the particular gradient. While this is not an artifact per se, given the myriad of signals present and the nature of the detector, the resulting peak is a strong source of artifacts that later affect analysis. To avoid this, the user may enter a list of time ranges to be ignored. The controlling parameter is ignore times whose format is time1-time2, time3-time4, \u2026 Alternatively, the user may crop these data before processing, for example using \u201cRaw Data\u2192Filtering\u2192Data Set\" and ignore setting this parameter. Therefore, this step is optional. Generate equally spaced probes over the mass-time space.To generate the grid, the parameters used are m/z tolerance and minimum width. The gap in the m/z dimension between probes is set to m/z tolerance multiplied by 2 or minimum to 1e-6 and are intercalated between scans. The gap in the time dimension is calculated by time associated to scans, which is estimated by the minimum width divided by 4 (down to a minimum of 1 scan). Move each probe to corresponding local maximum until convergence.Each probe explores its surroundings (limited by the positions of other probes) to locate the highest intensity value, then after updating its position, it keeps exploring the surrounding until a local maximum is reached. To speed up the procedure, generate only interesting features above a certain level of noise, and limit the number of reported features, only intensities higher than minimum height threshold are considered. Generate features by merging probes with similar 2D positions.Many probes will reach the same maximum that must correspond to the same feature. In addition, experimental chromatographic data is noisy and non-smooth, which may generate local maxima very close to each other. Therefore, probes whose difference in m/z is lower than the m/z tolerance and whose difference in time is lower than minimum width are merged. Then, from all probes reaching the same maximum, the m/z assigned to the feature corresponds to the highest observed intensity. The width of the feature is estimated from the probes with the lowest and highest time. To form the peak and estimate its area, the highest value in each scan is used. Remove features whose width is out of a range.Features having large or very low width are likely to be artifacts. To avoid this, all features out within the range given by the parameters minimum width and maximum width (in minutes) are removed. Remove features of similar mass and high cumulative times.Chemical noise or large blurs are characterized by generating many features of similar mass, similar intensities, and separated by short times. To avoid these artifacts, we merge features whose m/z difference is lower than m/z tolerance and whose intensity ratio (higher/lower) is higher than an intensity similarity ratio parameter. Once merged, the removal implemented in step 5 is performed on merged features.","title":"Algorithm"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#suffix","text":"Suffix to be added to peak list name.","title":"Suffix"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#minimum-height","text":"Only intensities larger than this minimum are considered.","title":"Minimum height"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#mz-tolerance","text":"Maximum distance in m/z from the expected location of a peak.","title":"m/z tolerance"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#min-max-width-time-min","text":"Time range for a peak to be recognized as a 'mass'. The optimal value depends on the chromatography system setup. Check 2D raw data to determine typical time spans.","title":"Min-max width time (min)"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#smoothing-time-min","text":"Time window used to smooth the signal before detection.","title":"Smoothing time (min)"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#smoothing-mz","text":"m/z window used to smooth the signal before detection.","title":"Smoothing m/z"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#false-intensity-similarity-ratio","text":"Ratio between features to be recognized as the same. This is highly useful to detect artifacts.","title":"False+: Intensity similarity ratio"},{"location":"module_docs/lc-ms_featdet/featdet_gridmass/gridmass.html#false-ignore-times","text":"Ranges of time to be ignored by the method. This can be avoided if the region is previously cleaned using the crop option. Format: timeA-timeB, timeC-timeD,... Olena Mokshyna","title":"False+: Ignore times"},{"location":"module_docs/lc-ms_featdet/featdet_results/featdet_results.html","text":"Results of the feature detection \u00b6 Feature table \u00b6 Columns in the table can be displayed or hidden on demand, using \"+\" button or parameter menu button in the right table corner. Feature table includes several groups of columns: - Manual annotation columns, - Parameters of specific feature, - And parameters of chosen feature in a specific data file (filename is shown on top of the columns). State column describes the feature status in a chosen file using several color-coded options: Blue - a feature was found in a primary feature detection, Gray - a feature was found in a secondary feature detection ( e.g. , using Gap filling, after alignment), Orange - a feature was not found in this particular data file, Black - a feature was defined manually. Manual feature integration \u00b6 Sometimes it might be useful to perform manual integration of some selected peaks. To use this option a user can apply a right mouse click on a chosen feature table row and choose \"Define manually\" Olena Mokshyna","title":"Feature detection results"},{"location":"module_docs/lc-ms_featdet/featdet_results/featdet_results.html#results-of-the-feature-detection","text":"","title":"Results of the feature detection"},{"location":"module_docs/lc-ms_featdet/featdet_results/featdet_results.html#feature-table","text":"Columns in the table can be displayed or hidden on demand, using \"+\" button or parameter menu button in the right table corner. Feature table includes several groups of columns: - Manual annotation columns, - Parameters of specific feature, - And parameters of chosen feature in a specific data file (filename is shown on top of the columns). State column describes the feature status in a chosen file using several color-coded options: Blue - a feature was found in a primary feature detection, Gray - a feature was found in a secondary feature detection ( e.g. , using Gap filling, after alignment), Orange - a feature was not found in this particular data file, Black - a feature was defined manually.","title":"Feature table"},{"location":"module_docs/lc-ms_featdet/featdet_results/featdet_results.html#manual-feature-integration","text":"Sometimes it might be useful to perform manual integration of some selected peaks. To use this option a user can apply a right mouse click on a chosen feature table row and choose \"Define manually\" Olena Mokshyna","title":"Manual feature integration"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html","text":"Targeted feature detection \u00b6 Description \u00b6 Feature detection \u2192 LC-MS \u2192 Targeted feature detection This algorithm opens a .csv file with a list of peaks and searches for each peak in the selected raw data file. The most crucial parameters are m/z tolerance and Retention time tolerance *, which define the window where the algorithm should find the new peak. It is centered in the m/z average and retention time average of the source peak list. Once the best candidate is found inside the window, its shape in RT direction is also checked. The *.csv file should have three columns: The first column should contain the expected M/Z, the second column the expected RT, and the third the peak name. Each peak should be in a different row. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to the peak list name. Peak list file \u00b6 Path of the csv file containing the list of peaks to be detected. Field separator \u00b6 Character(s) used to separate fields in the peak list file. Ignore first line \u00b6 Check to ignore the first line of peak list file. Intensity tolerance \u00b6 This value sets the maximum allowed deviation from expected shape of a peak in chromatographic direction. Noise level \u00b6 The minimum intensity level for a data point to be considered part of a chromatogram. All data points below this intensity level are ignored. m/z Tolerance \u00b6 Maximum allowed m/z difference to find the peak Retention time tolerance \u00b6 Maximum allowed retention time difference to find the peak Olena Mokshyna","title":"Targeted feature detection"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#targeted-feature-detection","text":"","title":"Targeted feature detection"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#description","text":"Feature detection \u2192 LC-MS \u2192 Targeted feature detection This algorithm opens a .csv file with a list of peaks and searches for each peak in the selected raw data file. The most crucial parameters are m/z tolerance and Retention time tolerance *, which define the window where the algorithm should find the new peak. It is centered in the m/z average and retention time average of the source peak list. Once the best candidate is found inside the window, its shape in RT direction is also checked. The *.csv file should have three columns: The first column should contain the expected M/Z, the second column the expected RT, and the third the peak name. Each peak should be in a different row.","title":"Description"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#name-suffix","text":"Suffix to be added to the peak list name.","title":"Name suffix"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#peak-list-file","text":"Path of the csv file containing the list of peaks to be detected.","title":"Peak list file"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#field-separator","text":"Character(s) used to separate fields in the peak list file.","title":"Field separator"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#ignore-first-line","text":"Check to ignore the first line of peak list file.","title":"Ignore first line"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#intensity-tolerance","text":"This value sets the maximum allowed deviation from expected shape of a peak in chromatographic direction.","title":"Intensity tolerance"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#noise-level","text":"The minimum intensity level for a data point to be considered part of a chromatogram. All data points below this intensity level are ignored.","title":"Noise level"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#mz-tolerance","text":"Maximum allowed m/z difference to find the peak","title":"m/z Tolerance"},{"location":"module_docs/lc-ms_featdet/targeted_featdet/targeted-featdet.html#retention-time-tolerance","text":"Maximum allowed retention time difference to find the peak Olena Mokshyna","title":"Retention time tolerance"},{"location":"module_docs/norm_linear/norm_linear.html","text":"Linear normalizer \u00b6 Description \u00b6 Feature list methods \u2192 Normalization \u2192 Linear normalizer Linear normalizer divides the height (or area) of each feature in the feature list by a normalization factor, chosen according to the \"Normalization type\" parameter. Each column of the feature list is normalized separately. In other words, normalization factor is determined independently for each raw data file. Normalization factors \u00b6 Different normalization factors can be applied: Average intensity Average height (or area) of all peaks in the column is calculated and used as the normalization factor Average squared intensity Same as Average intensity, but values are squared before calculating the average Maximum peak intensity Maximum height (or area) in the peak list column is used as the normalization factor Total raw signal Sum of the height (or area) of all peaks in the peak list column is used as the normalization factor Parameters \u00b6 Name suffix \u00b6 Suffix to be added to a processed feature list name Normalization type \u00b6 Selection of the normalization factor. Available options: Average intensity Average squared intensity Maximum peak intensity Total raw signal Feature measurement type \u00b6 Selection of either feature height or feature area, which will be used to calculate the normalization factors Original feature list \u00b6 If REMOVE option is selected, the original feature list is removed, allowing to save memory. Olena Mokshyna","title":"Linear normalizer"},{"location":"module_docs/norm_linear/norm_linear.html#linear-normalizer","text":"","title":"Linear normalizer"},{"location":"module_docs/norm_linear/norm_linear.html#description","text":"Feature list methods \u2192 Normalization \u2192 Linear normalizer Linear normalizer divides the height (or area) of each feature in the feature list by a normalization factor, chosen according to the \"Normalization type\" parameter. Each column of the feature list is normalized separately. In other words, normalization factor is determined independently for each raw data file.","title":"Description"},{"location":"module_docs/norm_linear/norm_linear.html#normalization-factors","text":"Different normalization factors can be applied: Average intensity Average height (or area) of all peaks in the column is calculated and used as the normalization factor Average squared intensity Same as Average intensity, but values are squared before calculating the average Maximum peak intensity Maximum height (or area) in the peak list column is used as the normalization factor Total raw signal Sum of the height (or area) of all peaks in the peak list column is used as the normalization factor","title":"Normalization factors"},{"location":"module_docs/norm_linear/norm_linear.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/norm_linear/norm_linear.html#name-suffix","text":"Suffix to be added to a processed feature list name","title":"Name suffix"},{"location":"module_docs/norm_linear/norm_linear.html#normalization-type","text":"Selection of the normalization factor. Available options: Average intensity Average squared intensity Maximum peak intensity Total raw signal","title":"Normalization type"},{"location":"module_docs/norm_linear/norm_linear.html#feature-measurement-type","text":"Selection of either feature height or feature area, which will be used to calculate the normalization factors","title":"Feature measurement type"},{"location":"module_docs/norm_linear/norm_linear.html#original-feature-list","text":"If REMOVE option is selected, the original feature list is removed, allowing to save memory. Olena Mokshyna","title":"Original feature list"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html","text":"Retention time calibration \u00b6 Description \u00b6 Feature list methods \u2192 Normalization \u2192 Retention time calibration The retention time normalizer attempts to reduce the deviation of retention times between feature lists, by searching for common features in these feature lists and using them as normalization standards. Ions present in all given feature lists (according to given m/z, RT tolerance and minimum intensity) in exactly one instance are considered as standards. Retention times of the standards are then averaged and equalized in all samples, and retention times of all other features are adjusted according to the retention times of neighboring standard features. The method requires multiple feature lists of different samples, processed by deconvolution (for example, Local minimum resolver ) but prior to alignment. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to a processed feature list name m/z tolerance \u00b6 Maximum allowed m/z difference for two values to be considered the same Retention time tolerance \u00b6 Maximum allowed difference between two retention time values Minimum standard intensity \u00b6 Minimum height of a feature to be selected as normalization standard Original feature list \u00b6 If REMOVE option is selected, the original feature list is removed, allowing to save memory. Olena Mokshyna","title":"Retention time calibration"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#retention-time-calibration","text":"","title":"Retention time calibration"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#description","text":"Feature list methods \u2192 Normalization \u2192 Retention time calibration The retention time normalizer attempts to reduce the deviation of retention times between feature lists, by searching for common features in these feature lists and using them as normalization standards. Ions present in all given feature lists (according to given m/z, RT tolerance and minimum intensity) in exactly one instance are considered as standards. Retention times of the standards are then averaged and equalized in all samples, and retention times of all other features are adjusted according to the retention times of neighboring standard features. The method requires multiple feature lists of different samples, processed by deconvolution (for example, Local minimum resolver ) but prior to alignment.","title":"Description"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#name-suffix","text":"Suffix to be added to a processed feature list name","title":"Name suffix"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#mz-tolerance","text":"Maximum allowed m/z difference for two values to be considered the same","title":"m/z tolerance"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#retention-time-tolerance","text":"Maximum allowed difference between two retention time values","title":"Retention time tolerance"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#minimum-standard-intensity","text":"Minimum height of a feature to be selected as normalization standard","title":"Minimum standard intensity"},{"location":"module_docs/norm_rt_calibration/norm_rt_calibration.html#original-feature-list","text":"If REMOVE option is selected, the original feature list is removed, allowing to save memory. Olena Mokshyna","title":"Original feature list"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html","text":"Standard compound normalizer \u00b6 Description \u00b6 Feature list methods \u2192 Normalization \u2192 Standard compound normalizer The purpose of this module is to reduce the deviation between samples caused by different detection efficiency. Internal standard peaks must be present in the detected samples. User can select one or multiple internal standard peaks, which must be present in all raw data files. Then peak height (or area) of each peak is normalized by either the nearest standard or a weighted contribution of all standards. In case a weighted contribution is used, the contributions of all standards are weighted by distance. The distance of the standard peak to the peak being normalized is calculated as \\[distance = MZvsRT_{Balance} * MZ_{difference} + RT_{difference}\\] where \\(MZvsRT_{Balance}\\) is a multiplier of m/z difference set by m/z vs RT balance parameter Feature list must be aligned prior to normalization. Parameters \u00b6 Name suffix \u00b6 Suffix to be added to a processed feature list name Normalization type \u00b6 Normalize intensities using either only one (nearest) standard or using a weighted contribution of all selected standards, weighted by distance. Feature measurement type \u00b6 Selection of either feature height or feature area, which will be used to calculate the normalization factors m/z vs RT balance \u00b6 Used in distance measuring as a multiplier of m/z difference. Standard compounds \u00b6 List of features for choosing the normalization standards Original peak list \u00b6 If selected, the original peak list is automatically removed Olena Mokshyna","title":"Standard compound normalizer"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#standard-compound-normalizer","text":"","title":"Standard compound normalizer"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#description","text":"Feature list methods \u2192 Normalization \u2192 Standard compound normalizer The purpose of this module is to reduce the deviation between samples caused by different detection efficiency. Internal standard peaks must be present in the detected samples. User can select one or multiple internal standard peaks, which must be present in all raw data files. Then peak height (or area) of each peak is normalized by either the nearest standard or a weighted contribution of all standards. In case a weighted contribution is used, the contributions of all standards are weighted by distance. The distance of the standard peak to the peak being normalized is calculated as \\[distance = MZvsRT_{Balance} * MZ_{difference} + RT_{difference}\\] where \\(MZvsRT_{Balance}\\) is a multiplier of m/z difference set by m/z vs RT balance parameter Feature list must be aligned prior to normalization.","title":"Description"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#parameters","text":"","title":"Parameters"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#name-suffix","text":"Suffix to be added to a processed feature list name","title":"Name suffix"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#normalization-type","text":"Normalize intensities using either only one (nearest) standard or using a weighted contribution of all selected standards, weighted by distance.","title":"Normalization type"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#feature-measurement-type","text":"Selection of either feature height or feature area, which will be used to calculate the normalization factors","title":"Feature measurement type"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#mz-vs-rt-balance","text":"Used in distance measuring as a multiplier of m/z difference.","title":"m/z vs RT balance"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#standard-compounds","text":"List of features for choosing the normalization standards","title":"Standard compounds"},{"location":"module_docs/norm_stand_cmpd/norm_stand_cmpd.html#original-peak-list","text":"If selected, the original peak list is automatically removed Olena Mokshyna","title":"Original peak list"},{"location":"terminology/general-terminology.html","text":"General terminology \u00b6 MS \u00b6 Precursor and fragment ions \u00b6 The precuror ion (a.k.a. \"parent ion\") is the ion that dissociates to a smaller fragment ions in MS/MS experiment. A fragment ion (a.k.a. \"daughter ion\" or \"product ion\") is the charged product of an ion dissociation. A fragment ion may be stable or may dissociate further to form other charged fragment ions and neutral species of successively lower mass. Accurate mass, exact mass and mass accuracy \u00b6 The accurate mass is the experimentally-determined mass of an ion measured with a high-resolution mass spectrometer. The exact mass is the calculated mass of an ion based on its elemental formula, isotopic composition and charge state. While the accurate mass is an experimentally-measured quantity, the exact mass is a theoretically-calculated quantity. The mass accuracy is defined as the difference between the measured value (accurate mass) and the true value (exact mass). It can be expressed either in absolute (mDa) or relative (ppm) units. Monoisotopic mass \u00b6 Exact mass of an ion calculated using the mass of the lightest isotope of each element. Isotopic pattern \u00b6 Isotopic (or isotope) pattern describes a set of peaks related to the ions with the same chemical formula but containing different isotopes; e.g. the 16 and 17 mass/charge peaks in a CH4 sample arising from 12 CH 4 + and 13 CH 4 + ions. Mass resolution \u00b6 Resolution describes an ability of MS method to distinguish two peaks of different mass-to-charge ratios. Can be interchangeably used with mass resolving power Wikipedia article on MS resolution Mass resolving power \u00b6 In a mass spectrum, the observed mass divided by the difference between two masses that can be separated, m/\u0394m. Data acquisition mode \u00b6 Process of sampling to capture the signals. Different modes have been introduced to better capture signals after LC separation, especially in metabolomics. In MS data can be acquired using three main modes: Full scan acquisition mode Data-dependent acqusition mode Data-independent acquisition mode Read more: Comparison of data-dependent and data-independent modes Full scan acquisition mode \u00b6 In full-scan mode, the mass spectrometer runs on MS1-only mode, and measures m/z values and abundances of all the metabolic features. Widely used as it allows to capture most of the relevant ions. Further confirmation of statistically significant features is typically carried out by a separate LC-MS/MS run in a targeted manner. Data-dependent acqusition mode (DDA) \u00b6 Mode of the data collection in tandem mass spectrometry . In data-dependent acquisition ( DDA ) schemes, the mass spectrometer detects 'suitable' precursor ions in each MS scan and selects them for fragmentation in consecutive MS2 scans. DDA can redundantly identify high-abundance features, while neglecting low-abundance ones. TopN acquisition scheme In TopN scheme, the set of N ions is selected for fragmentation by their intensity in the latest MS1 survey scan. Data-independent acqusition mode (DIA) \u00b6 DIA can be conducted either by fragmenting all ions that enter the instrument at a given time (called broadband DIA) or by sequentially focusing on a m/z window of precursors and fragmenting all precursors detected within that window. Cycle time acquisition scheme In cycle time acquistion, a set of precursor ions is selected using m/z values (usually 1.0 to 2.0 m/z range). A full MS/MS fragment ion spectrum is collected for each ion. Cycle time is determined by scan times of all scans in the set. LC-MS \u00b6 Total ion current chromatogram \u00b6 The total ion current (TIC) chromatogram displays the summed signal intensity (y-axis) over the entire m/z range at any one retention time point (x-axis) in the LC-MS run. The following figure shows a TIC chromatogram of a 9-compounds mixture analysed on LC-MS system. In complex samples, the TIC chromatogram often provides limited information as multiple analytes elute simultaneously, obscuring individual species. Base peak chromatogram \u00b6 The base peak chromatogram (BPC) displays the signal intensity of the most intense maass peak in the MS spectra at any one retention time point (x-axis) in the LC-MS run. The following figure shows the same data as above, visualized in BPI mode. Extracted ion chromatogram \u00b6 The extracted ion chromatogram (EIC) displays the signal intensity of a specific m/z value, within a defined tolerance (e.g. \u00b1 5 ppm), at any one retention time point in the LC-MS run. The following figure shows the EIC of m/z 455.2945 \u00b1 5 ppm (same sample as above). Chromatographic resolving \u00b6 Peak overlapping, or co-elution, is a common problem in any chromatographic separation technique. In the case of LC-MS (especially untargeted omics analysis), it is virtually impossible to obtain a full baseline separation for the hundreds (or thousands) of analytes eluted through the column. The split of partially-overlapping and shoulder peaks into indivual features is generally referred to as chromatographic resolving and is one of the most crucial steps of data processing. TO FINISH. Missing values \u00b6 MISSING VALUE DEFINITION (see https://www.nature.com/articles/s41598-017-19120-0). Missing values_ can be caused by biological and/or technical reasons. A gap (match-to-nothing) is defined as a missing value in an alignment. Peaks that cannot be aligned (corresponding to a gap) are designated with a value of \u201cNA\u201d (missing value). Missing value imputation \u00b6 Missing valueS are generally undesired as they might introduce bias and significantly affect downstream data analysis, especially when statistics is involved. Therefore, it is important to REDUCE THEM. To tackle this issue, a value for the peak needs to be imputed. The peak finder gap-filling module. A simple gap-filling approach is to integrate the area where the peak is expected but not detected. These areas usually correspond to spectral noise. By doing so, no bias is introduced. Therefore, we recommend to always run the gap filling module before the missing value imputataion. The other alternative for gap filling is the Same RT and m/z range gap filler , which limits the gap fill to features within the original detected peak window. This leads to much cleaner results. However, this module causes MISSING VALUE IMPUTATION. For purposes of further data processing, noise should be always preferred to zero values. MZmine 3 does not support missing-value imputation. MZmine-specific terminology \u00b6 Masses and Features \u00b6 In MS data processing, the term mass is normally used to refer to an individual signal in a mass spectrum, which corresponds to an ion detected by the mass spectrometer (see Mass detection ). In LC-MS, a feature is defined as a bounded, two-dimensional ( m/z and RT dimensions) signal characterized by a pair of m/z and RT values and associated with the detected signal intensity. In LC-IM-MS, a feature is also characterized by the ion mobility value recorded for the ion (see LC-MS and LC-IMS-MS data comparison . MZmine 3 provides a selection of different algorithms for LC-(IM)-MS feature detection, depending on the nature of the MS data ( e.g. mass accuracy and resolution). All the algorithms follow the same logic: EICs are constructed starting from each m/z value in the mass lists Then, EICs are subsequently deconvoluted into individual features (see figure). Finally, additional information, such as isotope pattern, adduct type, etc. can be assigned to the individual features. Mass list \u00b6 In MZmine, we call mass list the output of the mass detection module. A mass list is a list of m/z values and corresponding signal intensities, found in each mass spectrum (MS or MSn) of each processed raw data file. Every mass spectrum contained in the raw file is processed individually. The signals exceeding the set noise threshold are included in the mass list. See Mass detection module. Feature list \u00b6 In MZmine, feature lists are the output of the feature detection process (see Masses and features ). The set of detected features in each LC-MS run is stored as a list, hence the name \"feature list\" (see, for example, ADAP chromatogram builder and Local mimimum resolver for more details). Multiple feature lists can undergo further processing ( e.g. feature alingment) which results in a table (often referred to as feature table ) where samples are arranged in columns, features in rows and each entry contains the signal intensity detected for the corresponding feature in the corresponding sample. Intra and inter-scan tolerances \u00b6 m/z tolerance is defined as maximum allowed difference between m/z values in order for them to be considered the same. Can be defined as intra-scan m/z tolerance for values with one scan (used, e.g. , in Mass detection of isotope signals ) or inter-scan m/z tolerance for values between different scans (in, e.g. , ADAP Chromatogram Builder ) Chromatogram resolving \u00b6 Was referred to as Deconvolution in MZmine 2. Process of splitting \"imperfect\" - overlapping and partially co-eluting - peaks, which are retained as single features, into the separate features. References \u00b6 Pluskal, T., Castillo, S., Villar-Briones, A. & Oresic, M. MZmine 2: Modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data. BMC Bioinformatics (2010). DOI: 10.1186/1471-2105-11-395 Pluskal, T. et al. Processing Metabolomics and Proteomics Data with Open Software: A Practical Guide, Chapter 7: Metabolomics Data Analysis Using MZmine (2020). DOI: 10.1039/9781788019880-00232 Smoluch M., Piechura K. Mass Spectrometry: An Applied Approach, Chapter 3: Basic Definitions (2019). DOI: 10.1002/9781119377368.ch3 IUPAC. Compendium of Chemical Terminology, 2nd ed. (the \"Gold Book\"). Compiled by A. D. McNaught and A. Wilkinson. Blackwell Scientific Publications, Oxford (1997). Online version (2019-) created by S. J. Chalk. ISBN 0-9678550-9-8. 10.1351/goldbook Guo, J., Huan T. Evaluation of significant features discovered from different data acquisition modes in mass spectrometry-based untargeted metabolomics. Analytica Chimica Acta (2020). DOI: 10.1016/j.aca.2020.08.065 Olena Mokshyna (68.71%), SteffenHeu (0.61%), tdamiani (30.67%)","title":"General Terminology"},{"location":"terminology/general-terminology.html#general-terminology","text":"","title":"General terminology"},{"location":"terminology/general-terminology.html#ms","text":"","title":"MS"},{"location":"terminology/general-terminology.html#precursor-and-fragment-ions","text":"The precuror ion (a.k.a. \"parent ion\") is the ion that dissociates to a smaller fragment ions in MS/MS experiment. A fragment ion (a.k.a. \"daughter ion\" or \"product ion\") is the charged product of an ion dissociation. A fragment ion may be stable or may dissociate further to form other charged fragment ions and neutral species of successively lower mass.","title":"Precursor and fragment ions"},{"location":"terminology/general-terminology.html#accurate-mass-exact-mass-and-mass-accuracy","text":"The accurate mass is the experimentally-determined mass of an ion measured with a high-resolution mass spectrometer. The exact mass is the calculated mass of an ion based on its elemental formula, isotopic composition and charge state. While the accurate mass is an experimentally-measured quantity, the exact mass is a theoretically-calculated quantity. The mass accuracy is defined as the difference between the measured value (accurate mass) and the true value (exact mass). It can be expressed either in absolute (mDa) or relative (ppm) units.","title":"Accurate mass, exact mass and mass accuracy"},{"location":"terminology/general-terminology.html#monoisotopic-mass","text":"Exact mass of an ion calculated using the mass of the lightest isotope of each element.","title":"Monoisotopic mass"},{"location":"terminology/general-terminology.html#isotopic-pattern","text":"Isotopic (or isotope) pattern describes a set of peaks related to the ions with the same chemical formula but containing different isotopes; e.g. the 16 and 17 mass/charge peaks in a CH4 sample arising from 12 CH 4 + and 13 CH 4 + ions.","title":"Isotopic pattern"},{"location":"terminology/general-terminology.html#mass-resolution","text":"Resolution describes an ability of MS method to distinguish two peaks of different mass-to-charge ratios. Can be interchangeably used with mass resolving power Wikipedia article on MS resolution","title":"Mass resolution"},{"location":"terminology/general-terminology.html#mass-resolving-power","text":"In a mass spectrum, the observed mass divided by the difference between two masses that can be separated, m/\u0394m.","title":"Mass resolving power"},{"location":"terminology/general-terminology.html#data-acquisition-mode","text":"Process of sampling to capture the signals. Different modes have been introduced to better capture signals after LC separation, especially in metabolomics. In MS data can be acquired using three main modes: Full scan acquisition mode Data-dependent acqusition mode Data-independent acquisition mode Read more: Comparison of data-dependent and data-independent modes","title":"Data acquisition mode"},{"location":"terminology/general-terminology.html#full-scan-acquisition-mode","text":"In full-scan mode, the mass spectrometer runs on MS1-only mode, and measures m/z values and abundances of all the metabolic features. Widely used as it allows to capture most of the relevant ions. Further confirmation of statistically significant features is typically carried out by a separate LC-MS/MS run in a targeted manner.","title":"Full scan acquisition mode"},{"location":"terminology/general-terminology.html#data-dependent-acqusition-mode-dda","text":"Mode of the data collection in tandem mass spectrometry . In data-dependent acquisition ( DDA ) schemes, the mass spectrometer detects 'suitable' precursor ions in each MS scan and selects them for fragmentation in consecutive MS2 scans. DDA can redundantly identify high-abundance features, while neglecting low-abundance ones. TopN acquisition scheme In TopN scheme, the set of N ions is selected for fragmentation by their intensity in the latest MS1 survey scan.","title":"Data-dependent acqusition mode (DDA)"},{"location":"terminology/general-terminology.html#data-independent-acqusition-mode-dia","text":"DIA can be conducted either by fragmenting all ions that enter the instrument at a given time (called broadband DIA) or by sequentially focusing on a m/z window of precursors and fragmenting all precursors detected within that window. Cycle time acquisition scheme In cycle time acquistion, a set of precursor ions is selected using m/z values (usually 1.0 to 2.0 m/z range). A full MS/MS fragment ion spectrum is collected for each ion. Cycle time is determined by scan times of all scans in the set.","title":"Data-independent acqusition mode (DIA)"},{"location":"terminology/general-terminology.html#lc-ms","text":"","title":"LC-MS"},{"location":"terminology/general-terminology.html#total-ion-current-chromatogram","text":"The total ion current (TIC) chromatogram displays the summed signal intensity (y-axis) over the entire m/z range at any one retention time point (x-axis) in the LC-MS run. The following figure shows a TIC chromatogram of a 9-compounds mixture analysed on LC-MS system. In complex samples, the TIC chromatogram often provides limited information as multiple analytes elute simultaneously, obscuring individual species.","title":"Total ion current chromatogram"},{"location":"terminology/general-terminology.html#base-peak-chromatogram","text":"The base peak chromatogram (BPC) displays the signal intensity of the most intense maass peak in the MS spectra at any one retention time point (x-axis) in the LC-MS run. The following figure shows the same data as above, visualized in BPI mode.","title":"Base peak chromatogram"},{"location":"terminology/general-terminology.html#extracted-ion-chromatogram","text":"The extracted ion chromatogram (EIC) displays the signal intensity of a specific m/z value, within a defined tolerance (e.g. \u00b1 5 ppm), at any one retention time point in the LC-MS run. The following figure shows the EIC of m/z 455.2945 \u00b1 5 ppm (same sample as above).","title":"Extracted ion chromatogram"},{"location":"terminology/general-terminology.html#chromatographic-resolving","text":"Peak overlapping, or co-elution, is a common problem in any chromatographic separation technique. In the case of LC-MS (especially untargeted omics analysis), it is virtually impossible to obtain a full baseline separation for the hundreds (or thousands) of analytes eluted through the column. The split of partially-overlapping and shoulder peaks into indivual features is generally referred to as chromatographic resolving and is one of the most crucial steps of data processing. TO FINISH.","title":"Chromatographic resolving"},{"location":"terminology/general-terminology.html#missing-values","text":"MISSING VALUE DEFINITION (see https://www.nature.com/articles/s41598-017-19120-0). Missing values_ can be caused by biological and/or technical reasons. A gap (match-to-nothing) is defined as a missing value in an alignment. Peaks that cannot be aligned (corresponding to a gap) are designated with a value of \u201cNA\u201d (missing value).","title":"Missing values"},{"location":"terminology/general-terminology.html#missing-value-imputation","text":"Missing valueS are generally undesired as they might introduce bias and significantly affect downstream data analysis, especially when statistics is involved. Therefore, it is important to REDUCE THEM. To tackle this issue, a value for the peak needs to be imputed. The peak finder gap-filling module. A simple gap-filling approach is to integrate the area where the peak is expected but not detected. These areas usually correspond to spectral noise. By doing so, no bias is introduced. Therefore, we recommend to always run the gap filling module before the missing value imputataion. The other alternative for gap filling is the Same RT and m/z range gap filler , which limits the gap fill to features within the original detected peak window. This leads to much cleaner results. However, this module causes MISSING VALUE IMPUTATION. For purposes of further data processing, noise should be always preferred to zero values. MZmine 3 does not support missing-value imputation.","title":"Missing value imputation"},{"location":"terminology/general-terminology.html#mzmine-specific-terminology","text":"","title":"MZmine-specific terminology"},{"location":"terminology/general-terminology.html#masses-and-features","text":"In MS data processing, the term mass is normally used to refer to an individual signal in a mass spectrum, which corresponds to an ion detected by the mass spectrometer (see Mass detection ). In LC-MS, a feature is defined as a bounded, two-dimensional ( m/z and RT dimensions) signal characterized by a pair of m/z and RT values and associated with the detected signal intensity. In LC-IM-MS, a feature is also characterized by the ion mobility value recorded for the ion (see LC-MS and LC-IMS-MS data comparison . MZmine 3 provides a selection of different algorithms for LC-(IM)-MS feature detection, depending on the nature of the MS data ( e.g. mass accuracy and resolution). All the algorithms follow the same logic: EICs are constructed starting from each m/z value in the mass lists Then, EICs are subsequently deconvoluted into individual features (see figure). Finally, additional information, such as isotope pattern, adduct type, etc. can be assigned to the individual features.","title":"Masses and Features"},{"location":"terminology/general-terminology.html#mass-list","text":"In MZmine, we call mass list the output of the mass detection module. A mass list is a list of m/z values and corresponding signal intensities, found in each mass spectrum (MS or MSn) of each processed raw data file. Every mass spectrum contained in the raw file is processed individually. The signals exceeding the set noise threshold are included in the mass list. See Mass detection module.","title":"Mass list"},{"location":"terminology/general-terminology.html#feature-list","text":"In MZmine, feature lists are the output of the feature detection process (see Masses and features ). The set of detected features in each LC-MS run is stored as a list, hence the name \"feature list\" (see, for example, ADAP chromatogram builder and Local mimimum resolver for more details). Multiple feature lists can undergo further processing ( e.g. feature alingment) which results in a table (often referred to as feature table ) where samples are arranged in columns, features in rows and each entry contains the signal intensity detected for the corresponding feature in the corresponding sample.","title":"Feature list"},{"location":"terminology/general-terminology.html#intra-and-inter-scan-tolerances","text":"m/z tolerance is defined as maximum allowed difference between m/z values in order for them to be considered the same. Can be defined as intra-scan m/z tolerance for values with one scan (used, e.g. , in Mass detection of isotope signals ) or inter-scan m/z tolerance for values between different scans (in, e.g. , ADAP Chromatogram Builder )","title":"Intra and inter-scan tolerances"},{"location":"terminology/general-terminology.html#chromatogram-resolving","text":"Was referred to as Deconvolution in MZmine 2. Process of splitting \"imperfect\" - overlapping and partially co-eluting - peaks, which are retained as single features, into the separate features.","title":"Chromatogram resolving"},{"location":"terminology/general-terminology.html#references","text":"Pluskal, T., Castillo, S., Villar-Briones, A. & Oresic, M. MZmine 2: Modular framework for processing, visualizing, and analyzing mass spectrometry-based molecular profile data. BMC Bioinformatics (2010). DOI: 10.1186/1471-2105-11-395 Pluskal, T. et al. Processing Metabolomics and Proteomics Data with Open Software: A Practical Guide, Chapter 7: Metabolomics Data Analysis Using MZmine (2020). DOI: 10.1039/9781788019880-00232 Smoluch M., Piechura K. Mass Spectrometry: An Applied Approach, Chapter 3: Basic Definitions (2019). DOI: 10.1002/9781119377368.ch3 IUPAC. Compendium of Chemical Terminology, 2nd ed. (the \"Gold Book\"). Compiled by A. D. McNaught and A. Wilkinson. Blackwell Scientific Publications, Oxford (1997). Online version (2019-) created by S. J. Chalk. ISBN 0-9678550-9-8. 10.1351/goldbook Guo, J., Huan T. Evaluation of significant features discovered from different data acquisition modes in mass spectrometry-based untargeted metabolomics. Analytica Chimica Acta (2020). DOI: 10.1016/j.aca.2020.08.065 Olena Mokshyna (68.71%), SteffenHeu (0.61%), tdamiani (30.67%)","title":"References"},{"location":"terminology/ion-mobility-terminology.html","text":"Ion mobility spectrometry terminology \u00b6 Background \u00b6 Ion-mobility mass-spectrometry, here simply referred to as ion-mobility (IM) , is an analytical technique where ions are separated through a gas-filled mobility cell prior to the MS acquisition. In classic drift tube ion mobility (DTIM) , ions migrate through an inert buffer gas under the influence of a weak electric field. Ions drift with different velocity based on their interaction with the buffer gas, which allows for the separation of different shaped molecules. Modern devices are able to perform IM separation on a millisecond timescale, typically within 10 to 100 ms. As larger ions have more collisions with the gas, they are more strongly retarded than their smaller counterparts. Thus, smaller ions, having a smaller cross section, arrive earlier at the detector than ions with a larger collisional cross section ( CCS ). The ion mobility \\(K\\) is then defined as the ratio of the analyte's steady-state net drift velocity to the applied electric field, and it is convention to calculate the reduced ion mobility \\(K_0\\) at standard pressure and standard temperature. This value is often reported as the inverse reduced ion mobility \\(1/K_0\\) . From practical point of view, IM nicely fits in-between LC separation (~seconds timescale) and MS detection of TOF instruments (~microseconds timescale). This allows LC-IM-MS instruments to acquire several MS spectra during each accumulation , without incurring sensitivity loss. For example, assuming a typical 100 \u00b5s MS-acquisition time of TOF analyzers, around 1000 spectra can be recorded within 100 ms of IM separation. Therefore, as opposed to LC-MS, multiple MS (or MS2) spectra are associated to each RT in LC-IM-MS data. A more detailed explanation of LC-MS and LC-IMS-MS raw data structure is provided here . Visual explanation of IMS by Waters Trapped ion mobility spectrometry (TIMS) \u00b6 Trapped ion mobility spectrometry (TIMS) reverses the concept of traditional drift tube IM. Rather than moving ions through a stationary gas, TIMS holds ions stationary against a moving gas and then releases them according to their mobility. TIMS has the advantage that the physical dimension of the analyzer can be smaller, whereas the analytical column of gas \u2013 the column that flows past during the course of an analysis \u2013 can be large and user defined. This can lead to increased method sensitivity. Bruker's TIMS TOF Video Time-dispersive ion mobility spectrometry (DTIMS and TWIMS) \u00b6 Time-dispersve IM devices include \"traditional\" drift tube (DTIMS) and travelling-wave (TWIMS) devices. In TWIMS, ions are propelled through a gas-filled stacked ring ion guide with the help of travelling voltage waves. Higher mobility ions undergo less \u2018roll over\u2019 events on the waves than the lower mobility ions. As the waves pass along the device, ions can \u2018surf\u2019 on the wave front for a period of time before being overtaken by the wave. Usage of travelling waves makes possible to increase sensitivity, selectivity, and speed of the method. For more information, see Fundamentals of Traveling Wave Ion Mobility Spectrometry DOI: 10.1021/ac8016295 Terminology \u00b6 Accumulations, Mobility Scans and Frames \u00b6 Altough mainly used for TIMS, the term \"accumulation\" refers to the pack of ions gathered at the head of the IM device prior to the release and separation in the IM cell. As explained above , since the accumulation-separation cycle typically last ~100 ms, multiple MS spectra (referred to as \"mobility scans\" in MZmine) are acquired during each cycle. Frame is the set of mobility scans collected during each IM separation. A frame can be seen as the IM separation of a single accumulation, along which multiple MS spectra are collected. Several frames are contained within one LC peak. Thus, the frame number are a natural unit to measure chromatographic RT. See here for more details. Mobilograms \u00b6 A \" mobilogram \" represents the intensity of an m/z or m/z range along the mobility axis. A mobilogram may be build from multiple frames and summed or built from a single frame. Ion mobility trace \u00b6 An \" ion mobility trace \" basically represents a mobility resolved extracted ion chromatogram (EIC). Collisional Cross Section \u00b6 Collision cross section (CCS) can be defined as area of interaction between an individual ion and gas molecule. CCS depends on ion's size, shape, and charge. IM-derived CCS values can be used as an additional molecular descriptor to support the compound unknown identification process. References \u00b6 Meier, F., Brunner, A.D., Koch, S., Cox, J., R\u00e4ther, O., Mann, M. Online Parallel Accumulation\u2013Serial Fragmentation (PASEF) with a Novel Trapped Ion Mobility Mass Spectrometer. Molecular & Cellular Proteomics (2018). DOI: 10.1074/mcp.TIR118.000900 Paglia, G. et al. Ion Mobility Derived Collision Cross Sections to Support Metabolomics Applications. Anal. Chem. (2014). DOI: 10.1021/ac500405x Olena Mokshyna (62.5%), tdamiani (37.5%)","title":"IMS Terminology"},{"location":"terminology/ion-mobility-terminology.html#ion-mobility-spectrometry-terminology","text":"","title":"Ion mobility spectrometry terminology"},{"location":"terminology/ion-mobility-terminology.html#background","text":"Ion-mobility mass-spectrometry, here simply referred to as ion-mobility (IM) , is an analytical technique where ions are separated through a gas-filled mobility cell prior to the MS acquisition. In classic drift tube ion mobility (DTIM) , ions migrate through an inert buffer gas under the influence of a weak electric field. Ions drift with different velocity based on their interaction with the buffer gas, which allows for the separation of different shaped molecules. Modern devices are able to perform IM separation on a millisecond timescale, typically within 10 to 100 ms. As larger ions have more collisions with the gas, they are more strongly retarded than their smaller counterparts. Thus, smaller ions, having a smaller cross section, arrive earlier at the detector than ions with a larger collisional cross section ( CCS ). The ion mobility \\(K\\) is then defined as the ratio of the analyte's steady-state net drift velocity to the applied electric field, and it is convention to calculate the reduced ion mobility \\(K_0\\) at standard pressure and standard temperature. This value is often reported as the inverse reduced ion mobility \\(1/K_0\\) . From practical point of view, IM nicely fits in-between LC separation (~seconds timescale) and MS detection of TOF instruments (~microseconds timescale). This allows LC-IM-MS instruments to acquire several MS spectra during each accumulation , without incurring sensitivity loss. For example, assuming a typical 100 \u00b5s MS-acquisition time of TOF analyzers, around 1000 spectra can be recorded within 100 ms of IM separation. Therefore, as opposed to LC-MS, multiple MS (or MS2) spectra are associated to each RT in LC-IM-MS data. A more detailed explanation of LC-MS and LC-IMS-MS raw data structure is provided here . Visual explanation of IMS by Waters","title":"Background"},{"location":"terminology/ion-mobility-terminology.html#trapped-ion-mobility-spectrometry-tims","text":"Trapped ion mobility spectrometry (TIMS) reverses the concept of traditional drift tube IM. Rather than moving ions through a stationary gas, TIMS holds ions stationary against a moving gas and then releases them according to their mobility. TIMS has the advantage that the physical dimension of the analyzer can be smaller, whereas the analytical column of gas \u2013 the column that flows past during the course of an analysis \u2013 can be large and user defined. This can lead to increased method sensitivity. Bruker's TIMS TOF Video","title":"Trapped ion mobility spectrometry (TIMS)"},{"location":"terminology/ion-mobility-terminology.html#time-dispersive-ion-mobility-spectrometry-dtims-and-twims","text":"Time-dispersve IM devices include \"traditional\" drift tube (DTIMS) and travelling-wave (TWIMS) devices. In TWIMS, ions are propelled through a gas-filled stacked ring ion guide with the help of travelling voltage waves. Higher mobility ions undergo less \u2018roll over\u2019 events on the waves than the lower mobility ions. As the waves pass along the device, ions can \u2018surf\u2019 on the wave front for a period of time before being overtaken by the wave. Usage of travelling waves makes possible to increase sensitivity, selectivity, and speed of the method. For more information, see Fundamentals of Traveling Wave Ion Mobility Spectrometry DOI: 10.1021/ac8016295","title":"Time-dispersive ion mobility spectrometry (DTIMS and TWIMS)"},{"location":"terminology/ion-mobility-terminology.html#terminology","text":"","title":"Terminology"},{"location":"terminology/ion-mobility-terminology.html#accumulations-mobility-scans-and-frames","text":"Altough mainly used for TIMS, the term \"accumulation\" refers to the pack of ions gathered at the head of the IM device prior to the release and separation in the IM cell. As explained above , since the accumulation-separation cycle typically last ~100 ms, multiple MS spectra (referred to as \"mobility scans\" in MZmine) are acquired during each cycle. Frame is the set of mobility scans collected during each IM separation. A frame can be seen as the IM separation of a single accumulation, along which multiple MS spectra are collected. Several frames are contained within one LC peak. Thus, the frame number are a natural unit to measure chromatographic RT. See here for more details.","title":"Accumulations, Mobility Scans and Frames"},{"location":"terminology/ion-mobility-terminology.html#mobilograms","text":"A \" mobilogram \" represents the intensity of an m/z or m/z range along the mobility axis. A mobilogram may be build from multiple frames and summed or built from a single frame.","title":"Mobilograms"},{"location":"terminology/ion-mobility-terminology.html#ion-mobility-trace","text":"An \" ion mobility trace \" basically represents a mobility resolved extracted ion chromatogram (EIC).","title":"Ion mobility trace"},{"location":"terminology/ion-mobility-terminology.html#collisional-cross-section","text":"Collision cross section (CCS) can be defined as area of interaction between an individual ion and gas molecule. CCS depends on ion's size, shape, and charge. IM-derived CCS values can be used as an additional molecular descriptor to support the compound unknown identification process.","title":"Collisional Cross Section"},{"location":"terminology/ion-mobility-terminology.html#references","text":"Meier, F., Brunner, A.D., Koch, S., Cox, J., R\u00e4ther, O., Mann, M. Online Parallel Accumulation\u2013Serial Fragmentation (PASEF) with a Novel Trapped Ion Mobility Mass Spectrometer. Molecular & Cellular Proteomics (2018). DOI: 10.1074/mcp.TIR118.000900 Paglia, G. et al. Ion Mobility Derived Collision Cross Sections to Support Metabolomics Applications. Anal. Chem. (2014). DOI: 10.1021/ac500405x Olena Mokshyna (62.5%), tdamiani (37.5%)","title":"References"},{"location":"visualization_modules/feature_histograms/feature_hist.html","text":"Histogram plot \u00b6 Description \u00b6 Visualization \u2192 Histogram plot This plot displays a graphic representation of frequencies. Each rectangle represents an interval of frequency. The height is also equal to the frequency density in that interval. The total area of the histogram is equal to the number of data. This tool can use the m/z value, height, area or retention time as frequency value (X axis) and number of peaks in each interval (Y axis). Parameters \u00b6 Raw data files \u00b6 Column of peaks to be plotted. Plotted data type \u00b6 Peak's data to be plotted ( m/z value, height, area or retention time) Plotted data range \u00b6 Range of data to be plotted. This range is automatically loaded with max values from the raw data. Number of bins \u00b6 The plot is divides into this number of bins. Functionality \u00b6 This plot is using the third part library JfreeChart for its basic functionality. To zoom in, drag the mouse from left to right, selecting the area to zoom. To zoom out drag the zoom from right to left. The next figure shows a histogram using the retention time value. This data is coming from a raw data with a duration of 60 min. Most of the peaks appears around 17 min. The next figure shows a histogram using the m/z value. This data is coming from a raw data with a range from 350 to 1400 m/z. Olena Mokshyna","title":"Feature histograms"},{"location":"visualization_modules/feature_histograms/feature_hist.html#histogram-plot","text":"","title":"Histogram plot"},{"location":"visualization_modules/feature_histograms/feature_hist.html#description","text":"Visualization \u2192 Histogram plot This plot displays a graphic representation of frequencies. Each rectangle represents an interval of frequency. The height is also equal to the frequency density in that interval. The total area of the histogram is equal to the number of data. This tool can use the m/z value, height, area or retention time as frequency value (X axis) and number of peaks in each interval (Y axis).","title":"Description"},{"location":"visualization_modules/feature_histograms/feature_hist.html#parameters","text":"","title":"Parameters"},{"location":"visualization_modules/feature_histograms/feature_hist.html#raw-data-files","text":"Column of peaks to be plotted.","title":"Raw data files"},{"location":"visualization_modules/feature_histograms/feature_hist.html#plotted-data-type","text":"Peak's data to be plotted ( m/z value, height, area or retention time)","title":"Plotted data type"},{"location":"visualization_modules/feature_histograms/feature_hist.html#plotted-data-range","text":"Range of data to be plotted. This range is automatically loaded with max values from the raw data.","title":"Plotted data range"},{"location":"visualization_modules/feature_histograms/feature_hist.html#number-of-bins","text":"The plot is divides into this number of bins.","title":"Number of bins"},{"location":"visualization_modules/feature_histograms/feature_hist.html#functionality","text":"This plot is using the third part library JfreeChart for its basic functionality. To zoom in, drag the mouse from left to right, selecting the area to zoom. To zoom out drag the zoom from right to left. The next figure shows a histogram using the retention time value. This data is coming from a raw data with a duration of 60 min. Most of the peaks appears around 17 min. The next figure shows a histogram using the m/z value. This data is coming from a raw data with a range from 350 to 1400 m/z. Olena Mokshyna","title":"Functionality"},{"location":"visualization_modules/image_raw_data/image_viewer.html","text":"Image viewer \u00b6 This module is under active development. Some newer features might not be fully documented. Description \u00b6 Visualization \u2192 Image viewer This visualization module provides an overview of imaging data. The interactive imaging plot [1] allows to choose any pixel and explore related spectrum. In [3] user can choose feature from a feature list to be depicted on a scan (prior feature detection is required). [2] gives information about file and imaging parameters. Olena Mokshyna","title":"Image viewer"},{"location":"visualization_modules/image_raw_data/image_viewer.html#image-viewer","text":"This module is under active development. Some newer features might not be fully documented.","title":"Image viewer"},{"location":"visualization_modules/image_raw_data/image_viewer.html#description","text":"Visualization \u2192 Image viewer This visualization module provides an overview of imaging data. The interactive imaging plot [1] allows to choose any pixel and explore related spectrum. In [3] user can choose feature from a feature list to be depicted on a scan (prior feature detection is required). [2] gives information about file and imaging parameters. Olena Mokshyna","title":"Description"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html","text":"Ion mobility raw data overview (LC-IMS-MS) \u00b6 Description \u00b6 Visualization \u2192 Ion mobility raw data overview The \"Ion mobility raw data visualization\" module allow a comprehensive navigation of the complex LC-IM-MS raw data. The screenshot belows shows an example of LC-IM-MS data acquired with a Bruker timsTOF instrument: The main window consists of 5 panels and a set of displaying parameters. All the panels are interconnected, which means that moving the cursor in one panel, automatically updates the others. Cursors are displayed as light-blue solid lines in the panels. Summed frame spectrum panel [1] \u00b6 The MS spectrum corresponding to each frame is shown in this panel. The displayed MS spectrum is the sum of all the mobility scans acquired over that frame (see Ion mobility spectrometry terminology ). BPC panel [2] \u00b6 In this panel, the base peak chromatogram is displayed. Each data point corresponds to an individual frame . Moving the cursor frame-by-frame automatically updateds the 'frame heatmap' and 'summed frame spectrum' panels. Moving the cursor frame-by-frame automatically updateds the 'summed frame spectrum' panels as changing data point in regular LC-MS data would display a different MS scan. Since each frame is made of several mobily scans , the 'mobilogram chart' and 'frame heatmap' panels automatically updates too. Note . It is currently not possible to display the TIC chromatogram ) Mobility scan [3] \u00b6 Mobilogram chart [4] \u00b6 Frame heatmap [5] \u00b6 Ion trace chart [6] \u00b6 Displaying parameters [6] \u00b6 Mobility scan noise level : This parameter controls the signals shown in the XXX panels (panel n\u00b0X). For example, a noise level of 5.0E1 will show only the signals above this value (see below) Frame noise level : This parameter sets a threshold for the signals shown in the \"Summed frame spectrum panel\" (panel n\u00b0X). Signals from MS spectra acquired over the same frame are summed and shown m/z tolerance Scan selection Retention time width Mobilogram bin width (abs) EIC/mobilogram ranges Olena Mokshyna (51.47%), SteffenHeu (4.41%), tdamiani (44.12%)","title":"Ion mobility data visualisation"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#ion-mobility-raw-data-overview-lc-ims-ms","text":"","title":"Ion mobility raw data overview (LC-IMS-MS)"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#description","text":"Visualization \u2192 Ion mobility raw data overview The \"Ion mobility raw data visualization\" module allow a comprehensive navigation of the complex LC-IM-MS raw data. The screenshot belows shows an example of LC-IM-MS data acquired with a Bruker timsTOF instrument: The main window consists of 5 panels and a set of displaying parameters. All the panels are interconnected, which means that moving the cursor in one panel, automatically updates the others. Cursors are displayed as light-blue solid lines in the panels.","title":"Description"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#summed-frame-spectrum-panel-1","text":"The MS spectrum corresponding to each frame is shown in this panel. The displayed MS spectrum is the sum of all the mobility scans acquired over that frame (see Ion mobility spectrometry terminology ).","title":"Summed frame spectrum panel [1]"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#bpc-panel-2","text":"In this panel, the base peak chromatogram is displayed. Each data point corresponds to an individual frame . Moving the cursor frame-by-frame automatically updateds the 'frame heatmap' and 'summed frame spectrum' panels. Moving the cursor frame-by-frame automatically updateds the 'summed frame spectrum' panels as changing data point in regular LC-MS data would display a different MS scan. Since each frame is made of several mobily scans , the 'mobilogram chart' and 'frame heatmap' panels automatically updates too. Note . It is currently not possible to display the TIC chromatogram )","title":"BPC panel [2]"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#mobility-scan-3","text":"","title":"Mobility scan [3]"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#mobilogram-chart-4","text":"","title":"Mobilogram chart [4]"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#frame-heatmap-5","text":"","title":"Frame heatmap [5]"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#ion-trace-chart-6","text":"","title":"Ion trace chart [6]"},{"location":"visualization_modules/ims_raw_data_overview/IM-data-visualisation.html#displaying-parameters-6","text":"Mobility scan noise level : This parameter controls the signals shown in the XXX panels (panel n\u00b0X). For example, a noise level of 5.0E1 will show only the signals above this value (see below) Frame noise level : This parameter sets a threshold for the signals shown in the \"Summed frame spectrum panel\" (panel n\u00b0X). Signals from MS spectra acquired over the same frame are summed and shown m/z tolerance Scan selection Retention time width Mobilogram bin width (abs) EIC/mobilogram ranges Olena Mokshyna (51.47%), SteffenHeu (4.41%), tdamiani (44.12%)","title":"Displaying parameters [6]"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html","text":"Interactive ion identity molecular networks \u00b6 Description \u00b6 Visualization \u2192 Interactive ion identity molecular networks Molecular networking connects mass spectra of molecules based on the similarity of their fragmentation patterns. However, during ionization, molecules commonly form multiple ion species with different fragmentation behavior. As a result, the fragmentation spectra of these ion species often remain unconnected in tandem mass spectrometry-based molecular networks, leading to redundant and disconnected sub-networks of the same compound classes. To overcome this bottleneck, MZmine employes Ion Identity Molecular Networking (IIMN) module. This module unites chromatographic peak shape correlation analysis with molecular networks, which is able to connect and collapse different ion species of the same molecule. This feature relationships improve network connectivity for structurally related molecules. This module can be used to reveal unknown ion-ligand complexes, enhance annotation within molecular networks, and facilitate the expansion of spectral reference libraries. Using IIMN it is possible to query GNPS and other spectral libraries for matches. More detailed description of theory behind IIMN can be found in the following video: Parameters \u00b6 Only best networks \u00b6 Only the networks that only contain first ranked ion identities for all rows. Collapse nodes \u00b6 Collapse all nodes into neutral molecule nodes. Connect by relations \u00b6 Connect neutral molecule nodes by network relations. MS1 feature edges \u00b6 Include feature correlation edges. MS2 similarity edges \u00b6 Show MS2 similarity edges. Olena Mokshyna","title":"Interactive Ion Identity Molecular Networks"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#interactive-ion-identity-molecular-networks","text":"","title":"Interactive ion identity molecular networks"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#description","text":"Visualization \u2192 Interactive ion identity molecular networks Molecular networking connects mass spectra of molecules based on the similarity of their fragmentation patterns. However, during ionization, molecules commonly form multiple ion species with different fragmentation behavior. As a result, the fragmentation spectra of these ion species often remain unconnected in tandem mass spectrometry-based molecular networks, leading to redundant and disconnected sub-networks of the same compound classes. To overcome this bottleneck, MZmine employes Ion Identity Molecular Networking (IIMN) module. This module unites chromatographic peak shape correlation analysis with molecular networks, which is able to connect and collapse different ion species of the same molecule. This feature relationships improve network connectivity for structurally related molecules. This module can be used to reveal unknown ion-ligand complexes, enhance annotation within molecular networks, and facilitate the expansion of spectral reference libraries. Using IIMN it is possible to query GNPS and other spectral libraries for matches. More detailed description of theory behind IIMN can be found in the following video:","title":"Description"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#parameters","text":"","title":"Parameters"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#only-best-networks","text":"Only the networks that only contain first ranked ion identities for all rows.","title":"Only best networks"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#collapse-nodes","text":"Collapse all nodes into neutral molecule nodes.","title":"Collapse nodes"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#connect-by-relations","text":"Connect neutral molecule nodes by network relations.","title":"Connect by relations"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#ms1-feature-edges","text":"Include feature correlation edges.","title":"MS1 feature edges"},{"location":"visualization_modules/interactive_ion_id_netw/interactive_ion_id_netw.html#ms2-similarity-edges","text":"Show MS2 similarity edges. Olena Mokshyna","title":"MS2 similarity edges"},{"location":"visualization_modules/msmsplot/msms-plot.html","text":"MS/MS plot \u00b6 Description \u00b6 Visualization \u2192 MS/MS scatter plot This module provides a colored scatter plot of the MS/MS data. There are 4 options for X and Y axes: retention time, precursor ion m/z, product ion m/z, neutral loss and 3 options for Z axis (color): precursor ion intensity, product ion intensity, retention time. The module additionally allows you to filter ions by their intensities and to perform diagnostic fragmentation filtering. In order to focus on the values of interest you can highlight specific data points and sort them by color axis. This tool can be very useful to get an overview of large amounts of MS/MS data by tuning parameters and filters. Parameters \u00b6 Raw data file \u00b6 Selection of the raw data file to visualize. Only one file can be selected. X axis \u00b6 Selection of the values for X axis. There are 4 options available: Retention time, Precursor ion m/z, Product ion m/z, Neutral loss. Y axis \u00b6 Selection of the values for Y axis. Options are the same as for X axis. Z axis \u00b6 Selection of the vales for Z axis. There are 3 options available: Precursor ion intensity, Product ion intensity, Retention time. MS level \u00b6 MS level of the scans to be plotted. Retention time \u00b6 Retention time range. m/z range \u00b6 Range of m/z values for precursor ions in MSn scans. m/z tolerance \u00b6 Maximum allowed difference between two m/z values to be considered same. Intensities filtering \u00b6 Optional parameter to filter ions by intensity. There are 3 different ways of filtering: Number of best fragments - Number of ions with highest intensities from each scan to be visualized. For example 5(for each scan 5 ions with highest intensities will be plotted). Base peak percent, % - Ions with intensity values lower than the given percent of base peak intensity will be plotted. For example 95(ions with intensity values lower than 0.95 multiplied by base peak intensity will not be plotted). Intensity threshold - Ions having intensities lower than the given value will not be plotted. For example 6.0E6(ions with intensity values lower than 6.0E6 will not be plotted). Diagnostic fragmentation filtering \u00b6 Optional parameter for diagnostic fragmentation filtering described below. It has 2 subparameters: diagnostic product ions and diagnostic neutral loss values. Scans not containing any ion satisfying each input criterion will not be considered for the visualization. Diagnostic fragmentation filtering \u00b6 Due to common structural features, compounds within the same class undergo similar MS/MS fragmentation and as a result of many identical product ions and/or neutral losses. Diagnostic fragmentation filter (product ion filter) is a post-acquisition approach to screen LC-MS/MS datasets for entire classes of both known and unknown natural products. This tool searches all MS/MS spectra for product ions and/or neutral losses that has defined as being diagnostic for the entire class of compounds. In other words it screens LC-MS/MS datasets for MS/MS spectra containing production ions and/or neutral losses that are specific to that class of compounds. The user defines the diagnostic product ions and/or the diagnostic neutral loss values (Da) to use in the filtering. The user can also define the minimum diagnostic ion intensity (% base peak) to use in the filtering. If a recurrent neutral loss occurs, a line pattern in the plot can be observed. If compounds carrying those diagnostic product ions and/or the neutral loss values are detected the resulting plot will show their product ion m/z and precusor ion m/z. Additionally, an output file may be specified that will output the results of the filtering. For a detailed view of diagnostic fragmentation filtering: Walsh, Jacob P., et al. \"Diagnostic Fragmentation Filtering for the Discovery of New Chaetoglobosins and Cytochalasins.\" Rapid Communications in Mass Spectrometry (2018) . Functionality \u00b6 This plot is using the third part library JfreeChart for its basic functionality. Drag the mouse from left to right - selecting the area to zoom Drag the mouse from right to left - zoom out Select combo boxes below - change axes types Hold the mouse on data point - show detailed information in a tooltip Double click on data point - show spectrum plot - highlight points representing ions with specific values given by input ranges (Note: colors of range input boxes determine the highlighting color, green color denotes ions satisfying both ranges) - show intense points in front - show pale points in front Olena Mokshyna (26.19%), Robin Schmid (1.19%), Roman Bushuiev (72.62%)","title":"MSMS Visualizer"},{"location":"visualization_modules/msmsplot/msms-plot.html#msms-plot","text":"","title":"MS/MS plot"},{"location":"visualization_modules/msmsplot/msms-plot.html#description","text":"Visualization \u2192 MS/MS scatter plot This module provides a colored scatter plot of the MS/MS data. There are 4 options for X and Y axes: retention time, precursor ion m/z, product ion m/z, neutral loss and 3 options for Z axis (color): precursor ion intensity, product ion intensity, retention time. The module additionally allows you to filter ions by their intensities and to perform diagnostic fragmentation filtering. In order to focus on the values of interest you can highlight specific data points and sort them by color axis. This tool can be very useful to get an overview of large amounts of MS/MS data by tuning parameters and filters.","title":"Description"},{"location":"visualization_modules/msmsplot/msms-plot.html#parameters","text":"","title":"Parameters"},{"location":"visualization_modules/msmsplot/msms-plot.html#raw-data-file","text":"Selection of the raw data file to visualize. Only one file can be selected.","title":"Raw data file"},{"location":"visualization_modules/msmsplot/msms-plot.html#x-axis","text":"Selection of the values for X axis. There are 4 options available: Retention time, Precursor ion m/z, Product ion m/z, Neutral loss.","title":"X axis"},{"location":"visualization_modules/msmsplot/msms-plot.html#y-axis","text":"Selection of the values for Y axis. Options are the same as for X axis.","title":"Y axis"},{"location":"visualization_modules/msmsplot/msms-plot.html#z-axis","text":"Selection of the vales for Z axis. There are 3 options available: Precursor ion intensity, Product ion intensity, Retention time.","title":"Z axis"},{"location":"visualization_modules/msmsplot/msms-plot.html#ms-level","text":"MS level of the scans to be plotted.","title":"MS level"},{"location":"visualization_modules/msmsplot/msms-plot.html#retention-time","text":"Retention time range.","title":"Retention time"},{"location":"visualization_modules/msmsplot/msms-plot.html#mz-range","text":"Range of m/z values for precursor ions in MSn scans.","title":"m/z range"},{"location":"visualization_modules/msmsplot/msms-plot.html#mz-tolerance","text":"Maximum allowed difference between two m/z values to be considered same.","title":"m/z tolerance"},{"location":"visualization_modules/msmsplot/msms-plot.html#intensities-filtering","text":"Optional parameter to filter ions by intensity. There are 3 different ways of filtering: Number of best fragments - Number of ions with highest intensities from each scan to be visualized. For example 5(for each scan 5 ions with highest intensities will be plotted). Base peak percent, % - Ions with intensity values lower than the given percent of base peak intensity will be plotted. For example 95(ions with intensity values lower than 0.95 multiplied by base peak intensity will not be plotted). Intensity threshold - Ions having intensities lower than the given value will not be plotted. For example 6.0E6(ions with intensity values lower than 6.0E6 will not be plotted).","title":"Intensities filtering"},{"location":"visualization_modules/msmsplot/msms-plot.html#diagnostic-fragmentation-filtering","text":"Optional parameter for diagnostic fragmentation filtering described below. It has 2 subparameters: diagnostic product ions and diagnostic neutral loss values. Scans not containing any ion satisfying each input criterion will not be considered for the visualization.","title":"Diagnostic fragmentation filtering"},{"location":"visualization_modules/msmsplot/msms-plot.html#diagnostic-fragmentation-filtering_1","text":"Due to common structural features, compounds within the same class undergo similar MS/MS fragmentation and as a result of many identical product ions and/or neutral losses. Diagnostic fragmentation filter (product ion filter) is a post-acquisition approach to screen LC-MS/MS datasets for entire classes of both known and unknown natural products. This tool searches all MS/MS spectra for product ions and/or neutral losses that has defined as being diagnostic for the entire class of compounds. In other words it screens LC-MS/MS datasets for MS/MS spectra containing production ions and/or neutral losses that are specific to that class of compounds. The user defines the diagnostic product ions and/or the diagnostic neutral loss values (Da) to use in the filtering. The user can also define the minimum diagnostic ion intensity (% base peak) to use in the filtering. If a recurrent neutral loss occurs, a line pattern in the plot can be observed. If compounds carrying those diagnostic product ions and/or the neutral loss values are detected the resulting plot will show their product ion m/z and precusor ion m/z. Additionally, an output file may be specified that will output the results of the filtering. For a detailed view of diagnostic fragmentation filtering: Walsh, Jacob P., et al. \"Diagnostic Fragmentation Filtering for the Discovery of New Chaetoglobosins and Cytochalasins.\" Rapid Communications in Mass Spectrometry (2018) .","title":"Diagnostic fragmentation filtering"},{"location":"visualization_modules/msmsplot/msms-plot.html#functionality","text":"This plot is using the third part library JfreeChart for its basic functionality. Drag the mouse from left to right - selecting the area to zoom Drag the mouse from right to left - zoom out Select combo boxes below - change axes types Hold the mouse on data point - show detailed information in a tooltip Double click on data point - show spectrum plot - highlight points representing ions with specific values given by input ranges (Note: colors of range input boxes determine the highlighting color, green color denotes ions satisfying both ranges) - show intense points in front - show pale points in front Olena Mokshyna (26.19%), Robin Schmid (1.19%), Roman Bushuiev (72.62%)","title":"Functionality"},{"location":"visualization_modules/processed_additional/processed_additional.html","text":"Scatter plot \u00b6 Description \u00b6 Visualization \u2192 Scatter plot This tool shows a scatter plot with data from identified peaks in aligned feature list. A search for a peak can be done using three options (name, retention time and m/z value). Correlated features \\(\\Delta\\) m/z histogram \u00b6 Description \u00b6 Visualization \u2192 Correlated features \\(\\Delta\\) m/z histogram This module plots all m/z deltas between correlated features in a histogram and offers a Gaussian fit. Parameters \u00b6 Minimum Pearson correlation \u00b6 Minimum Pearson correlation of feature shapes. Limit delta to m/z \u00b6 Maximum m/z delta is the m/z of the smaller ion (feature list row). m/z bin width \u00b6 Binning of m/z values for feature picking Append to file \u00b6 Append the correlated features delta m/z to a csv file. Correlation coefficient histogram \u00b6 Description \u00b6 This module is being updated. Some newer functionality might not be documented. This module allows to plot all correlations between feature shapes. Parameters \u00b6 m/z bin width \u00b6 Binning of m/z values for feature picking Feature intensity plot \u00b6 Description \u00b6 This module has a known bug and is being updated, which might affect its functionality. Visualization \u2192 Feature intensity plot This plot allows to explore specific features against the raw data. Parameters \u00b6 Data files \u00b6 Selects the raw data files from where the peaks were detected X axis value \u00b6 X axis display the raw data file name or the parameter defined in the \"set sample parameters\" window X axis value \u00b6 The user can choose from peak's height, area or retention time value to display in this axis. Peaks \u00b6 The user can select the peaks to use in this plot. Kendrick mass plot \u00b6 Description \u00b6 Visualization \u2192 Kendrick mass plot In 1963 Kendrick published his idea of a mass scale, the so-called Kendrick mass scale, which is based on defining the mass of CH2 as 14.0000 u. The Kendrick mass scale is calculated by multiplying the IUPAC mass scale with the factor 14.0000 u/14.01565 u = 0.9988834. This results in the same mass defect for homologous components, the so-called Kendrick mass defect (KMD) . The KMD is defined as the \\(\\Delta\\) of a nominal Kendrick mass and its associated Kendrick mass. Using the Kendrick mass scale has the purpose of data reduction. \\[KM(R)=m/z\\cdot\\frac{round(R)}{R}\\] \\[KMD(R)=round(KM(R))-KM(R)\\] where \\(KM\\) is Kendrick mass, \\(KMD\\) - Kendrick mass defect, \\(R\\) - exact mass of selected base unit More information here or at https://en.wikipedia.org/wiki/Kendrick_mass . If you use this module for your analysis or visualization, please cite: Three\u2010dimensional Kendrick mass plots as a tool for graphical lipid identification. A. Korf, C. Vosse, R. Schmid, P. O. Helmer, V. Jeck, H. Hayen, Rapid Communications in Mass Spectrometry 32.12 (2018): 981-991. Detailed functionality \u00b6 This module allows to create 2 and 3 dimensional Kendrick mass plots. All possible feature characteristics can be plotted in a third dimension. Charge dependent Kendrick mass plots \u00b6 Multiply charged ions can cause splits in Kendrick mass plot. Fouquet et al. have shown considering the charge for the calculation of the KM can help to overcome this problem through clustering of features. \\[KM(R,Z)=Z\\cdot KM(R)=Z\\cdot m/z\\cdot \\frac{round(R)}{R}\\] where \\(Z\\) is charge. Fouquet, Thierry NJ, et al. \"On the Kendrick Mass Defect Plots of Multiply Charged Polymer Ions: Splits, Misalignments, and How to Correct Them.\" Journal of The American Society for Mass Spectrometry 29.8 (2018): 1611-1626. Resolution enhanced Kendrick mass defect plots \u00b6 Fouquet and Sato have shown that a fractional base unit (ivisor) can enhance the resolution of Kendrick mass plots. \\[X>1, KM(R,X)=m/z\\cdot \\frac{round(R/X)}{R/X}\\] where \\(X\\) is a fractional base unit. Fouquet, Thierry, and Hiroaki Sato. \"Extension of the Kendrick mass defect analysis of homopolymers to low resolution and high mass range mass spectra using fractional base units.\" Analytical chemistry 89.5 (2017): 2682-2686. Combining charge and fractional base unit (Divisor) \u00b6 If both charge and fractional base unit are changed, the following equation is used: \\[KM(R,Z,X)=Z\\cdot KM(RX)=Z\\cdot m/z\\cdot \\frac{round(R/X)}{R/X}\\] Fouquet, Thierry NJ, et al. \"On the Kendrick Mass Defect Plots of Multiply Charged Polymer Ions: Splits, Misalignments, and How to Correct Them.\" Journal of The American Society for Mass Spectrometry 29.8 (2018): 1611-1626. Fouquet, Thierry, Takaya Satoh, and Hiroaki Sato. \"First gut instincts are always right: the resolution required for a mass defect analysis of polymer ions can be as low as oligomeric.\" Analytical chemistry 90.4 (2018): 2404-2408. Remainders of Kendrick masses (RKM) \u00b6 Another option to increase the resolution of Kendrick mass plots is the by Fouquet et al. proposed concept of RKM (remainders of Kendrick masses). By clicking the KMD/RKM button in the toolbar on the right side, KMDs are transformed to RKMs. \\[RKM(R)=\\Bigg\\{\\frac{KM(R)}{round(R)}\\Bigg\\}\\] with \\(\\{ \\}\\) being the fractional part function defined as \\(x=x-floor(x)\\) Parameters \u00b6 Peak list \u00b6 Select the targeted peak list. Peaks \u00b6 Add peaks from the peak list. Kendrick mass base for y-Axis \u00b6 Enter a sum formula which will be used as Kendrick mass base for the y-Axis. X-axis value \u00b6 Select which parameters you want to display on the X-Axis (Kendrick mass (KM) or m/z). Kendrick mass base for x-Axis \u00b6 If you want to display a Kendrick mass defect on the x-axis, check the check box and enter a sum formula as Kendrick mass base. Z-axis value \u00b6 Select which parameters you want to display in the third dimension. If you select \"none\", a 2D Kendrick mass plot will be generated. Kendrick mass base for Z-Axis \u00b6 If you want to display a Kendrick mass defect on the z-axis in form of a heatmap, check the check box and enter a sum formula as Kendrick mass base. Z-axis scale value \u00b6 Choose the bounds for the Z-axis. \"Percentile\" allows to exclude values of a selected percentile bellow and/or above from the paint scale. Values below will be displayed in black, values above will be displayed in magenta. \"Custom\" allows to set custom ranges. Range for z-axis scale \u00b6 Enter lower bound left and higher bound right. If you have choosen percentile for Z-axis scale the values must be between 0 and 100. If you enter 0 and 100, all values will be included in the paint scale. Heatmap style \u00b6 Select the style of your paint scale. You can choose between rainbow and different monochrome color coded paint scales. Van Krevelen diagram \u00b6 Description \u00b6 Van Krevelen diagrams are graphical plots developed by Dirk Willem van Krevelen (chemist and professor of fuel technology at the TU Delft) that are used to assess the origin and maturity of kerogen and petroleum. The diagram cross-plots the hydrogen:carbon (hydrogen index) as a function of the oxygen:carbon (oxygen index) atomic ratios of carbon compounds. Van Krevelen, D.W. (1950). \"Graphical-statistical method for the study of structure and reaction processes of coal\", Fuel, 29, 269-84 https://en.wikipedia.org/wiki/Van_Krevelen_diagram Parameters \u00b6 Peaks \u00b6 Select peaks from the feature list. Z-Axis \u00b6 Select which parameters you want to display in the third dimension. If you select \"none\", a 2D Van Krevelen diagram will be generated. Color scale \u00b6 Select the style of your paint scale. You can choose between rainbow and monochrome color-coded scales. Olena Mokshyna","title":"Additional tools"},{"location":"visualization_modules/processed_additional/processed_additional.html#scatter-plot","text":"","title":"Scatter plot"},{"location":"visualization_modules/processed_additional/processed_additional.html#description","text":"Visualization \u2192 Scatter plot This tool shows a scatter plot with data from identified peaks in aligned feature list. A search for a peak can be done using three options (name, retention time and m/z value).","title":"Description"},{"location":"visualization_modules/processed_additional/processed_additional.html#correlated-features-deltamz-histogram","text":"","title":"Correlated features \\(\\Delta\\)m/z histogram"},{"location":"visualization_modules/processed_additional/processed_additional.html#description_1","text":"Visualization \u2192 Correlated features \\(\\Delta\\) m/z histogram This module plots all m/z deltas between correlated features in a histogram and offers a Gaussian fit.","title":"Description"},{"location":"visualization_modules/processed_additional/processed_additional.html#parameters","text":"","title":"Parameters"},{"location":"visualization_modules/processed_additional/processed_additional.html#minimum-pearson-correlation","text":"Minimum Pearson correlation of feature shapes.","title":"Minimum Pearson correlation"},{"location":"visualization_modules/processed_additional/processed_additional.html#limit-delta-to-mz","text":"Maximum m/z delta is the m/z of the smaller ion (feature list row).","title":"Limit delta to m/z"},{"location":"visualization_modules/processed_additional/processed_additional.html#mz-bin-width","text":"Binning of m/z values for feature picking","title":"m/z bin width"},{"location":"visualization_modules/processed_additional/processed_additional.html#append-to-file","text":"Append the correlated features delta m/z to a csv file.","title":"Append to file"},{"location":"visualization_modules/processed_additional/processed_additional.html#correlation-coefficient-histogram","text":"","title":"Correlation coefficient histogram"},{"location":"visualization_modules/processed_additional/processed_additional.html#description_2","text":"This module is being updated. Some newer functionality might not be documented. This module allows to plot all correlations between feature shapes.","title":"Description"},{"location":"visualization_modules/processed_additional/processed_additional.html#parameters_1","text":"","title":"Parameters"},{"location":"visualization_modules/processed_additional/processed_additional.html#mz-bin-width_1","text":"Binning of m/z values for feature picking","title":"m/z bin width"},{"location":"visualization_modules/processed_additional/processed_additional.html#feature-intensity-plot","text":"","title":"Feature intensity plot"},{"location":"visualization_modules/processed_additional/processed_additional.html#description_3","text":"This module has a known bug and is being updated, which might affect its functionality. Visualization \u2192 Feature intensity plot This plot allows to explore specific features against the raw data.","title":"Description"},{"location":"visualization_modules/processed_additional/processed_additional.html#parameters_2","text":"","title":"Parameters"},{"location":"visualization_modules/processed_additional/processed_additional.html#data-files","text":"Selects the raw data files from where the peaks were detected","title":"Data files"},{"location":"visualization_modules/processed_additional/processed_additional.html#x-axis-value","text":"X axis display the raw data file name or the parameter defined in the \"set sample parameters\" window","title":"X axis value"},{"location":"visualization_modules/processed_additional/processed_additional.html#x-axis-value_1","text":"The user can choose from peak's height, area or retention time value to display in this axis.","title":"X axis value"},{"location":"visualization_modules/processed_additional/processed_additional.html#peaks","text":"The user can select the peaks to use in this plot.","title":"Peaks"},{"location":"visualization_modules/processed_additional/processed_additional.html#kendrick-mass-plot","text":"","title":"Kendrick mass plot"},{"location":"visualization_modules/processed_additional/processed_additional.html#description_4","text":"Visualization \u2192 Kendrick mass plot In 1963 Kendrick published his idea of a mass scale, the so-called Kendrick mass scale, which is based on defining the mass of CH2 as 14.0000 u. The Kendrick mass scale is calculated by multiplying the IUPAC mass scale with the factor 14.0000 u/14.01565 u = 0.9988834. This results in the same mass defect for homologous components, the so-called Kendrick mass defect (KMD) . The KMD is defined as the \\(\\Delta\\) of a nominal Kendrick mass and its associated Kendrick mass. Using the Kendrick mass scale has the purpose of data reduction. \\[KM(R)=m/z\\cdot\\frac{round(R)}{R}\\] \\[KMD(R)=round(KM(R))-KM(R)\\] where \\(KM\\) is Kendrick mass, \\(KMD\\) - Kendrick mass defect, \\(R\\) - exact mass of selected base unit More information here or at https://en.wikipedia.org/wiki/Kendrick_mass . If you use this module for your analysis or visualization, please cite: Three\u2010dimensional Kendrick mass plots as a tool for graphical lipid identification. A. Korf, C. Vosse, R. Schmid, P. O. Helmer, V. Jeck, H. Hayen, Rapid Communications in Mass Spectrometry 32.12 (2018): 981-991.","title":"Description"},{"location":"visualization_modules/processed_additional/processed_additional.html#detailed-functionality","text":"This module allows to create 2 and 3 dimensional Kendrick mass plots. All possible feature characteristics can be plotted in a third dimension.","title":"Detailed functionality"},{"location":"visualization_modules/processed_additional/processed_additional.html#charge-dependent-kendrick-mass-plots","text":"Multiply charged ions can cause splits in Kendrick mass plot. Fouquet et al. have shown considering the charge for the calculation of the KM can help to overcome this problem through clustering of features. \\[KM(R,Z)=Z\\cdot KM(R)=Z\\cdot m/z\\cdot \\frac{round(R)}{R}\\] where \\(Z\\) is charge. Fouquet, Thierry NJ, et al. \"On the Kendrick Mass Defect Plots of Multiply Charged Polymer Ions: Splits, Misalignments, and How to Correct Them.\" Journal of The American Society for Mass Spectrometry 29.8 (2018): 1611-1626.","title":"Charge dependent Kendrick mass plots"},{"location":"visualization_modules/processed_additional/processed_additional.html#resolution-enhanced-kendrick-mass-defect-plots","text":"Fouquet and Sato have shown that a fractional base unit (ivisor) can enhance the resolution of Kendrick mass plots. \\[X>1, KM(R,X)=m/z\\cdot \\frac{round(R/X)}{R/X}\\] where \\(X\\) is a fractional base unit. Fouquet, Thierry, and Hiroaki Sato. \"Extension of the Kendrick mass defect analysis of homopolymers to low resolution and high mass range mass spectra using fractional base units.\" Analytical chemistry 89.5 (2017): 2682-2686.","title":"Resolution enhanced Kendrick mass defect plots"},{"location":"visualization_modules/processed_additional/processed_additional.html#combining-charge-and-fractional-base-unit-divisor","text":"If both charge and fractional base unit are changed, the following equation is used: \\[KM(R,Z,X)=Z\\cdot KM(RX)=Z\\cdot m/z\\cdot \\frac{round(R/X)}{R/X}\\] Fouquet, Thierry NJ, et al. \"On the Kendrick Mass Defect Plots of Multiply Charged Polymer Ions: Splits, Misalignments, and How to Correct Them.\" Journal of The American Society for Mass Spectrometry 29.8 (2018): 1611-1626. Fouquet, Thierry, Takaya Satoh, and Hiroaki Sato. \"First gut instincts are always right: the resolution required for a mass defect analysis of polymer ions can be as low as oligomeric.\" Analytical chemistry 90.4 (2018): 2404-2408.","title":"Combining charge and fractional base unit (Divisor)"},{"location":"visualization_modules/processed_additional/processed_additional.html#remainders-of-kendrick-masses-rkm","text":"Another option to increase the resolution of Kendrick mass plots is the by Fouquet et al. proposed concept of RKM (remainders of Kendrick masses). By clicking the KMD/RKM button in the toolbar on the right side, KMDs are transformed to RKMs. \\[RKM(R)=\\Bigg\\{\\frac{KM(R)}{round(R)}\\Bigg\\}\\] with \\(\\{ \\}\\) being the fractional part function defined as \\(x=x-floor(x)\\)","title":"Remainders of Kendrick masses (RKM)"},{"location":"visualization_modules/processed_additional/processed_additional.html#parameters_3","text":"","title":"Parameters"},{"location":"visualization_modules/processed_additional/processed_additional.html#peak-list","text":"Select the targeted peak list.","title":"Peak list"},{"location":"visualization_modules/processed_additional/processed_additional.html#peaks_1","text":"Add peaks from the peak list.","title":"Peaks"},{"location":"visualization_modules/processed_additional/processed_additional.html#kendrick-mass-base-for-y-axis","text":"Enter a sum formula which will be used as Kendrick mass base for the y-Axis.","title":"Kendrick mass base for y-Axis"},{"location":"visualization_modules/processed_additional/processed_additional.html#x-axis-value_2","text":"Select which parameters you want to display on the X-Axis (Kendrick mass (KM) or m/z).","title":"X-axis value"},{"location":"visualization_modules/processed_additional/processed_additional.html#kendrick-mass-base-for-x-axis","text":"If you want to display a Kendrick mass defect on the x-axis, check the check box and enter a sum formula as Kendrick mass base.","title":"Kendrick mass base for x-Axis"},{"location":"visualization_modules/processed_additional/processed_additional.html#z-axis-value","text":"Select which parameters you want to display in the third dimension. If you select \"none\", a 2D Kendrick mass plot will be generated.","title":"Z-axis value"},{"location":"visualization_modules/processed_additional/processed_additional.html#kendrick-mass-base-for-z-axis","text":"If you want to display a Kendrick mass defect on the z-axis in form of a heatmap, check the check box and enter a sum formula as Kendrick mass base.","title":"Kendrick mass base for Z-Axis"},{"location":"visualization_modules/processed_additional/processed_additional.html#z-axis-scale-value","text":"Choose the bounds for the Z-axis. \"Percentile\" allows to exclude values of a selected percentile bellow and/or above from the paint scale. Values below will be displayed in black, values above will be displayed in magenta. \"Custom\" allows to set custom ranges.","title":"Z-axis scale value"},{"location":"visualization_modules/processed_additional/processed_additional.html#range-for-z-axis-scale","text":"Enter lower bound left and higher bound right. If you have choosen percentile for Z-axis scale the values must be between 0 and 100. If you enter 0 and 100, all values will be included in the paint scale.","title":"Range for z-axis scale"},{"location":"visualization_modules/processed_additional/processed_additional.html#heatmap-style","text":"Select the style of your paint scale. You can choose between rainbow and different monochrome color coded paint scales.","title":"Heatmap style"},{"location":"visualization_modules/processed_additional/processed_additional.html#van-krevelen-diagram","text":"","title":"Van Krevelen diagram"},{"location":"visualization_modules/processed_additional/processed_additional.html#description_5","text":"Van Krevelen diagrams are graphical plots developed by Dirk Willem van Krevelen (chemist and professor of fuel technology at the TU Delft) that are used to assess the origin and maturity of kerogen and petroleum. The diagram cross-plots the hydrogen:carbon (hydrogen index) as a function of the oxygen:carbon (oxygen index) atomic ratios of carbon compounds. Van Krevelen, D.W. (1950). \"Graphical-statistical method for the study of structure and reaction processes of coal\", Fuel, 29, 269-84 https://en.wikipedia.org/wiki/Van_Krevelen_diagram","title":"Description"},{"location":"visualization_modules/processed_additional/processed_additional.html#parameters_4","text":"","title":"Parameters"},{"location":"visualization_modules/processed_additional/processed_additional.html#peaks_2","text":"Select peaks from the feature list.","title":"Peaks"},{"location":"visualization_modules/processed_additional/processed_additional.html#z-axis","text":"Select which parameters you want to display in the third dimension. If you select \"none\", a 2D Van Krevelen diagram will be generated.","title":"Z-Axis"},{"location":"visualization_modules/processed_additional/processed_additional.html#color-scale","text":"Select the style of your paint scale. You can choose between rainbow and monochrome color-coded scales. Olena Mokshyna","title":"Color scale"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html","text":"Chromatogram plot \u00b6 Description \u00b6 Visualization \u2192 Chromatogram plot There is a possibility to display chromatographic peaks outside of raw data overview. This standalone two-dimensional plot visualizes TIC/XIC data. All the chromatograms are displayed in the same plot. The x-axis corresponds to retention time and the y-axis is the intensity level of the signal. Parameters \u00b6 Raw data files \u00b6 List of raw data files to display in the TIC visualizer. MS level \u00b6 Scan level (MS1,MS2,... ,MSn) to display in the plot. Plot type \u00b6 TIC or base peak Retention time \u00b6 Retention time (x-axis) range. m/z range \u00b6 Range of m/z values. If this range does not include the entire scan m/z range, the resulting visualizer is XIC type. Selected peaks \u00b6 List of chromatographic peaks to display in the TIC visualizer. This option is available only if a peak list related to the selected raw data file exists in the current project. MS spectrum \u00b6 Visualization \u2192 MS spectrum Displays all the ions from a selected scan. Can be used to explore mass spectrum outside of raw data overview. Only one raw file can be chosen. It shows a plot of two dimensions, where X axis corresponds to m/z value and Y axis is the intensity of the ion signal. Parameters \u00b6 Scan number \u00b6 Choose the scan to visualize 2D visualizer \u00b6 Visualization \u2192 2D plot This tool displays a plot of two dimensions, where X axis corresponds to retention time and Y axis is the m/z value. This visualization of spots in the plot corresponds with the intensity of the data in that region. User can define features from the feature list to be displayed on the plot. Parameters \u00b6 Type of data \u00b6 This plot can use either resampled data as input (faster), or raw data (slower). Scans \u00b6 Here user can set up the level (MS1,MS2,... ,MSn), polarity, retention time, and the other parameters of the scans to be used. m/z \u00b6 Defines range of m/z values. 3D visualizer \u00b6 Description \u00b6 Visualization \u2192 3D plot This tool presents a three dimensional plot where X axis represents the retention time, Y axis the m/z value and Z axis the intensity of the signal. This plot is the collection of all the information from the raw data in a graphical representation. Parameters \u00b6 Scans \u00b6 Here user can set up the level (MS1,MS2,... ,MSn), polarity, retention time, and the other parameters of the scans to be used. m/z range \u00b6 Range of m/z values. Features \u00b6 Features that will be taken as an input. Retention time resolution \u00b6 Number of data points on retention time axis. m/z resolution \u00b6 Number of data points on m/z axis. Scan histogram \u00b6 Description \u00b6 Visualization \u2192 Scan histogram This module creates m/z distribution histograms of all m/z values in mass lists across specified scans. The binning width, in which the m/z values are counted, can be changed dynamically. The number of scans that contain a specific m/z value (bin) are plotted. https://youtu.be/31hwc74vUjA Parameters \u00b6 Scans \u00b6 Here user can set up the level (MS1,MS2,... ,MSn), polarity, retention time, and the other parameters of the scans to be used. m/z \u00b6 Limit the range of the histogram (can improve performance). Signal intensity range \u00b6 Optional parameter Allows to limit signal intensities (can improve performance). Mass defect \u00b6 Optional parameter Filters for mass defects in the signals. Type \u00b6 Type of the histogram to be created. Available options: m/z, Intensity, Intensity (noise recalibrated), Mass defect. Bin width \u00b6 The binning width to count m/z value occurence in scans. Use mobility scans \u00b6 If the input data has ion mobility dimension, this data can be used instead of the data from the summed frames. Scan inject time analysis \u00b6 MS(n) spectra tree \u00b6 Olena Mokshyna","title":"Additional tools"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#chromatogram-plot","text":"","title":"Chromatogram plot"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#description","text":"Visualization \u2192 Chromatogram plot There is a possibility to display chromatographic peaks outside of raw data overview. This standalone two-dimensional plot visualizes TIC/XIC data. All the chromatograms are displayed in the same plot. The x-axis corresponds to retention time and the y-axis is the intensity level of the signal.","title":"Description"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#parameters","text":"","title":"Parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#raw-data-files","text":"List of raw data files to display in the TIC visualizer.","title":"Raw data files"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#ms-level","text":"Scan level (MS1,MS2,... ,MSn) to display in the plot.","title":"MS level"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#plot-type","text":"TIC or base peak","title":"Plot type"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#retention-time","text":"Retention time (x-axis) range.","title":"Retention time"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#mz-range","text":"Range of m/z values. If this range does not include the entire scan m/z range, the resulting visualizer is XIC type.","title":"m/z range"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#selected-peaks","text":"List of chromatographic peaks to display in the TIC visualizer. This option is available only if a peak list related to the selected raw data file exists in the current project.","title":"Selected peaks"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#ms-spectrum","text":"Visualization \u2192 MS spectrum Displays all the ions from a selected scan. Can be used to explore mass spectrum outside of raw data overview. Only one raw file can be chosen. It shows a plot of two dimensions, where X axis corresponds to m/z value and Y axis is the intensity of the ion signal.","title":"MS spectrum"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#parameters_1","text":"","title":"Parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#scan-number","text":"Choose the scan to visualize","title":"Scan number"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#2d-visualizer","text":"Visualization \u2192 2D plot This tool displays a plot of two dimensions, where X axis corresponds to retention time and Y axis is the m/z value. This visualization of spots in the plot corresponds with the intensity of the data in that region. User can define features from the feature list to be displayed on the plot.","title":"2D visualizer"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#parameters_2","text":"","title":"Parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#type-of-data","text":"This plot can use either resampled data as input (faster), or raw data (slower).","title":"Type of data"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#scans","text":"Here user can set up the level (MS1,MS2,... ,MSn), polarity, retention time, and the other parameters of the scans to be used.","title":"Scans"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#mz","text":"Defines range of m/z values.","title":"m/z"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#3d-visualizer","text":"","title":"3D visualizer"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#description_1","text":"Visualization \u2192 3D plot This tool presents a three dimensional plot where X axis represents the retention time, Y axis the m/z value and Z axis the intensity of the signal. This plot is the collection of all the information from the raw data in a graphical representation.","title":"Description"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#parameters_3","text":"","title":"Parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#scans_1","text":"Here user can set up the level (MS1,MS2,... ,MSn), polarity, retention time, and the other parameters of the scans to be used.","title":"Scans"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#mz-range_1","text":"Range of m/z values.","title":"m/z range"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#features","text":"Features that will be taken as an input.","title":"Features"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#retention-time-resolution","text":"Number of data points on retention time axis.","title":"Retention time resolution"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#mz-resolution","text":"Number of data points on m/z axis.","title":"m/z resolution"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#scan-histogram","text":"","title":"Scan histogram"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#description_2","text":"Visualization \u2192 Scan histogram This module creates m/z distribution histograms of all m/z values in mass lists across specified scans. The binning width, in which the m/z values are counted, can be changed dynamically. The number of scans that contain a specific m/z value (bin) are plotted. https://youtu.be/31hwc74vUjA","title":"Description"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#parameters_4","text":"","title":"Parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#scans_2","text":"Here user can set up the level (MS1,MS2,... ,MSn), polarity, retention time, and the other parameters of the scans to be used.","title":"Scans"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#mz_1","text":"Limit the range of the histogram (can improve performance).","title":"m/z"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#signal-intensity-range","text":"Optional parameter Allows to limit signal intensities (can improve performance).","title":"Signal intensity range"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#mass-defect","text":"Optional parameter Filters for mass defects in the signals.","title":"Mass defect"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#type","text":"Type of the histogram to be created. Available options: m/z, Intensity, Intensity (noise recalibrated), Mass defect.","title":"Type"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#bin-width","text":"The binning width to count m/z value occurence in scans.","title":"Bin width"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#use-mobility-scans","text":"If the input data has ion mobility dimension, this data can be used instead of the data from the summed frames.","title":"Use mobility scans"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#scan-inject-time-analysis","text":"","title":"Scan inject time analysis"},{"location":"visualization_modules/raw_data_overview/raw_data_additional.html#msn-spectra-tree","text":"Olena Mokshyna","title":"MS(n) spectra tree"},{"location":"visualization_modules/raw_data_overview/raw_data_overview.html","text":"Raw data overview (LC-MS) \u00b6 Description \u00b6 Visualization \u2192 Raw data overview , or it can be accesed by double-click of left mouse button , or by clicking the right mouse button on MS data files table and choosing Show raw data overview Raw data overview allows user to explore both chromatogram and MS views across all the selected files. By double-clicking on the raw file of interest in the \"MS data files\" tab, Raw data overview tab will open in the main content pane. Raw data overview can either display single or multiple overlaid chromatograms, depending on how many raw files are selected. To allow selection of multiple raw files, click the checkbox near the tab name \"Raw data overview\". The view consists of three panes - chromatogram representation (on the left), mass spectrum (on the right), and table with tabs containing additional information about raw data files. Chromatogram parameters \u00b6 Show XIC To display an extracted ion chromatogram (XIC), the user can tick the \"Show XIC\" box. There are several options for defining the m/z range - from mass, from formula and auto range. \"Setup\" button allows to choose the appropriate plot type. Base peak intensity plot only shows the signal of the most intense mass peak in each MS spectrum, while the Total ion current plot shows the summed signal intensity of all masses at any one retention time point. Spectrum parameters \u00b6 When masses are detected, it is possible to display them on the spectrum by ticking an option \"Show mass list\". Page Contributors \u00b6 Olena Mokshyna (94.44%), lalalana5 (5.56%)","title":"Raw data overview"},{"location":"visualization_modules/raw_data_overview/raw_data_overview.html#raw-data-overview-lc-ms","text":"","title":"Raw data overview (LC-MS)"},{"location":"visualization_modules/raw_data_overview/raw_data_overview.html#description","text":"Visualization \u2192 Raw data overview , or it can be accesed by double-click of left mouse button , or by clicking the right mouse button on MS data files table and choosing Show raw data overview Raw data overview allows user to explore both chromatogram and MS views across all the selected files. By double-clicking on the raw file of interest in the \"MS data files\" tab, Raw data overview tab will open in the main content pane. Raw data overview can either display single or multiple overlaid chromatograms, depending on how many raw files are selected. To allow selection of multiple raw files, click the checkbox near the tab name \"Raw data overview\". The view consists of three panes - chromatogram representation (on the left), mass spectrum (on the right), and table with tabs containing additional information about raw data files.","title":"Description"},{"location":"visualization_modules/raw_data_overview/raw_data_overview.html#chromatogram-parameters","text":"Show XIC To display an extracted ion chromatogram (XIC), the user can tick the \"Show XIC\" box. There are several options for defining the m/z range - from mass, from formula and auto range. \"Setup\" button allows to choose the appropriate plot type. Base peak intensity plot only shows the signal of the most intense mass peak in each MS spectrum, while the Total ion current plot shows the summed signal intensity of all masses at any one retention time point.","title":"Chromatogram parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_overview.html#spectrum-parameters","text":"When masses are detected, it is possible to display them on the spectrum by ticking an option \"Show mass list\".","title":"Spectrum parameters"},{"location":"visualization_modules/raw_data_overview/raw_data_overview.html#page-contributors","text":"Olena Mokshyna (94.44%), lalalana5 (5.56%)","title":"Page Contributors"},{"location":"visualization_modules/visualization_overview/visualization-overview.html","text":"Visualization modules \u00b6 MZmine provides a rangle of interactive visualization tools for analysis of raw and processed data. JFreeChart library is used for majority of plots. Most of the generated plots are interactive. The following functions are available: Use the + or - key on the keyboard to zoom in or out. Scroll with the mouse to zoom in or out. Drag the mouse from left to right to select the area to zoom in. Drag the mouse from right to left to zoom out to the default view. Single click on the y-axis to auto set the intensity to auto height. Double click on the y- or x-axis to reset the zoom to default. In the right part of the plot there is a toolbar. Its functionality is also included in a pop-up menu, which appears when you make right click on the plot area. Olena Mokshyna","title":"Visualization overview"},{"location":"visualization_modules/visualization_overview/visualization-overview.html#visualization-modules","text":"MZmine provides a rangle of interactive visualization tools for analysis of raw and processed data. JFreeChart library is used for majority of plots. Most of the generated plots are interactive. The following functions are available: Use the + or - key on the keyboard to zoom in or out. Scroll with the mouse to zoom in or out. Drag the mouse from left to right to select the area to zoom in. Drag the mouse from right to left to zoom out to the default view. Single click on the y-axis to auto set the intensity to auto height. Double click on the y- or x-axis to reset the zoom to default. In the right part of the plot there is a toolbar. Its functionality is also included in a pop-up menu, which appears when you make right click on the plot area. Olena Mokshyna","title":"Visualization modules"},{"location":"workflows/batch_processing/batch-processing.html","text":"Batch processing \u00b6 Besides the interactive GUI , MZmine allows the user to run processing workflows in an automated manner using the \"batch mode\". Entire processing pipelines (including data import/export) can be run with few clicks, or even through the command-line application. This makes MZmine suitable to be integrated into automated data analysis pipelines (e.g. QC systems). Batch files (XML format) are essentially lists of tasks run by MZmine one after another. Any of the methods available in MZmine 3 can be included in the batch file. How to run batch processing \u00b6 Project Batch mode When a new step is added to the queue its parameter setup dialog is shown. The \"Set paramaters\" button allows the user to modify a step's parameter settings. The \"Clear\" button removes all steps. The \"Load\" and \"Save\" buttons make it possible to read and write batch steps to XML files. The first step of a batch queue is performed on those raw data files and/or peak lists selected by the user. The remaining steps are performed on the results produced by each preceding step (File/Feature list selection must be set to Those created by previous batch step ). For example, if the first step of the batch queue is the ADAP chromatogram builder , it will produce peak lists as a result. If the following step were Peak list deconvolution then it will be performed on the peak lists produced by the preceding Chromatogram builder step. Tip MZmine \"remembers\" the last settings used. Processing wizard \u00b6 The processing wizard is inteded to quickly set up a general workflow for the processing of untargeted LC-MS and LC-IM-MS data. By clicking the \"Set default\" button, default settings for mass and feature detection are also provided according to the selected MS type (Orbitrap or TOF) and LC system (UHPLC or HPLC). Once the desired parameters have been set, hit the \"Build batch\" botton and a pre-populated batch window will open up. Tools Processing wizard Mass spectrometers presets \u00b6 MS type: When TOF is selected, the \"Ion mobility\" can be enabled MS1 and MS2 noise level: Minimum feature height: Scan to scan m/z tolerance: Feature to feature m/z tolerance: HPLC presets \u00b6 Stable ionization across samples: Crop retention time: Max peaks in chromatogram: Min samples per aligned feature: Min # of data points: Approximate feature FWHM: Intra-sample RT tolerance: Inter-sample RT tolerance: Only keep feature with 13C: Original feature list: Export path: Warning The default settings were optimized on sample datasets used during the MZmine 3 development. Although probably suitable for many appications, it is strongly recommended not to blindly rely on them. Rather, optimal processing parameters should be chosen based on the LC-(IM)-MS system performance and data acquisition settings. Olena Mokshyna (3.85%), tdamiani (96.15%)","title":"Batch processing"},{"location":"workflows/batch_processing/batch-processing.html#batch-processing","text":"Besides the interactive GUI , MZmine allows the user to run processing workflows in an automated manner using the \"batch mode\". Entire processing pipelines (including data import/export) can be run with few clicks, or even through the command-line application. This makes MZmine suitable to be integrated into automated data analysis pipelines (e.g. QC systems). Batch files (XML format) are essentially lists of tasks run by MZmine one after another. Any of the methods available in MZmine 3 can be included in the batch file.","title":"Batch processing"},{"location":"workflows/batch_processing/batch-processing.html#how-to-run-batch-processing","text":"Project Batch mode When a new step is added to the queue its parameter setup dialog is shown. The \"Set paramaters\" button allows the user to modify a step's parameter settings. The \"Clear\" button removes all steps. The \"Load\" and \"Save\" buttons make it possible to read and write batch steps to XML files. The first step of a batch queue is performed on those raw data files and/or peak lists selected by the user. The remaining steps are performed on the results produced by each preceding step (File/Feature list selection must be set to Those created by previous batch step ). For example, if the first step of the batch queue is the ADAP chromatogram builder , it will produce peak lists as a result. If the following step were Peak list deconvolution then it will be performed on the peak lists produced by the preceding Chromatogram builder step. Tip MZmine \"remembers\" the last settings used.","title":"How to run batch processing"},{"location":"workflows/batch_processing/batch-processing.html#processing-wizard","text":"The processing wizard is inteded to quickly set up a general workflow for the processing of untargeted LC-MS and LC-IM-MS data. By clicking the \"Set default\" button, default settings for mass and feature detection are also provided according to the selected MS type (Orbitrap or TOF) and LC system (UHPLC or HPLC). Once the desired parameters have been set, hit the \"Build batch\" botton and a pre-populated batch window will open up. Tools Processing wizard","title":"Processing wizard"},{"location":"workflows/batch_processing/batch-processing.html#mass-spectrometers-presets","text":"MS type: When TOF is selected, the \"Ion mobility\" can be enabled MS1 and MS2 noise level: Minimum feature height: Scan to scan m/z tolerance: Feature to feature m/z tolerance:","title":"Mass spectrometers presets"},{"location":"workflows/batch_processing/batch-processing.html#hplc-presets","text":"Stable ionization across samples: Crop retention time: Max peaks in chromatogram: Min samples per aligned feature: Min # of data points: Approximate feature FWHM: Intra-sample RT tolerance: Inter-sample RT tolerance: Only keep feature with 13C: Original feature list: Export path: Warning The default settings were optimized on sample datasets used during the MZmine 3 development. Although probably suitable for many appications, it is strongly recommended not to blindly rely on them. Rather, optimal processing parameters should be chosen based on the LC-(IM)-MS system performance and data acquisition settings. Olena Mokshyna (3.85%), tdamiani (96.15%)","title":"HPLC presets"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html","text":"Untargeted LC-IMS-MS Workflow Overview \u00b6 Compared to regular LC-MS, LC-IM-MS data is more complex due to the additional separation dimension. Since some terms might not be straightforward for new users, a basic explanation of IM separation principles and the terminology used within this documentation is provided here . Supported formats \u00b6 Vendor formats: .tdf (Native Bruker LC-IMS-MS and MALDI-IMS-MSI format) .tsf (Native Bruker MALDI-IMS-MS (single shot) format) .mzML Created via MSConvert from native Bruker data Created via MSConvert from native Waters/Agilent data Feature detection workflows \u00b6 Ion mobility data can be processed in MZmine 3 in two ways. The first few steps are different for the two workflows (see below). LC-IMS-MS workflow via ADAP Chromatogram builder and IMS expander ( recommended) LC-IMS-MS workflow via Ion mobility trace builder / Recursive IMS builder While these lists might seem fairly similar, there are some differences in the processing approach. The LC-IMS-MS workflow builds ion mobility traces from the data in the mobility scans, whilst the LC-MS workflow builds EICs from the summed frames. For ion mobility data imported from .mzML files, accumulated frame spectra have to be built from the individual mobility scans after mass detection . Since the mass detection impacts the computation of accumulated frame spectra in the same way it would impact the ion mobility trace builder , the differences from this workflow and the ADAP workflow will be negligible. However, frame spectra for native Bruker .tdf raw data are summed by the vendor library during file import. Here, the frame spectra are generated from the raw data and thus result in higher intensities, since the low abundant data points on the edges of the mobility and retention time peaks are not cut-off by the mass detection step. (see below) Therefore, the more low abundant compounds might be detected, if the LC-MS workflow is recommended. LC-MS workflow (recommended) \u00b6 LC-IMS-MS data can also be processed via the regular LC-MS modules. If necessary, detected features can be expanded into the mobility dimension. For this workflow, generation of summed frame spectra via the Mobility scan merging module is a mandatory step, if the data was imported from an .mzML file (automatically generated via native Bruker import). Data import Mass detection Mobility scan merging (mzML data) ADAP Chromatogram builder Smoothing in retention time dimension (optional) Resolving in retention time dimension Expanding EICs in mobility dimension Smoothing in mobility dimension (optional) Resolving in mobility dimension Smoothing in rt and mobility dimension (optional) Some recognised features might have rather noisy signals (in rt and mobility dimension) after the mobility resolving step. If smoother shapes are required, the smoothing can be reapplied afterwards. In that case, smoothing can be applied to both dimensions at once. LC-IMS-MS workflow \u00b6 The LC-IMS-MS workflow will directly build ion mobility traces from the raw data in the mobility scans. This workflow does not necessarily require summed frame spectra. However, if extracted ion chromatograms shall be visualized via the Chromatogram visualizer , the frame intensities are used. In case these are not present, the chromatograms will be blank. Note that feature intensities from the LC-IMS-MS workflow might not exactly match the frame chromatograms due to summing being executed prior to thresholding (for native Bruker data). Furthermore, multiple isomers might hide behind a single chromatographic peak. Data import Mass detection Ion mobility trace builder Smoothing in retention time dimension (optional) Resolving in retention time dimension Smoothing in mobility dimension (optional) Resolving in mobility dimension Smoothing in rt and mobility dimension (optional) Some recognised features might have rather noisy signals (in rt and mobility dimension) after the mobility resolving step. If smoother shapes are required, the smoothing can be reapplied afterwards. In that case, smoothing can be applied to both dimensions at once. Graphical comparison of LC-MS and LC-IMS-MS data \u00b6 Data comparison Page Contributors \u00b6 Olena Mokshyna (6.86%), SteffenHeu (88.24%), tdamiani (4.9%)","title":"Untargeted LC-IMS-MS workflow"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#untargeted-lc-ims-ms-workflow-overview","text":"Compared to regular LC-MS, LC-IM-MS data is more complex due to the additional separation dimension. Since some terms might not be straightforward for new users, a basic explanation of IM separation principles and the terminology used within this documentation is provided here .","title":"Untargeted LC-IMS-MS Workflow Overview"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#supported-formats","text":"Vendor formats: .tdf (Native Bruker LC-IMS-MS and MALDI-IMS-MSI format) .tsf (Native Bruker MALDI-IMS-MS (single shot) format) .mzML Created via MSConvert from native Bruker data Created via MSConvert from native Waters/Agilent data","title":"Supported formats"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#feature-detection-workflows","text":"Ion mobility data can be processed in MZmine 3 in two ways. The first few steps are different for the two workflows (see below). LC-IMS-MS workflow via ADAP Chromatogram builder and IMS expander ( recommended) LC-IMS-MS workflow via Ion mobility trace builder / Recursive IMS builder While these lists might seem fairly similar, there are some differences in the processing approach. The LC-IMS-MS workflow builds ion mobility traces from the data in the mobility scans, whilst the LC-MS workflow builds EICs from the summed frames. For ion mobility data imported from .mzML files, accumulated frame spectra have to be built from the individual mobility scans after mass detection . Since the mass detection impacts the computation of accumulated frame spectra in the same way it would impact the ion mobility trace builder , the differences from this workflow and the ADAP workflow will be negligible. However, frame spectra for native Bruker .tdf raw data are summed by the vendor library during file import. Here, the frame spectra are generated from the raw data and thus result in higher intensities, since the low abundant data points on the edges of the mobility and retention time peaks are not cut-off by the mass detection step. (see below) Therefore, the more low abundant compounds might be detected, if the LC-MS workflow is recommended.","title":"Feature detection workflows"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#lc-ms-workflow-recommended","text":"LC-IMS-MS data can also be processed via the regular LC-MS modules. If necessary, detected features can be expanded into the mobility dimension. For this workflow, generation of summed frame spectra via the Mobility scan merging module is a mandatory step, if the data was imported from an .mzML file (automatically generated via native Bruker import). Data import Mass detection Mobility scan merging (mzML data) ADAP Chromatogram builder Smoothing in retention time dimension (optional) Resolving in retention time dimension Expanding EICs in mobility dimension Smoothing in mobility dimension (optional) Resolving in mobility dimension Smoothing in rt and mobility dimension (optional) Some recognised features might have rather noisy signals (in rt and mobility dimension) after the mobility resolving step. If smoother shapes are required, the smoothing can be reapplied afterwards. In that case, smoothing can be applied to both dimensions at once.","title":"LC-MS workflow (recommended)"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#lc-ims-ms-workflow","text":"The LC-IMS-MS workflow will directly build ion mobility traces from the raw data in the mobility scans. This workflow does not necessarily require summed frame spectra. However, if extracted ion chromatograms shall be visualized via the Chromatogram visualizer , the frame intensities are used. In case these are not present, the chromatograms will be blank. Note that feature intensities from the LC-IMS-MS workflow might not exactly match the frame chromatograms due to summing being executed prior to thresholding (for native Bruker data). Furthermore, multiple isomers might hide behind a single chromatographic peak. Data import Mass detection Ion mobility trace builder Smoothing in retention time dimension (optional) Resolving in retention time dimension Smoothing in mobility dimension (optional) Resolving in mobility dimension Smoothing in rt and mobility dimension (optional) Some recognised features might have rather noisy signals (in rt and mobility dimension) after the mobility resolving step. If smoother shapes are required, the smoothing can be reapplied afterwards. In that case, smoothing can be applied to both dimensions at once.","title":"LC-IMS-MS workflow"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#graphical-comparison-of-lc-ms-and-lc-ims-ms-data","text":"Data comparison","title":"Graphical comparison of LC-MS and LC-IMS-MS data"},{"location":"workflows/imsworkflow/ion-mobility-data-processing-workflow.html#page-contributors","text":"Olena Mokshyna (6.86%), SteffenHeu (88.24%), tdamiani (4.9%)","title":"Page Contributors"},{"location":"workflows/imsworkflow/lc-ms-and-lc-ims-ms-data-comparison.html","text":"Graphical comparison of LC-MS and LC-IMS-MS data \u00b6 Classic LC-MS data consists of three dimensions: m/z, intensity, and retention time. At every retention time, a whole mass spectrum is acquired (yellow). Putting all scans together creates a three-dimensional plane. By slicing the three-dimensional data at a single m/z value (+- a value of tolerance), EICs can be created (green). Ion mobility resolved data , on the other hand, consists of a three-dimensional data plane at each retention time. The three dimensions being: m/z, intensity, and mobility (as drift time (ms) or inverse reduced mobility \\(1/K_0 [Vs/(cm^2)]\\) ). The 3D projection of regular LC-MS data can be created by summing all mobility scans of a frame to create a frame spectrum. (see Mobility scan merging ) Olena Mokshyna (73.33%), SteffenHeu (26.67%)","title":"LC-MS and LC-IMS-MS data comparison"},{"location":"workflows/imsworkflow/lc-ms-and-lc-ims-ms-data-comparison.html#graphical-comparison-of-lc-ms-and-lc-ims-ms-data","text":"Classic LC-MS data consists of three dimensions: m/z, intensity, and retention time. At every retention time, a whole mass spectrum is acquired (yellow). Putting all scans together creates a three-dimensional plane. By slicing the three-dimensional data at a single m/z value (+- a value of tolerance), EICs can be created (green). Ion mobility resolved data , on the other hand, consists of a three-dimensional data plane at each retention time. The three dimensions being: m/z, intensity, and mobility (as drift time (ms) or inverse reduced mobility \\(1/K_0 [Vs/(cm^2)]\\) ). The 3D projection of regular LC-MS data can be created by summing all mobility scans of a frame to create a frame spectrum. (see Mobility scan merging ) Olena Mokshyna (73.33%), SteffenHeu (26.67%)","title":"Graphical comparison of LC-MS and LC-IMS-MS data"},{"location":"workflows/lcmsworkflow/lcms-workflow.html","text":"Untargeted LC-MS Workflow \u00b6 The workflow proposed herein is intended as a general pipeline for untargeted LC-MS (or LC\u2212MS/MS) data preprocessing. The main goal is essentially to turn the highly-complex LC-MS raw data into a list of features, and corresponding signal intensity, detected across the analysed samples. Such feature lists can then be exported for further downstream analysis (e.g., identification, search against spectral libraries, statistical analysis, etc.). A schematic representation of the workflow is shown below: Raw data processing \u00b6 The raw data processing consists of essentially two steps: Data import and Mass detection Raw data import \u00b6 Either open (e.g. mzML) and native vendor (e.g. Thermo, Bruker) data formats can be imported in MZmine 3. All the supported formats are listed here (LINK to Doc). For more details see the Data import module. Mass detection \u00b6 This step produces a list (referred to as \"mass list\") of the m/z values found in each MS scan across the LC run that exceed a user-defined threeshold (i.e. noise level). For more details see the Mass detection module. Feature processing \u00b6 The goal of the \"Feature processing\" is to obtain a list of all the detected features (characterized by a RT and m/z value) from the raw LC-MS data. Chromatogram building \u00b6 The first step in the \"Feature processing\" is to build the so-called extracted ion chromatograms (EICs) for each detected mass (see \"Mass detection\"). There are two modules in MZmine 3 that can fulfil this task: ADAP chromatogram builder (widely used) and Grid mass (create docs). The \"detected\" features in each \ufb01le are listed in the so-called \"feature lists\", which are then further processed and aligned to connect corresponding features across all samples. Smoothing in retention time dimension (optional) \u00b6 Depending on the LC peak shape (i.e. data noisiness), the user can perform smoothing in retention time dimension. For more details see the Mass detection and Smoothing modules. Feature resolving \u00b6 Feature resolving step enables separation of co-eluting and overlapping chromatography peaks and as such is one of the pivotal steps in data preprocessing. For more detalis on the algorithm used and parameters settings, see the Local minimum resolver module. 13 C isotope filter (isotope grouper) \u00b6 In order to remove redundant features, such as the ones generated due to the presence of isotopologues, isotope filter should be applied. 13 C isotope filter (isotope grouper) removes 13 C isotope features from the feature list. Use the isotope finder for more sensitive detection of possible isotope signals. Isotope pattern finder \u00b6 Isotope pattern finder searches for the isotope signals of selected chemical elements in the mass list of each feature. The isotope pattern detected by the isotope finder module has priority over the one detected by the isotope filter (grouper) module, if both are available. For more details, see the Isotope pattern finder module. Feature alignment \u00b6 Feature alignment enables alignment of corresponding features across all samples. Join aligner \u00b6 This module aligns detected peaks in different samples through a match score. The score is calculated based on the mass and retention time of each peak and ranges of tolerance stipulated in the parameter setup dialog. For more information, see the join aligner module. Gap-filling \u00b6 Absence of features in some samples can either reflect the truth - the metabolite is absent in the given sample, or it can be due to data preprocessing.To account for this, gap filling is applied as the next step. Gap-filling (peak finder) \u00b6 Gap-filling can be performed on the aligned feature lists to cope with missing features that might be artifacts of the feature-detection process. For more details see the Gap-filling (peak finder) module. Export \u00b6 Depending on the downstream analyses, there are several export options which are accessible through Feature list methods \u2192 Export feature list . For GNPS-Feature based molecular networking, see GNPS-FBMN References \u00b6 Karaman, I.; Climaco Pinto, R.; Gra\u00e7a, G. Chapter Eight - Metabolomics Data Preprocessing: From Raw Data to Features for Statistical Analysis. In Comprehensive Analytical Chemistry; Jaumot, J., Bedia, C., Tauler, R., Eds.; Elsevier, 2018; Vol. 82, pp 197\u2013225. Pluskal, T.; Korf, A.; Smirnov, A.; Schmid, R.; Fallon, T. R.; Du, X.; Weng, J.-K. CHAPTER 7:Metabolomics Data Analysis Using MZmine. In Processing Metabolomics and Proteomics Data with Open Software; 2020; pp 232\u2013254. Du, X.; Smirnov, A.; Pluskal, T.; Jia, W.; Sumner, S. Metabolomics Data Preprocessing Using ADAP and MZmine 2. In Computational Methods and Data Analysis for Metabolomics; Li, S., Ed.; Springer US: New York, NY, 2020; pp 25\u201348. Page Contributors \u00b6 Olena Mokshyna (7.89%), SteffenHeu (28.95%), tdamiani (9.21%), lalalana5 (52.63%), lalalana5 (1.32%)","title":"Untargeted LC-MS workflow"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#untargeted-lc-ms-workflow","text":"The workflow proposed herein is intended as a general pipeline for untargeted LC-MS (or LC\u2212MS/MS) data preprocessing. The main goal is essentially to turn the highly-complex LC-MS raw data into a list of features, and corresponding signal intensity, detected across the analysed samples. Such feature lists can then be exported for further downstream analysis (e.g., identification, search against spectral libraries, statistical analysis, etc.). A schematic representation of the workflow is shown below:","title":"Untargeted LC-MS Workflow"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#raw-data-processing","text":"The raw data processing consists of essentially two steps: Data import and Mass detection","title":"Raw data processing"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#raw-data-import","text":"Either open (e.g. mzML) and native vendor (e.g. Thermo, Bruker) data formats can be imported in MZmine 3. All the supported formats are listed here (LINK to Doc). For more details see the Data import module.","title":"Raw data import"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#mass-detection","text":"This step produces a list (referred to as \"mass list\") of the m/z values found in each MS scan across the LC run that exceed a user-defined threeshold (i.e. noise level). For more details see the Mass detection module.","title":"Mass detection"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#feature-processing","text":"The goal of the \"Feature processing\" is to obtain a list of all the detected features (characterized by a RT and m/z value) from the raw LC-MS data.","title":"Feature processing"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#chromatogram-building","text":"The first step in the \"Feature processing\" is to build the so-called extracted ion chromatograms (EICs) for each detected mass (see \"Mass detection\"). There are two modules in MZmine 3 that can fulfil this task: ADAP chromatogram builder (widely used) and Grid mass (create docs). The \"detected\" features in each \ufb01le are listed in the so-called \"feature lists\", which are then further processed and aligned to connect corresponding features across all samples.","title":"Chromatogram building"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#smoothing-in-retention-time-dimension-optional","text":"Depending on the LC peak shape (i.e. data noisiness), the user can perform smoothing in retention time dimension. For more details see the Mass detection and Smoothing modules.","title":"Smoothing in retention time dimension (optional)"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#feature-resolving","text":"Feature resolving step enables separation of co-eluting and overlapping chromatography peaks and as such is one of the pivotal steps in data preprocessing. For more detalis on the algorithm used and parameters settings, see the Local minimum resolver module.","title":"Feature resolving"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#13c-isotope-filter-isotope-grouper","text":"In order to remove redundant features, such as the ones generated due to the presence of isotopologues, isotope filter should be applied. 13 C isotope filter (isotope grouper) removes 13 C isotope features from the feature list. Use the isotope finder for more sensitive detection of possible isotope signals.","title":"13C isotope filter (isotope grouper)"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#isotope-pattern-finder","text":"Isotope pattern finder searches for the isotope signals of selected chemical elements in the mass list of each feature. The isotope pattern detected by the isotope finder module has priority over the one detected by the isotope filter (grouper) module, if both are available. For more details, see the Isotope pattern finder module.","title":"Isotope pattern finder"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#feature-alignment","text":"Feature alignment enables alignment of corresponding features across all samples.","title":"Feature alignment"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#join-aligner","text":"This module aligns detected peaks in different samples through a match score. The score is calculated based on the mass and retention time of each peak and ranges of tolerance stipulated in the parameter setup dialog. For more information, see the join aligner module.","title":"Join aligner"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#gap-filling","text":"Absence of features in some samples can either reflect the truth - the metabolite is absent in the given sample, or it can be due to data preprocessing.To account for this, gap filling is applied as the next step.","title":"Gap-filling"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#gap-filling-peak-finder","text":"Gap-filling can be performed on the aligned feature lists to cope with missing features that might be artifacts of the feature-detection process. For more details see the Gap-filling (peak finder) module.","title":"Gap-filling (peak finder)"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#export","text":"Depending on the downstream analyses, there are several export options which are accessible through Feature list methods \u2192 Export feature list . For GNPS-Feature based molecular networking, see GNPS-FBMN","title":"Export"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#references","text":"Karaman, I.; Climaco Pinto, R.; Gra\u00e7a, G. Chapter Eight - Metabolomics Data Preprocessing: From Raw Data to Features for Statistical Analysis. In Comprehensive Analytical Chemistry; Jaumot, J., Bedia, C., Tauler, R., Eds.; Elsevier, 2018; Vol. 82, pp 197\u2013225. Pluskal, T.; Korf, A.; Smirnov, A.; Schmid, R.; Fallon, T. R.; Du, X.; Weng, J.-K. CHAPTER 7:Metabolomics Data Analysis Using MZmine. In Processing Metabolomics and Proteomics Data with Open Software; 2020; pp 232\u2013254. Du, X.; Smirnov, A.; Pluskal, T.; Jia, W.; Sumner, S. Metabolomics Data Preprocessing Using ADAP and MZmine 2. In Computational Methods and Data Analysis for Metabolomics; Li, S., Ed.; Springer US: New York, NY, 2020; pp 25\u201348.","title":"References"},{"location":"workflows/lcmsworkflow/lcms-workflow.html#page-contributors","text":"Olena Mokshyna (7.89%), SteffenHeu (28.95%), tdamiani (9.21%), lalalana5 (52.63%), lalalana5 (1.32%)","title":"Page Contributors"}]}